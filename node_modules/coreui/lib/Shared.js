'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _jss = require('jss');

var _jssPresetDefault = require('jss-preset-default');

var _jssPresetDefault2 = _interopRequireDefault(_jssPresetDefault);

var _reactJss = require('react-jss');

var _reactWidgets = require('./jss/react-widgets');

var _reactWidgets2 = _interopRequireDefault(_reactWidgets);

var _apolloWidgets = require('./jss/apollo-widgets');

var _apolloWidgets2 = _interopRequireDefault(_apolloWidgets);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Shared = function Shared() {
  var _this = this;

  _classCallCheck(this, Shared);

  this.attachReactWidgetsSheet = function () {
    _this.jss.createStyleSheet(_reactWidgets2.default, { named: false }).attach();
  };

  this.attachApolloWidgetsSheet = function () {
    _this.jss.createStyleSheet(_apolloWidgets2.default, { named: false }).attach();
  };

  this.getRegisteredComponents = function () {
    return _this.importedComponents;
  };

  this.registerComponent = function (name, component) {
    _this.importedComponents[name] = component;
  };

  this.importedComponents = {};

  this.jss = (0, _jss.create)();
  this.injectSheet = (0, _reactJss.create)(this.jss);
  this.jss.setup((0, _jssPresetDefault2.default)());

  // temporary instance for react-widgets sheet to workaround css-vendor content escaping issues
  // this.rwjss = create();

  this.attachReactWidgetsSheet();
  this.attachApolloWidgetsSheet();
};

var SharedInst = new Shared();

exports.default = SharedInst;