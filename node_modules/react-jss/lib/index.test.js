'use strict';

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _expect = require('expect.js');

var _expect2 = _interopRequireDefault(_expect);

var _jss = require('jss');

var _jss2 = _interopRequireDefault(_jss);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _reactDeepForceUpdate = require('react-deep-force-update');

var _reactDeepForceUpdate2 = _interopRequireDefault(_reactDeepForceUpdate);

var _ = require('./');

var _2 = _interopRequireDefault(_);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var node = document.createElement('div');

describe('react-jss', function () {
  afterEach(function () {
    (0, _reactDom.unmountComponentAtNode)(node);
  });

  describe('.create()', function () {
    var localInjectSheet = void 0;
    var localJss = void 0;

    beforeEach(function () {
      localJss = (0, _jss.create)();
      localInjectSheet = (0, _.create)(localJss);
    });

    it('should return a function', function () {
      (0, _expect2['default'])(_2['default']).to.be.a(Function);
    });

    it('should use passed jss', function () {
      var passedJss = void 0;
      var Component = function Component(_ref) {
        var sheet = _ref.sheet;

        passedJss = sheet.options.jss;
        return null;
      };
      var WrappedComponent = localInjectSheet()(Component);
      (0, _reactDom.render)(_react2['default'].createElement(WrappedComponent, null), node);
      (0, _expect2['default'])(passedJss).to.be(localJss);
    });
  });

  describe('global jss instance', function () {
    it('should return a function', function () {
      (0, _expect2['default'])(_2['default']).to.be.a(Function);
    });

    it('should be available', function () {
      (0, _expect2['default'])(_.jss).to.be.an(_jss2['default'].constructor);
    });
  });

  describe('.injectSheet()', function () {
    var WrappedComponent = void 0;

    beforeEach(function () {
      var Component = function Component() {
        return null;
      };
      WrappedComponent = (0, _2['default'])({
        button: { color: 'red' }
      })(Component);
    });

    it('should attach and detach a sheet', function () {
      (0, _reactDom.render)(_react2['default'].createElement(WrappedComponent, null), node);
      (0, _expect2['default'])(document.querySelectorAll('style').length).to.be(1);
      (0, _reactDom.unmountComponentAtNode)(node);
      (0, _expect2['default'])(document.querySelectorAll('style').length).to.be(0);
    });

    it('should reuse one sheet for 2 elements and detach sheet', function () {
      (0, _reactDom.render)(_react2['default'].createElement(WrappedComponent, null), node);
      (0, _reactDom.render)(_react2['default'].createElement(WrappedComponent, null), node);
      (0, _expect2['default'])(document.querySelectorAll('style').length).to.be(1);
      (0, _reactDom.unmountComponentAtNode)(node);
      (0, _expect2['default'])(document.querySelectorAll('style').length).to.be(0);
    });
  });

  describe('.injectSheet() without a component for global styles', function () {
    var Container = void 0;

    beforeEach(function () {
      Container = (0, _2['default'])({
        button: { color: 'red' }
      })();
    });

    it('should attach and detach a sheet', function () {
      (0, _reactDom.render)(_react2['default'].createElement(Container, null), node);
      (0, _expect2['default'])(document.querySelectorAll('style').length).to.be(1);
      (0, _reactDom.unmountComponentAtNode)(node);
      (0, _expect2['default'])(document.querySelectorAll('style').length).to.be(0);
    });

    it('should render children', function () {
      var isRendered = true;
      var Component = function Component() {
        isRendered = true;
        return null;
      };
      (0, _reactDom.render)(_react2['default'].createElement(
        Container,
        null,
        _react2['default'].createElement(Component, null)
      ), node);
      (0, _reactDom.unmountComponentAtNode)(node);
      (0, _expect2['default'])(isRendered).to.be(true);
    });
  });

  describe('.injectSheet() hot reloading', function () {
    function simulateHotReloading(container, TargetClass, SourceClass) {
      // Crude imitation of hot reloading that does the job
      Object.getOwnPropertyNames(SourceClass.prototype).filter(function (key) {
        return typeof SourceClass.prototype[key] === 'function';
      }).forEach(function (key) {
        if (key !== 'render' && key !== 'constructor') {
          TargetClass.prototype[key] = SourceClass.prototype[key];
        }
      });

      (0, _reactDeepForceUpdate2['default'])(container);
    }

    var WrappedComponentA = void 0;
    var WrappedComponentB = void 0;
    var WrappedComponentC = void 0;

    beforeEach(function () {
      (0, _reactDom.unmountComponentAtNode)(node);

      WrappedComponentA = (0, _2['default'])({
        button: { color: 'red' }
      })(function () {
        return null;
      });

      WrappedComponentB = (0, _2['default'])({
        button: { color: 'green' }
      })(function () {
        return null;
      });

      WrappedComponentC = (0, _2['default'])({
        button: { color: 'blue' }
      })(function () {
        return null;
      });
    });

    it('should hot reload component and attach new sheets', function () {
      var container = (0, _reactDom.render)(_react2['default'].createElement(WrappedComponentA, null), node);

      (0, _expect2['default'])(document.querySelectorAll('style').length).to.be(1);
      (0, _expect2['default'])(document.querySelectorAll('style')[0].innerHTML).to.contain('color: red');

      simulateHotReloading(container, WrappedComponentA, WrappedComponentB);

      (0, _expect2['default'])(document.querySelectorAll('style').length).to.be(1);
      (0, _expect2['default'])(document.querySelectorAll('style')[0].innerHTML).to.contain('color: green');

      simulateHotReloading(container, WrappedComponentA, WrappedComponentC);

      (0, _expect2['default'])(document.querySelectorAll('style').length).to.be(1);
      (0, _expect2['default'])(document.querySelectorAll('style')[0].innerHTML).to.contain('color: blue');
    });

    it('should properly detach sheets on hot reloaded component', function () {
      // eslint-disable-next-line react/prefer-stateless-function
      var AppContainer = function (_React$Component) {
        _inherits(AppContainer, _React$Component);

        function AppContainer() {
          _classCallCheck(this, AppContainer);

          return _possibleConstructorReturn(this, (AppContainer.__proto__ || Object.getPrototypeOf(AppContainer)).apply(this, arguments));
        }

        _createClass(AppContainer, [{
          key: 'render',
          value: function render() {
            return _react2['default'].createElement(WrappedComponentA, _extends({}, this.props, {
              key: Math.random() // Require children to unmount on every render
            }));
          }
        }]);

        return AppContainer;
      }(_react2['default'].Component);

      var container = (0, _reactDom.render)(_react2['default'].createElement(AppContainer, null), node);

      (0, _expect2['default'])(document.querySelectorAll('style').length).to.be(1);
      (0, _expect2['default'])(document.querySelectorAll('style')[0].innerHTML).to.contain('color: red');

      simulateHotReloading(container, WrappedComponentA, WrappedComponentB);

      (0, _expect2['default'])(document.querySelectorAll('style').length).to.be(1);
      (0, _expect2['default'])(document.querySelectorAll('style')[0].innerHTML).to.contain('color: green');

      simulateHotReloading(container, WrappedComponentA, WrappedComponentC);

      (0, _expect2['default'])(document.querySelectorAll('style').length).to.be(1);
      (0, _expect2['default'])(document.querySelectorAll('style')[0].innerHTML).to.contain('color: blue');
    });
  });
});