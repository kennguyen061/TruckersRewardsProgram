'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.jss = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

exports.create = create;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _jss = require('jss');

var _jssPresetDefault = require('jss-preset-default');

var _jssPresetDefault2 = _interopRequireDefault(_jssPresetDefault);

var _hoistNonReactStatics = require('hoist-non-react-statics');

var _hoistNonReactStatics2 = _interopRequireDefault(_hoistNonReactStatics);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * Wrap a Component into a JSS Container Component.
 *
 * @param {Jss} jss
 * @param {Component} WrappedComponent
 * @param {Object} styles
 * @param {Object} [options]
 * @return {Component}
 */
function wrap(jss, WrappedComponent, styles) {
  var _class, _temp;

  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};

  var refs = 0;
  var sheet = null;

  var displayName = WrappedComponent.displayName || WrappedComponent.name || 'Component';

  if (!options.meta) options.meta = displayName;

  function attach() {
    if (!sheet) sheet = jss.createStyleSheet(styles, options);
    sheet.attach();
  }

  function detach() {
    sheet.detach();
  }

  function ref() {
    if (refs === 0) attach();
    refs++;
    return sheet;
  }

  function deref() {
    refs--;
    if (refs === 0) detach();
  }

  return _temp = _class = function (_Component) {
    _inherits(Jss, _Component);

    function Jss() {
      _classCallCheck(this, Jss);

      return _possibleConstructorReturn(this, (Jss.__proto__ || Object.getPrototypeOf(Jss)).apply(this, arguments));
    }

    _createClass(Jss, [{
      key: 'componentWillMount',
      value: function componentWillMount() {
        this.sheet = ref();
      }
    }, {
      key: 'componentWillUpdate',
      value: function componentWillUpdate() {
        if (process.env.NODE_ENV !== 'production') {
          // Support React Hot Loader.
          if (this.sheet !== sheet) {
            this.sheet.detach();
            this.sheet = ref();
          }
        }
      }
    }, {
      key: 'componentWillUnmount',
      value: function componentWillUnmount() {
        if (this.sheet && !sheet && !refs) {
          this.sheet.detach();
        } else deref();
      }
    }, {
      key: 'render',
      value: function render() {
        return _react2['default'].createElement(WrappedComponent, _extends({}, this.props, { sheet: this.sheet }));
      }
    }]);

    return Jss;
  }(_react.Component), _class.wrapped = WrappedComponent, _class.displayName = 'Jss(' + displayName + ')', _temp;
}

var Container = function Container(_ref) {
  var children = _ref.children;
  return children || null;
};

var jss = exports.jss = (0, _jss.create)((0, _jssPresetDefault2['default'])());

/**
 * Create a `injectSheet` function that will use the passed JSS instance.
 *
 * @param {Jss} jss
 * @return {Function}
 * @api public
 */
function create() {
  var localJss = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : jss;

  return function injectSheet(styles, options) {
    return function () {
      var WrappedComponent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Container;

      var Jss = wrap(localJss, WrappedComponent, styles, options);
      return (0, _hoistNonReactStatics2['default'])(Jss, WrappedComponent, { wrapped: true });
    };
  };
}

/**
 * Exports injectSheet function as default.
 * Returns a function which needs to be invoked with a Component.
 *
 * `injectSheet(styles, [options])(Component)`
 *
 * @param {Object} styles
 * @param {Object} [options]
 * @return {Function}
 * @api public
 */
exports['default'] = create();