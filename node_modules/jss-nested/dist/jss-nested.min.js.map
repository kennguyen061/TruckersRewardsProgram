{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///jss-nested.min.js","webpack:///webpack/bootstrap 0f19cf41c6b321fe689e","webpack:///./src/index.js","webpack:///./~/warning/browser.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_defineProperty","key","value","Object","defineProperty","enumerable","configurable","writable","jssNested","getReplaceRef","container","match","name","rule","getRule","selector","_warning2","addConditional","conditionalContainer","addRule","style","ruleToExtend","_extends","replaceParentRefs","nestedProp","parentProp","parentSelectors","split","separatorRegExp","nestedSelectors","result","i","length","parent","j","nested","hasAnd","replace","parentRegExp","getOptions","options","index","nestingLevel","undefined","named","indexOf","str","type","replaceRef","prop","isNested","isNestedConditional","refRegExp","assign","target","arguments","source","prototype","hasOwnProperty","_warning","warning"],"mappings":"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","file":"jss-nested.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"jssNested\"] = factory();\n\telse\n\t\troot[\"jssNested\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"jssNested\"] = factory();\n\telse\n\t\troot[\"jssNested\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\texports.default = jssNested;\n\t\n\tvar _warning = __webpack_require__(1);\n\t\n\tvar _warning2 = _interopRequireDefault(_warning);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\t\n\tvar separatorRegExp = /\\s*,\\s*/g;\n\tvar parentRegExp = /&/g;\n\tvar refRegExp = /\\$([\\w-]+)/g;\n\t\n\t/**\n\t * Convert nested rules to separate, remove them from original styles.\n\t *\n\t * @param {Rule} rule\n\t * @api public\n\t */\n\tfunction jssNested() {\n\t  // Get a function to be used for $ref replacement.\n\t  function getReplaceRef(container) {\n\t    return function (match, name) {\n\t      var rule = container.getRule(name);\n\t      if (rule) return rule.selector;\n\t      (0, _warning2.default)(false, '[JSS] Could not find the referenced rule %s. \\r\\n%s', name, rule);\n\t      return name;\n\t    };\n\t  }\n\t\n\t  function addConditional(name, rule, container) {\n\t    var conditionalContainer = container.getRule(name);\n\t\n\t    if (!conditionalContainer) {\n\t      // Add conditional to container because it does not exist yet.\n\t      container.addRule(name, _defineProperty({}, rule.name, rule.style[name]));\n\t      return;\n\t    }\n\t\n\t    // It exists, so now check if we have already defined styles\n\t    // for example @media print { .some-style { display: none; } } .\n\t    var ruleToExtend = conditionalContainer.getRule(rule.name);\n\t\n\t    if (ruleToExtend) {\n\t      ruleToExtend.style = _extends({}, ruleToExtend.style, rule.style[name]);\n\t      return;\n\t    }\n\t\n\t    // Conditional rule in container has no rule so create it.\n\t    conditionalContainer.addRule(rule.name, rule.style[name]);\n\t  }\n\t\n\t  var hasAnd = function hasAnd(str) {\n\t    return str.indexOf('&') !== -1;\n\t  };\n\t\n\t  function replaceParentRefs(nestedProp, parentProp) {\n\t    var parentSelectors = parentProp.split(separatorRegExp);\n\t    var nestedSelectors = nestedProp.split(separatorRegExp);\n\t\n\t    var result = '';\n\t\n\t    for (var i = 0; i < parentSelectors.length; i++) {\n\t      var parent = parentSelectors[i];\n\t\n\t      for (var j = 0; j < nestedSelectors.length; j++) {\n\t        var nested = nestedSelectors[j];\n\t        if (result) result += ', ';\n\t        // Replace all & by the parent or prefix & with the parent.\n\t        result += hasAnd(nested) ? nested.replace(parentRegExp, parent) : parent + ' ' + nested;\n\t      }\n\t    }\n\t\n\t    return result;\n\t  }\n\t\n\t  function getOptions(rule, container, options) {\n\t    // Options has been already created, now we only increase index.\n\t    if (options) return _extends({}, options, { index: options.index + 1 });\n\t\n\t    var nestingLevel = rule.options.nestingLevel;\n\t\n\t    nestingLevel = nestingLevel === undefined ? 1 : nestingLevel + 1;\n\t\n\t    return _extends({}, rule.options, {\n\t      named: false,\n\t      nestingLevel: nestingLevel,\n\t      index: container.indexOf(rule) + 1\n\t    });\n\t  }\n\t\n\t  return function (rule) {\n\t    if (rule.type !== 'regular') return;\n\t    var container = rule.options.parent;\n\t    var options = void 0;\n\t    var replaceRef = void 0;\n\t\n\t    for (var prop in rule.style) {\n\t      var isNested = hasAnd(prop);\n\t      var isNestedConditional = prop[0] === '@';\n\t\n\t      if (!isNested && !isNestedConditional) continue;\n\t\n\t      if (isNested) {\n\t        options = getOptions(rule, container, options);\n\t\n\t        var selector = replaceParentRefs(prop, rule.selector);\n\t        // Lazily create the ref replacer function just once for\n\t        // all nested rules within the sheet.\n\t        if (!replaceRef) replaceRef = getReplaceRef(container);\n\t        // Replace all $refs.\n\t        selector = selector.replace(refRegExp, replaceRef);\n\t\n\t        container.addRule(selector, rule.style[prop], options);\n\t      } else if (isNestedConditional) {\n\t        addConditional(prop, rule, container);\n\t      }\n\t\n\t      delete rule.style[prop];\n\t    }\n\t  };\n\t}\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2014-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * Similar to invariant but only logs a warning if the condition is not met.\n\t * This can be used to log issues in development environments in critical\n\t * paths. Removing the logging code for production environments will keep the\n\t * same logic and follow the same code paths.\n\t */\n\t\n\tvar warning = function() {};\n\t\n\tif (false) {\n\t  warning = function(condition, format, args) {\n\t    var len = arguments.length;\n\t    args = new Array(len > 2 ? len - 2 : 0);\n\t    for (var key = 2; key < len; key++) {\n\t      args[key - 2] = arguments[key];\n\t    }\n\t    if (format === undefined) {\n\t      throw new Error(\n\t        '`warning(condition, format, ...args)` requires a warning ' +\n\t        'message argument'\n\t      );\n\t    }\n\t\n\t    if (format.length < 10 || (/^[s\\W]*$/).test(format)) {\n\t      throw new Error(\n\t        'The warning format should be able to uniquely identify this ' +\n\t        'warning. Please, use a more descriptive format than: ' + format\n\t      );\n\t    }\n\t\n\t    if (!condition) {\n\t      var argIndex = 0;\n\t      var message = 'Warning: ' +\n\t        format.replace(/%s/g, function() {\n\t          return args[argIndex++];\n\t        });\n\t      if (typeof console !== 'undefined') {\n\t        console.error(message);\n\t      }\n\t      try {\n\t        // This error was thrown as a convenience so that you can use this stack\n\t        // to find the callsite that caused this warning to fire.\n\t        throw new Error(message);\n\t      } catch(x) {}\n\t    }\n\t  };\n\t}\n\t\n\tmodule.exports = warning;\n\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** jss-nested.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 0f19cf41c6b321fe689e\n **/","import warning from 'warning'\n\nconst separatorRegExp = /\\s*,\\s*/g\nconst parentRegExp = /&/g\nconst refRegExp = /\\$([\\w-]+)/g\n\n/**\n * Convert nested rules to separate, remove them from original styles.\n *\n * @param {Rule} rule\n * @api public\n */\nexport default function jssNested() {\n  // Get a function to be used for $ref replacement.\n  function getReplaceRef(container) {\n    return (match, name) => {\n      const rule = container.getRule(name)\n      if (rule) return rule.selector\n      warning(false, '[JSS] Could not find the referenced rule %s. \\r\\n%s', name, rule)\n      return name\n    }\n  }\n\n  function addConditional(name, rule, container) {\n    const conditionalContainer = container.getRule(name)\n\n    if (!conditionalContainer) {\n      // Add conditional to container because it does not exist yet.\n      container.addRule(name, {[rule.name]: rule.style[name]})\n      return\n    }\n\n    // It exists, so now check if we have already defined styles\n    // for example @media print { .some-style { display: none; } } .\n    const ruleToExtend = conditionalContainer.getRule(rule.name)\n\n    if (ruleToExtend) {\n      ruleToExtend.style = {\n        ...ruleToExtend.style,\n        ...rule.style[name]\n      }\n      return\n    }\n\n    // Conditional rule in container has no rule so create it.\n    conditionalContainer.addRule(rule.name, rule.style[name])\n  }\n\n  const hasAnd = str => str.indexOf('&') !== -1\n\n  function replaceParentRefs(nestedProp, parentProp) {\n    const parentSelectors = parentProp.split(separatorRegExp)\n    const nestedSelectors = nestedProp.split(separatorRegExp)\n\n    let result = ''\n\n    for (let i = 0; i < parentSelectors.length; i++) {\n      const parent = parentSelectors[i]\n\n      for (let j = 0; j < nestedSelectors.length; j++) {\n        const nested = nestedSelectors[j]\n        if (result) result += ', '\n        // Replace all & by the parent or prefix & with the parent.\n        result += hasAnd(nested) ? nested.replace(parentRegExp, parent) : `${parent} ${nested}`\n      }\n    }\n\n    return result\n  }\n\n  function getOptions(rule, container, options) {\n    // Options has been already created, now we only increase index.\n    if (options) return {...options, index: options.index + 1}\n\n    let {nestingLevel} = rule.options\n    nestingLevel = nestingLevel === undefined ? 1 : nestingLevel + 1\n\n    return {\n      ...rule.options,\n      named: false,\n      nestingLevel,\n      index: container.indexOf(rule) + 1\n    }\n  }\n\n  return rule => {\n    if (rule.type !== 'regular') return\n    const container = rule.options.parent\n    let options\n    let replaceRef\n\n    for (const prop in rule.style) {\n      const isNested = hasAnd(prop)\n      const isNestedConditional = prop[0] === '@'\n\n      if (!isNested && !isNestedConditional) continue\n\n      if (isNested) {\n        options = getOptions(rule, container, options)\n\n        let selector = replaceParentRefs(prop, rule.selector)\n        // Lazily create the ref replacer function just once for\n        // all nested rules within the sheet.\n        if (!replaceRef) replaceRef = getReplaceRef(container)\n        // Replace all $refs.\n        selector = selector.replace(refRegExp, replaceRef)\n\n        container.addRule(selector, rule.style[prop], options)\n      }\n      else if (isNestedConditional) {\n        addConditional(prop, rule, container)\n      }\n\n      delete rule.style[prop]\n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n'use strict';\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar warning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  warning = function(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n    if (format === undefined) {\n      throw new Error(\n        '`warning(condition, format, ...args)` requires a warning ' +\n        'message argument'\n      );\n    }\n\n    if (format.length < 10 || (/^[s\\W]*$/).test(format)) {\n      throw new Error(\n        'The warning format should be able to uniquely identify this ' +\n        'warning. Please, use a more descriptive format than: ' + format\n      );\n    }\n\n    if (!condition) {\n      var argIndex = 0;\n      var message = 'Warning: ' +\n        format.replace(/%s/g, function() {\n          return args[argIndex++];\n        });\n      if (typeof console !== 'undefined') {\n        console.error(message);\n      }\n      try {\n        // This error was thrown as a convenience so that you can use this stack\n        // to find the callsite that caused this warning to fire.\n        throw new Error(message);\n      } catch(x) {}\n    }\n  };\n}\n\nmodule.exports = warning;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/warning/browser.js\n ** module id = 1\n ** module chunks = 0\n **/"],"sourceRoot":""}