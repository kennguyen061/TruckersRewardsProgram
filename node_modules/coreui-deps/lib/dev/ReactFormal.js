(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("react"), require("react-dom"));
	else if(typeof define === 'function' && define.amd)
		define([, ], factory);
	else if(typeof exports === 'object')
		exports["ReactFormal"] = factory(require("react"), require("react-dom"));
	else
		root["CoreUI"] = root["CoreUI"] || {}, root["CoreUI"]["ReactFormal"] = factory(root["React"], root["ReactDOM"]);
})(this, function(__WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_175__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _reactFormal = __webpack_require__(10);

	var _reactFormal2 = _interopRequireDefault(_reactFormal);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _reactFormal2.default;

/***/ },
/* 1 */,
/* 2 */,
/* 3 */
/***/ function(module, exports) {

	module.exports = __WEBPACK_EXTERNAL_MODULE_3__;

/***/ },
/* 4 */,
/* 5 */,
/* 6 */,
/* 7 */,
/* 8 */,
/* 9 */,
/* 10 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _MessageTrigger = __webpack_require__(11);

	var _MessageTrigger2 = _interopRequireDefault(_MessageTrigger);

	var _Form = __webpack_require__(14);

	var _Form2 = _interopRequireDefault(_Form);

	var _Field = __webpack_require__(159);

	var _Field2 = _interopRequireDefault(_Field);

	var _FormContext = __webpack_require__(177);

	var _FormContext2 = _interopRequireDefault(_FormContext);

	var _ValidationMessage = __webpack_require__(178);

	var _ValidationMessage2 = _interopRequireDefault(_ValidationMessage);

	var _ValidationSummary = __webpack_require__(181);

	var _ValidationSummary2 = _interopRequireDefault(_ValidationSummary);

	var _errToJSON = __webpack_require__(112);

	var _errToJSON2 = _interopRequireDefault(_errToJSON);

	var _FormButton = __webpack_require__(182);

	var _FormButton2 = _interopRequireDefault(_FormButton);

	var _addInputType = __webpack_require__(183);

	var _addInputType2 = _interopRequireDefault(_addInputType);

	var _config = __webpack_require__(169);

	var _config2 = _interopRequireDefault(_config);

	var _invariant = __webpack_require__(48);

	var _invariant2 = _interopRequireDefault(_invariant);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	_Form2.default.Field = _Field2.default;
	_Form2.default.Message = _ValidationMessage2.default;
	_Form2.default.Summary = _ValidationSummary2.default;
	_Form2.default.Button = _FormButton2.default;
	_Form2.default.Context = _FormContext2.default;
	_Form2.default.Trigger = _MessageTrigger2.default;

	_Form2.default.setter = _Form2.default.ControlledComponent.defaultProps.setter;
	_Form2.default.getter = _Form2.default.ControlledComponent.defaultProps.getter;

	_Form2.default.toErrors = function (err) {
	  (0, _invariant2.default)(err && err.name === 'ValidationError', '`toErrors()` only works with ValidationErrors.');

	  return (0, _errToJSON2.default)(err);
	};

	_Form2.default.addInputTypes = _addInputType2.default;
	_Form2.default.setDefaults = function () {
	  var defaults = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

	  _extends(_config2.default, defaults);
	};

	module.exports = _Form2.default;
	exports.default = _Form2.default;
	module.exports = exports['default'];

/***/ },
/* 11 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _ChildBridge = __webpack_require__(12);

	var _ChildBridge2 = _interopRequireDefault(_ChildBridge);

	var _connectToMessageContainer = __webpack_require__(13);

	var _connectToMessageContainer2 = _interopRequireDefault(_connectToMessageContainer);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var stringOrArrayOfStrings = _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.arrayOf(_react.PropTypes.string)]);

	var resolveNames = _connectToMessageContainer2.default.resolveNames;

	var MessageTrigger = function (_React$Component) {
	  _inherits(MessageTrigger, _React$Component);

	  function MessageTrigger() {
	    _classCallCheck(this, MessageTrigger);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    var _this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args)));

	    _initialiseProps.call(_this);

	    _this.state = { isActive: false };
	    return _this;
	  }

	  MessageTrigger.prototype.componentWillMount = function componentWillMount() {
	    this.addToGroup();
	  };

	  MessageTrigger.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps, nextContext) {
	    this.addToGroup(nextProps, nextContext);
	  };

	  MessageTrigger.prototype.componentWillUnmount = function componentWillUnmount() {
	    this.removeFromGroup && this.removeFromGroup();
	  };

	  MessageTrigger.prototype.render = function render() {
	    return _react2.default.createElement(
	      _ChildBridge2.default,
	      {
	        events: this.props.events,
	        onEvent: this.onEvent
	      },
	      this.inject
	    );
	  };

	  MessageTrigger.prototype.addToGroup = function addToGroup() {
	    var props = arguments.length <= 0 || arguments[0] === undefined ? this.props : arguments[0];
	    var context = arguments.length <= 1 || arguments[1] === undefined ? this.context : arguments[1];
	    var messageContainer = context.messageContainer;
	    var forNames = props['for'];
	    var group = props.group;


	    this.removeFromGroup && this.removeFromGroup();

	    if (!messageContainer || !forNames) return;

	    this.removeFromGroup = messageContainer.addToGroup(group, forNames);
	  };

	  MessageTrigger.prototype.resolveNames = function resolveNames() {
	    var props = arguments.length <= 0 || arguments[0] === undefined ? this.props : arguments[0];
	    var context = arguments.length <= 1 || arguments[1] === undefined ? this.context : arguments[1];
	    var messageContainer = context.messageContainer;
	    var forNames = props['for'];
	    var group = props.group;


	    if (!forNames && messageContainer) forNames = messageContainer.namesForGroup(group);

	    return forNames ? [].concat(forNames) : [];
	  };

	  return MessageTrigger;
	}(_react2.default.Component);

	MessageTrigger.propTypes = {
	  events: stringOrArrayOfStrings,

	  for: stringOrArrayOfStrings,

	  children: _react2.default.PropTypes.oneOfType([_react2.default.PropTypes.func, _react2.default.PropTypes.element]),

	  group: function group(props, name, compName) {
	    for (var _len2 = arguments.length, args = Array(_len2 > 3 ? _len2 - 3 : 0), _key2 = 3; _key2 < _len2; _key2++) {
	      args[_key2 - 3] = arguments[_key2];
	    }

	    if (!props[name] && (!props.for || !props.for.length)) {
	      return new Error('A `group` prop is required when no `for` prop is provided' + ('for component ' + compName));
	    }
	    return stringOrArrayOfStrings.apply(undefined, [props, name, compName].concat(args));
	  }
	};
	MessageTrigger.contextTypes = {
	  messageContainer: _react2.default.PropTypes.object
	};
	MessageTrigger.defaultProps = {
	  events: 'onChange'
	};

	var _initialiseProps = function _initialiseProps() {
	  var _this2 = this;

	  this.onEvent = function (event) {
	    for (var _len3 = arguments.length, args = Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {
	      args[_key3 - 1] = arguments[_key3];
	    }

	    var _props = _this2.props;
	    var onValidate = _props.onValidate;
	    var children = _props.children;
	    var messageContainer = _this2.context.messageContainer;

	    var handler = _react2.default.isValidElement(children) && children.props[event];

	    handler && handler.apply(_this2, args);

	    if (!messageContainer) return;

	    onValidate = onValidate || messageContainer.onValidate;

	    onValidate(resolveNames(_this2.props, messageContainer), event, args);
	  };

	  this.inject = function (props) {
	    var _props2 = _this2.props;
	    var messages = _props2.messages;
	    var children = _props2.children;


	    props.messages = messages;

	    if (typeof children === 'function') return children(props);

	    return _react2.default.cloneElement(children, props);
	  };
	};

	exports.default = (0, _connectToMessageContainer2.default)(MessageTrigger);
	module.exports = exports['default'];

/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var ChildBridge = (function (_React$Component) {
	  _inherits(ChildBridge, _React$Component);

	  function ChildBridge() {
	    _classCallCheck(this, ChildBridge);

	    _React$Component.apply(this, arguments);
	  }

	  ChildBridge.prototype.componentWillMount = function componentWillMount() {
	    this.events = {};
	    this.processEvents(this.props.events);
	  };

	  ChildBridge.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
	    this.processEvents(nextProps.events);
	  };

	  ChildBridge.prototype.processEvents = function processEvents(events) {
	    var _this = this;

	    if (events) [].concat(events).forEach(function (event) {
	      _this.events[event] = _this.events[event] || function () {
	        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	          args[_key] = arguments[_key];
	        }

	        return _this.handleEvent(event, args);
	      };
	    });
	  };

	  ChildBridge.prototype.handleEvent = function handleEvent(event, args) {
	    var _props;

	    (_props = this.props).onEvent.apply(_props, [event].concat(args));
	  };

	  ChildBridge.prototype.render = function render() {
	    var child = this.props.children;

	    if (!child) return null;

	    return child(_extends({}, this.events));
	  };

	  _createClass(ChildBridge, null, [{
	    key: 'propTypes',
	    value: {
	      events: _react.PropTypes.oneOfType([_react.PropTypes.array, _react.PropTypes.string]),
	      children: _react.PropTypes.func,
	      onEvent: _react.PropTypes.func.isRequired
	    },
	    enumerable: true
	  }, {
	    key: 'defaultProps',
	    value: {
	      events: []
	    },
	    enumerable: true
	  }]);

	  return ChildBridge;
	})(_react2['default'].Component);

	exports['default'] = ChildBridge;
	module.exports = exports['default'];

/***/ },
/* 13 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	function isReactComponent(component) {
	  return !!(component && component.prototype && component.prototype.isReactComponent);
	}

	function defaultResolveNames(props, container) {
	  var group = props.group;
	  var forNames = props['for'];


	  if (!forNames && container) forNames = container.namesForGroup(group);

	  return forNames ? [].concat(forNames) : [];
	}

	function defaultMapMessages(messages, names) {
	  if (!names.length) return messages;

	  var messagesForNames = {};
	  names.forEach(function (name) {
	    if (messages[name]) messagesForNames[name] = messages[name];
	  });

	  return messagesForNames;
	}

	function connectToMessageContainer(Component) {
	  var _ref = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

	  var _ref$methods = _ref.methods;
	  var methods = _ref$methods === undefined ? [] : _ref$methods;
	  var _ref$mapMessages = _ref.mapMessages;
	  var mapMessages = _ref$mapMessages === undefined ? defaultMapMessages : _ref$mapMessages;
	  var _ref$resolveNames = _ref.resolveNames;
	  var resolveNames = _ref$resolveNames === undefined ? defaultResolveNames : _ref$resolveNames;


	  function resolveNamesAndMapMessages(messages, props, container) {
	    var names = resolveNames ? resolveNames(props, container) : [];

	    return (props.mapMessages || mapMessages)(messages, names, props, container);
	  }

	  var MessageListener = function (_React$Component) {
	    _inherits(MessageListener, _React$Component);

	    function MessageListener() {
	      _classCallCheck(this, MessageListener);

	      return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
	    }

	    MessageListener.prototype.componentDidMount = function componentDidMount() {
	      var _this2 = this;

	      var container = this.context.messageContainer;

	      if (container) {
	        this.unsubscribe = container.subscribe(function (allMessages) {
	          if (_this2.unmounted) return;

	          var messages = resolveNamesAndMapMessages(allMessages, _this2.props, _this2.context.messageContainer);

	          _this2.setState({ messages: messages, allMessages: allMessages });
	        });
	      }
	    };

	    MessageListener.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps, nextContext) {
	      var _this3 = this;

	      if (mapMessages && mapMessages.length >= 2) {
	        (function () {
	          var container = nextContext.messageContainer;
	          // callback style because the listener may have been called before
	          // and not had a chance to flush it's changes yet
	          _this3.setState(function (_ref2) {
	            var allMessages = _ref2.allMessages;
	            return {
	              messages: resolveNamesAndMapMessages(allMessages, nextProps, container)
	            };
	          });
	        })();
	      }
	    };

	    MessageListener.prototype.componentWillUnmount = function componentWillUnmount() {
	      this.unmounted = true;
	      this.unsubscribe && this.unsubscribe();
	    };

	    MessageListener.prototype.render = function render() {
	      var _ref3 = this.state || {};

	      var _ref3$messages = _ref3.messages;
	      var messages = _ref3$messages === undefined ? {} : _ref3$messages;


	      if (this.props.messages) {
	        messages = this.props.messages;
	      }

	      return _react2.default.createElement(Component, _extends({}, this.props, {
	        messages: messages,
	        ref: isReactComponent(Component) ? 'inner' : undefined
	      }));
	    };

	    return MessageListener;
	  }(_react2.default.Component);

	  MessageListener.DecoratedComponent = Component;
	  MessageListener.propTypes = {
	    mapMessages: _react2.default.PropTypes.func
	  };
	  MessageListener.contextTypes = {
	    messageContainer: _react2.default.PropTypes.object
	  };


	  methods.forEach(function (method) {
	    MessageListener.prototype[method] = function () {
	      var _refs$inner;

	      return (_refs$inner = this.refs.inner)[method].apply(_refs$inner, arguments);
	    };
	  });

	  return MessageListener;
	}

	connectToMessageContainer.resolveNames = defaultResolveNames;

	exports.default = connectToMessageContainer;
	module.exports = exports['default'];

/***/ },
/* 14 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _pick = __webpack_require__(15);

	var _pick2 = _interopRequireDefault(_pick);

	var _pickAttributes = __webpack_require__(40);

	var _pickAttributes2 = _interopRequireDefault(_pickAttributes);

	var _propertyExpr = __webpack_require__(42);

	var _propertyExpr2 = _interopRequireDefault(_propertyExpr);

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _function = __webpack_require__(43);

	var _function2 = _interopRequireDefault(_function);

	var _MessageContainer = __webpack_require__(45);

	var _MessageContainer2 = _interopRequireDefault(_MessageContainer);

	var _uncontrollable = __webpack_require__(46);

	var _uncontrollable2 = _interopRequireDefault(_uncontrollable);

	var _warning = __webpack_require__(50);

	var _warning2 = _interopRequireDefault(_warning);

	var _reach = __webpack_require__(51);

	var _reach2 = _interopRequireDefault(_reach);

	var _errorManager = __webpack_require__(106);

	var _errorManager2 = _interopRequireDefault(_errorManager);

	var _contextType = __webpack_require__(148);

	var _contextType2 = _interopRequireDefault(_contextType);

	var _errToJSON = __webpack_require__(112);

	var _errToJSON2 = _interopRequireDefault(_errToJSON);

	var _timeoutManager = __webpack_require__(149);

	var _timeoutManager2 = _interopRequireDefault(_timeoutManager);

	var _registerWithContext = __webpack_require__(151);

	var _registerWithContext2 = _interopRequireDefault(_registerWithContext);

	var _topeka = __webpack_require__(152);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var BindingContext = _topeka.BindingContext.ControlledComponent;

	var done = function done(e) {
	  return setTimeout(function () {
	    throw e;
	  });
	};
	var splitPath = function splitPath(path) {
	  var parts = _propertyExpr2.default.split(path);
	  var tail = parts.pop();
	  return [_propertyExpr2.default.join(parts), tail];
	};

	var isValidationError = function isValidationError(err) {
	  return err && err.name === 'ValidationError';
	};

	var YUP_OPTIONS = ['context', 'stripUnknown', 'recursive', 'abortEarly', 'strict'];

	function maybeWarn(debug, errors, target) {
	  if (!debug) return;

	  if (true) {
	    var keys = Object.keys(errors);
	    (0, _warning2.default)(!keys.length, '[react-formal] (' + target + ') invalid fields: ' + keys.join(', '));
	  }
	}

	/**
	 * Form component renders a `value` to be updated and validated by child Fields.
	 * Forms can be thought of as `<input/>`s for complex values, or models. A Form aggregates
	 * a bunch of smaller inputs, each in charge of updating a small part of the overall model.
	 * The Form will integrate and validate each change and fire a single unified `onChange` with the new `value`.
	 *
	 * Validation messages can be displayed anywhere inside a Form with Message Components.
	 *
	 * ```editable
	 * var defaultStr = yup.string().default('')
	 *
	 * var customerSchema = yup
	 *   .object({
	 *     name: yup.object({
	 *       first: defaultStr
	 *         .required('please enter a first name'),
	 *
	 *       last: defaultStr
	 *         .required('please enter a surname'),
	 *     }),
	 *
	 *     dateOfBirth: yup.date()
	 *       .max(new Date(), "Are you a time traveler?!"),
	 *
	 *     colorId: yup.number()
	 *       .nullable()
	 *       .required('Please select a dank color')
	 *   });
	 *
	 * var form = (
	 *   <Form
	 *     schema={customerSchema}
	 *     defaultValue={customerSchema.default()}
	 *   >
	 *     <div>
	 *       {\/\*'grandchildren' are no problem \*\/}
	 *       <label>Name</label>
	 *
	 *       <Form.Field
	 *         name='name.first'
	 *         placeholder='First name'
	 *       />
	 *       <Form.Field
	 *         name='name.last'
	 *         placeholder='Surname'
	 *       />
	 *
	 *       <Form.Message for={['name.first', 'name.last']}/>
	 *     </div>
	 *
	 *     <label>Date of Birth</label>
	 *     <Form.Field name='dateOfBirth'/>
	 *     <Form.Message for='dateOfBirth'/>
	 *
	 *     <label>Favorite Color</label>
	 *     <Form.Field name='colorId' type='select'>
	 *       <option value={null}>Select a color...</option>
	 *       <option value={0}>Red</option>
	 *       <option value={1}>Yellow</option>
	 *       <option value={2}>Blue</option>
	 *       <option value={3}>other</option>
	 *     </Form.Field>
	 *     <Form.Message for='colorId'/>
	 *
	 *   <Form.Button type='submit'>
	 *     Submit
	 *   </Form.Button>
	 * </Form>)
	 * ReactDOM.render(form, mountNode);
	 * ```
	 */

	var Form = function (_React$Component) {
	  _inherits(Form, _React$Component);

	  function Form(props, context) {
	    _classCallCheck(this, Form);

	    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props, context));

	    _initialiseProps.call(_this);

	    _this.queue = [];
	    _this.pathOptions = Object.create(null);
	    _this.timeouts = (0, _timeoutManager2.default)(_this);
	    _this.errors = (0, _errorManager2.default)(_this.handleValidate);

	    (0, _registerWithContext2.default)(_this, _this.submit);
	    return _this;
	  }

	  Form.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps, nextState) {
	    return _function2.default.call(this, nextProps, nextState);
	  };

	  Form.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
	    if (nextProps.schema !== this.props.schema) {
	      this.enqueue(Object.keys(nextProps.errors || {}));
	    }
	    this.flush(nextProps.delay);
	  };

	  Form.prototype.getChildContext = function getChildContext() {
	    var _props = this.props;
	    var noValidate = _props.noValidate;
	    var schema = _props.schema;

	    var options = _objectWithoutProperties(_props, ['noValidate', 'schema']);

	    var context = this._context && this._context.reactFormalContext;

	    if (!context || context.schema !== schema || context.noValidate !== noValidate) {
	      this._context = {
	        reactFormalContext: {
	          options: options,
	          noValidate: noValidate,
	          submit: null,
	          schema: this.getSchemaForPath,
	          onError: this.handleError,
	          onSubmit: this.handleSubmit,
	          onOptions: this.handlePathOptions
	        }
	      };
	    }

	    return this._context;
	  };

	  Form.prototype.enqueue = function enqueue(fields) {
	    this.queue = this.queue.concat(fields);
	  };

	  Form.prototype.flush = function flush(delay) {
	    var _this2 = this;

	    this.timeouts.set('flush-validations', function () {
	      var fields = _this2.queue;
	      var props = _this2.props;

	      if (!fields.length) return;

	      _this2.queue = [];
	      _this2._validate(fields, _this2.props).then(function (errors) {
	        if (errors !== _this2.props.errors) {
	          maybeWarn(props.debug, errors, 'field validation');
	          _this2.notify('onError', errors);
	        }
	      }).catch(done);
	    }, delay);
	  };

	  Form.prototype._validate = function _validate(fields) {
	    var props = arguments.length <= 1 || arguments[1] === undefined ? this.props : arguments[1];

	    return this.errors.collect(fields, props.errors, { props: props });
	  };

	  Form.prototype.validate = function validate(fields) {
	    return this._validate(fields);
	  };

	  Form.prototype.validateGroup = function validateGroup(groups) {
	    var fields = this._container.fieldsForGroup(groups);
	    return this.validate(fields);
	  };

	  Form.prototype.render = function render() {
	    var _this3 = this;

	    var _props2 = this.props;
	    var children = _props2.children;
	    var onChange = _props2.onChange;
	    var value = _props2.value;
	    var Element = _props2.component;
	    var getter = _props2.getter;
	    var setter = _props2.setter;
	    var errors = _props2.errors;
	    var _props2$__messageCont = _props2.__messageContainer;
	    var containerProps = _props2$__messageCont === undefined ? {} : _props2$__messageCont;


	    var props = (0, _pickAttributes2.default)(this.props);

	    if (Element === 'form') props.noValidate = true; // disable html5 validation

	    props.onSubmit = this.handleSubmit;

	    if (Element === null || Element === false) {
	      children = _react2.default.cloneElement(_react2.default.Children.only(children), props);
	    } else {
	      children = _react2.default.createElement(
	        Element,
	        props,
	        children
	      );
	    }

	    if (!containerProps.passthrough) {
	      containerProps.messages = errors;
	    }

	    return _react2.default.createElement(
	      BindingContext,
	      {
	        value: value,
	        onChange: onChange,
	        getter: getter,
	        setter: setter
	      },
	      _react2.default.createElement(
	        _MessageContainer2.default,
	        _extends({}, containerProps, {
	          ref: function ref(_ref) {
	            return _this3._container = _ref;
	          },
	          onValidationNeeded: this.handleValidationRequest
	        }),
	        children
	      )
	    );
	  };

	  Form.prototype.notify = function notify(event) {
	    var _props3;

	    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	      args[_key - 1] = arguments[_key];
	    }

	    if (this.props[event]) (_props3 = this.props)[event].apply(_props3, args);
	  };

	  return Form;
	}(_react2.default.Component);

	Form.propTypes = {

	  /**
	   * Form value object, can be left [uncontrolled](/controllables);
	   * use the `defaultValue` prop to initialize an uncontrolled form.
	   */
	  value: _react2.default.PropTypes.object,

	  /**
	   * Callback that is called when the `value` prop changes.
	   *
	   * ```js
	   * function(
	   *   value: object,
	   *   updatedPaths: array<string>
	   * )
	   * ```
	   */
	  onChange: _react2.default.PropTypes.func,

	  /**
	   * An object hash of field errors for the form. The object should be keyed with paths
	   * with the values being an array of messages or message objects. Errors can be
	   * left [uncontrolled](/controllables) (use `defaultErrors` to set an initial value)
	   * or managed along with the `onError` callback. You can use any object shape you'd like for
	   * messages, as long as you provide the Form.Message component an `extract` prop that
	   * understands how to pull out the strings message. By default it understands strings and objects
	   * with a `'message'` property.
	   *
	   * ```js
	   * <Form errors={{
	   *  "name.first": [
	   *    'First names are required',
	   *    {
	   *    	message: "Names must be at least 2 characters long",
	   *    	type: 'min'
	   *    }
	   *  ],
	   * }}/>
	   * ```
	   */
	  errors: _react2.default.PropTypes.object,

	  /**
	   * Callback that is called when a validation error occurs. It is called with an `errors` object
	   *
	   * ```editable
	   * <Form schema={modelSchema}
	   *   defaultValue={modelSchema.default()}
	   *   errors={this.state ? this.state.errors : {}}
	   *   onError={errors => {
	   *     if( errors.dateOfBirth )
	   *       errors.dateOfBirth = 'hijacked!'
	   *     this.setState({ errors })
	   *   }}>
	   *
	   *   <Form.Field name='dateOfBirth'/>
	   *   <Form.Message for='dateOfBirth'/>
	   *
	   *   <Form.Button type='submit'>Submit</Form.Button>
	   * </Form>
	   * ```
	   */
	  onError: _react2.default.PropTypes.func,

	  /**
	   * Callback that is called whenever a validation is triggered.
	   * It is called _before_ the validation is actually run.
	   * ```js
	   * function onValidate(event){
	   *   let { type, fields, args } = event
	   * }
	   * ```
	   */
	  onValidate: _react2.default.PropTypes.func,

	  /**
	   * Callback that is fired when the native onSubmit event is triggered. Only relevant when
	   * the `component` prop renders a `<form/>` tag. onSubmit will trigger only if the form is valid.
	   *
	   * ```js
	   * function onSubmit(formValue){
	   *   // do something with valid value
	   * }
	   * ```
	   */
	  onSubmit: _react2.default.PropTypes.func,

	  /**
	   * Callback that is fired when the native onSubmit event is triggered. Only relevant when
	   * the `component` prop renders a `<form/>` tag. onInvalidSubmit will trigger only if the form is invalid.
	   *
	   * ```js
	   * function onInvalidSubmit(errors){
	   *   // do something with errors
	   * }
	   * ```
	   */
	  onInvalidSubmit: _react2.default.PropTypes.func,

	  /**
	   * A value getter function. `getter` is called with `path` and `value` and
	   * should return the plain **javascript** value at the path.
	   *
	    * ```js
	   * function(
	   *  path: string,
	   *  value: any,
	   * ) -> object
	   * ```
	   */
	  getter: _react2.default.PropTypes.func,

	  /**
	   * A value setter function. `setter` is called with `path`, the form `value` and the path `value`.
	   * The `setter` must return updated form `value`, which allows you to leave the original value unmutated.
	   *
	   * The default implementation uses the [react immutability helpers](http://facebook.github.io/react/docs/update.html),
	   * letting you treat the form `value` as immutable.
	   * ```js
	   * function(
	   *  path: string,
	   *  formValue: object,
	   *  pathValue: any
	   * ) -> object
	   * ```
	   */
	  setter: _react2.default.PropTypes.func,

	  /**
	   * Time in milliseconds that validations should be debounced. Reduces the amount of validation calls
	   * made at the expense of a slight delay. Helpful for performance.
	   */
	  delay: _react2.default.PropTypes.number,

	  /**
	   * Validations will be strict, making no attempt to coarce input values to the appropriate type.
	   */
	  strict: _react2.default.PropTypes.bool,

	  /**
	   * Turns off input validation for the Form, value updates will continue to work.
	   */
	  noValidate: _react2.default.PropTypes.bool,

	  /**
	   * A tag name or Component class the Form should render.
	   *
	   * If `null` are `false` the form will simply render it's child. In
	   * this instance there must only be one child.
	   */
	  component: _react2.default.PropTypes.oneOfType([_react2.default.PropTypes.func, _react2.default.PropTypes.string, _react2.default.PropTypes.oneOf([null, false])]),

	  /**
	   * A Yup schema  that validates the Form `value` prop. Used to validate the form input values
	   * For more information about the yup api check out: https://github.com/jquense/yup/blob/master/README.md
	   * @type {YupSchema}
	   */
	  schema: function schema(props, name, componentName) {
	    var _React$PropTypes$any;

	    for (var _len2 = arguments.length, args = Array(_len2 > 3 ? _len2 - 3 : 0), _key2 = 3; _key2 < _len2; _key2++) {
	      args[_key2 - 3] = arguments[_key2];
	    }

	    var err = !props.noValidate && (_React$PropTypes$any = _react2.default.PropTypes.any).isRequired.apply(_React$PropTypes$any, [props, name, componentName].concat(args));

	    if (props[name]) {
	      var schema = props[name];
	      if (!schema.__isYupSchema__ && !(schema.resolve && schema.validate)) err = new Error('`schema` must be a proper yup schema: (' + componentName + ')');
	    }

	    return err;
	  },


	  /**
	   * yup schema context
	   */
	  context: _react2.default.PropTypes.object,

	  /**
	   * toggle debug mode, which `console.warn`s validation errors
	   */
	  debug: _react2.default.PropTypes.bool
	};
	Form.defaultProps = _extends({}, BindingContext.defaultProps, {
	  component: 'form',
	  strict: false,
	  delay: 300,
	  getter: function getter(path, model) {
	    return path ? _propertyExpr2.default.getter(path, true)(model || {}) : model;
	  }
	});
	Form.contextTypes = {
	  reactFormalContext: _react2.default.PropTypes.object
	};
	Form.childContextTypes = _contextType2.default;

	var _initialiseProps = function _initialiseProps() {
	  var _this4 = this;

	  this.handlePathOptions = function (path, options) {
	    _this4.pathOptions[path] = options;
	  };

	  this.handleValidate = function (path, _ref2) {
	    var props = _ref2.props;

	    var options = (0, _pick2.default)(props, YUP_OPTIONS);
	    var abortEarly = options.abortEarly == null ? false : options.abortEarly;

	    var value = props.value;
	    var getter = props.getter;

	    var schema = _this4.getSchemaForPath(path, props);

	    var _splitPath = splitPath(path);

	    var parentPath = _splitPath[0];
	    var currentPath = _splitPath[1];

	    var parent = getter(parentPath, value) || {};
	    var pathValue = parent != null ? parent[currentPath] : value;

	    return schema.validate(pathValue, _extends({}, options, { abortEarly: abortEarly, parent: parent, path: path })).then(function () {
	      return null;
	    }).catch(function (err) {
	      return err;
	    });
	  };

	  this.handleValidationRequest = function (e) {
	    var _props4 = _this4.props;
	    var noValidate = _props4.noValidate;
	    var delay = _props4.delay;


	    if (noValidate) return;

	    _this4.notify('onValidate', e);
	    _this4.enqueue(e.fields);

	    if (e.type !== 'onChange') _this4.flush(delay);
	  };

	  this.handleError = function (errors) {
	    _this4.notify('onError', errors);
	  };

	  this.handleSubmit = function (e) {
	    if (e && e.preventDefault) e.preventDefault();

	    clearTimeout(_this4.submitTimer);
	    _this4.submitTimer = setTimeout(function () {
	      return _this4.submit().catch(done);
	    }, 0);
	  };

	  this.getSchemaForPath = function (path) {
	    var props = arguments.length <= 1 || arguments[1] === undefined ? _this4.props : arguments[1];
	    var schema = props.schema;
	    var value = props.value;
	    var context = props.context;


	    return schema && path && (0, _reach2.default)(schema, path, value, context);
	  };

	  this.submit = function () {
	    var _props5 = _this4.props;
	    var schema = _props5.schema;
	    var noValidate = _props5.noValidate;
	    var value = _props5.value;
	    var debug = _props5.debug;

	    var options = _objectWithoutProperties(_props5, ['schema', 'noValidate', 'value', 'debug']);

	    options.abortEarly = false;
	    options.strict = false;

	    if (noValidate) return _this4.notify('onSubmit', value);

	    var handleSuccess = function handleSuccess(validatedValue) {
	      return _this4.notify('onSubmit', validatedValue);
	    };

	    var handleError = function handleError(err) {
	      if (!isValidationError(err)) throw err;

	      var errors = (0, _errToJSON2.default)(err);

	      maybeWarn(debug, errors, 'onSubmit');

	      _this4.notify('onError', errors);
	      _this4.notify('onInvalidSubmit', errors);
	    };

	    return schema.validate(value, options)
	    // no catch, we aren't interested in errors from onSubmit handlers
	    .then(handleSuccess, handleError);
	  };
	};

	exports.default = (0, _uncontrollable2.default)(Form, {
	  value: 'onChange',
	  errors: 'onError'
	}, ['submit', 'validateGroup', 'validate']);
	module.exports = exports['default'];

/***/ },
/* 15 */
/***/ function(module, exports, __webpack_require__) {

	var baseFlatten = __webpack_require__(16),
	    bindCallback = __webpack_require__(29),
	    pickByArray = __webpack_require__(31),
	    pickByCallback = __webpack_require__(33),
	    restParam = __webpack_require__(39);

	/**
	 * Creates an object composed of the picked `object` properties. Property
	 * names may be specified as individual arguments or as arrays of property
	 * names. If `predicate` is provided it's invoked for each property of `object`
	 * picking the properties `predicate` returns truthy for. The predicate is
	 * bound to `thisArg` and invoked with three arguments: (value, key, object).
	 *
	 * @static
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The source object.
	 * @param {Function|...(string|string[])} [predicate] The function invoked per
	 *  iteration or property names to pick, specified as individual property
	 *  names or arrays of property names.
	 * @param {*} [thisArg] The `this` binding of `predicate`.
	 * @returns {Object} Returns the new object.
	 * @example
	 *
	 * var object = { 'user': 'fred', 'age': 40 };
	 *
	 * _.pick(object, 'user');
	 * // => { 'user': 'fred' }
	 *
	 * _.pick(object, _.isString);
	 * // => { 'user': 'fred' }
	 */
	var pick = restParam(function(object, props) {
	  if (object == null) {
	    return {};
	  }
	  return typeof props[0] == 'function'
	    ? pickByCallback(object, bindCallback(props[0], props[1], 3))
	    : pickByArray(object, baseFlatten(props));
	});

	module.exports = pick;


/***/ },
/* 16 */
/***/ function(module, exports, __webpack_require__) {

	var arrayPush = __webpack_require__(17),
	    isArguments = __webpack_require__(18),
	    isArray = __webpack_require__(24),
	    isArrayLike = __webpack_require__(19),
	    isObjectLike = __webpack_require__(23);

	/**
	 * The base implementation of `_.flatten` with added support for restricting
	 * flattening and specifying the start index.
	 *
	 * @private
	 * @param {Array} array The array to flatten.
	 * @param {boolean} [isDeep] Specify a deep flatten.
	 * @param {boolean} [isStrict] Restrict flattening to arrays-like objects.
	 * @param {Array} [result=[]] The initial result value.
	 * @returns {Array} Returns the new flattened array.
	 */
	function baseFlatten(array, isDeep, isStrict, result) {
	  result || (result = []);

	  var index = -1,
	      length = array.length;

	  while (++index < length) {
	    var value = array[index];
	    if (isObjectLike(value) && isArrayLike(value) &&
	        (isStrict || isArray(value) || isArguments(value))) {
	      if (isDeep) {
	        // Recursively flatten arrays (susceptible to call stack limits).
	        baseFlatten(value, isDeep, isStrict, result);
	      } else {
	        arrayPush(result, value);
	      }
	    } else if (!isStrict) {
	      result[result.length] = value;
	    }
	  }
	  return result;
	}

	module.exports = baseFlatten;


/***/ },
/* 17 */
/***/ function(module, exports) {

	/**
	 * Appends the elements of `values` to `array`.
	 *
	 * @private
	 * @param {Array} array The array to modify.
	 * @param {Array} values The values to append.
	 * @returns {Array} Returns `array`.
	 */
	function arrayPush(array, values) {
	  var index = -1,
	      length = values.length,
	      offset = array.length;

	  while (++index < length) {
	    array[offset + index] = values[index];
	  }
	  return array;
	}

	module.exports = arrayPush;


/***/ },
/* 18 */
/***/ function(module, exports, __webpack_require__) {

	var isArrayLike = __webpack_require__(19),
	    isObjectLike = __webpack_require__(23);

	/** Used for native method references. */
	var objectProto = Object.prototype;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/** Native method references. */
	var propertyIsEnumerable = objectProto.propertyIsEnumerable;

	/**
	 * Checks if `value` is classified as an `arguments` object.
	 *
	 * @static
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
	 * @example
	 *
	 * _.isArguments(function() { return arguments; }());
	 * // => true
	 *
	 * _.isArguments([1, 2, 3]);
	 * // => false
	 */
	function isArguments(value) {
	  return isObjectLike(value) && isArrayLike(value) &&
	    hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');
	}

	module.exports = isArguments;


/***/ },
/* 19 */
/***/ function(module, exports, __webpack_require__) {

	var getLength = __webpack_require__(20),
	    isLength = __webpack_require__(22);

	/**
	 * Checks if `value` is array-like.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
	 */
	function isArrayLike(value) {
	  return value != null && isLength(getLength(value));
	}

	module.exports = isArrayLike;


/***/ },
/* 20 */
/***/ function(module, exports, __webpack_require__) {

	var baseProperty = __webpack_require__(21);

	/**
	 * Gets the "length" property value of `object`.
	 *
	 * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)
	 * that affects Safari on at least iOS 8.1-8.3 ARM64.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {*} Returns the "length" value.
	 */
	var getLength = baseProperty('length');

	module.exports = getLength;


/***/ },
/* 21 */
/***/ function(module, exports) {

	/**
	 * The base implementation of `_.property` without support for deep paths.
	 *
	 * @private
	 * @param {string} key The key of the property to get.
	 * @returns {Function} Returns the new function.
	 */
	function baseProperty(key) {
	  return function(object) {
	    return object == null ? undefined : object[key];
	  };
	}

	module.exports = baseProperty;


/***/ },
/* 22 */
/***/ function(module, exports) {

	/**
	 * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)
	 * of an array-like value.
	 */
	var MAX_SAFE_INTEGER = 9007199254740991;

	/**
	 * Checks if `value` is a valid array-like length.
	 *
	 * **Note:** This function is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
	 */
	function isLength(value) {
	  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
	}

	module.exports = isLength;


/***/ },
/* 23 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is object-like.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
	 */
	function isObjectLike(value) {
	  return !!value && typeof value == 'object';
	}

	module.exports = isObjectLike;


/***/ },
/* 24 */
/***/ function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(25),
	    isLength = __webpack_require__(22),
	    isObjectLike = __webpack_require__(23);

	/** `Object#toString` result references. */
	var arrayTag = '[object Array]';

	/** Used for native method references. */
	var objectProto = Object.prototype;

	/**
	 * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objToString = objectProto.toString;

	/* Native method references for those with the same name as other `lodash` methods. */
	var nativeIsArray = getNative(Array, 'isArray');

	/**
	 * Checks if `value` is classified as an `Array` object.
	 *
	 * @static
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
	 * @example
	 *
	 * _.isArray([1, 2, 3]);
	 * // => true
	 *
	 * _.isArray(function() { return arguments; }());
	 * // => false
	 */
	var isArray = nativeIsArray || function(value) {
	  return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;
	};

	module.exports = isArray;


/***/ },
/* 25 */
/***/ function(module, exports, __webpack_require__) {

	var isNative = __webpack_require__(26);

	/**
	 * Gets the native function at `key` of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {string} key The key of the method to get.
	 * @returns {*} Returns the function if it's native, else `undefined`.
	 */
	function getNative(object, key) {
	  var value = object == null ? undefined : object[key];
	  return isNative(value) ? value : undefined;
	}

	module.exports = getNative;


/***/ },
/* 26 */
/***/ function(module, exports, __webpack_require__) {

	var isFunction = __webpack_require__(27),
	    isObjectLike = __webpack_require__(23);

	/** Used to detect host constructors (Safari > 5). */
	var reIsHostCtor = /^\[object .+?Constructor\]$/;

	/** Used for native method references. */
	var objectProto = Object.prototype;

	/** Used to resolve the decompiled source of functions. */
	var fnToString = Function.prototype.toString;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/** Used to detect if a method is native. */
	var reIsNative = RegExp('^' +
	  fnToString.call(hasOwnProperty).replace(/[\\^$.*+?()[\]{}|]/g, '\\$&')
	  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
	);

	/**
	 * Checks if `value` is a native function.
	 *
	 * @static
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a native function, else `false`.
	 * @example
	 *
	 * _.isNative(Array.prototype.push);
	 * // => true
	 *
	 * _.isNative(_);
	 * // => false
	 */
	function isNative(value) {
	  if (value == null) {
	    return false;
	  }
	  if (isFunction(value)) {
	    return reIsNative.test(fnToString.call(value));
	  }
	  return isObjectLike(value) && reIsHostCtor.test(value);
	}

	module.exports = isNative;


/***/ },
/* 27 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(28);

	/** `Object#toString` result references. */
	var funcTag = '[object Function]';

	/** Used for native method references. */
	var objectProto = Object.prototype;

	/**
	 * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objToString = objectProto.toString;

	/**
	 * Checks if `value` is classified as a `Function` object.
	 *
	 * @static
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
	 * @example
	 *
	 * _.isFunction(_);
	 * // => true
	 *
	 * _.isFunction(/abc/);
	 * // => false
	 */
	function isFunction(value) {
	  // The use of `Object#toString` avoids issues with the `typeof` operator
	  // in older versions of Chrome and Safari which return 'function' for regexes
	  // and Safari 8 which returns 'object' for typed array constructors.
	  return isObject(value) && objToString.call(value) == funcTag;
	}

	module.exports = isFunction;


/***/ },
/* 28 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.
	 * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
	 *
	 * @static
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
	 * @example
	 *
	 * _.isObject({});
	 * // => true
	 *
	 * _.isObject([1, 2, 3]);
	 * // => true
	 *
	 * _.isObject(1);
	 * // => false
	 */
	function isObject(value) {
	  // Avoid a V8 JIT bug in Chrome 19-20.
	  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.
	  var type = typeof value;
	  return !!value && (type == 'object' || type == 'function');
	}

	module.exports = isObject;


/***/ },
/* 29 */
/***/ function(module, exports, __webpack_require__) {

	var identity = __webpack_require__(30);

	/**
	 * A specialized version of `baseCallback` which only supports `this` binding
	 * and specifying the number of arguments to provide to `func`.
	 *
	 * @private
	 * @param {Function} func The function to bind.
	 * @param {*} thisArg The `this` binding of `func`.
	 * @param {number} [argCount] The number of arguments to provide to `func`.
	 * @returns {Function} Returns the callback.
	 */
	function bindCallback(func, thisArg, argCount) {
	  if (typeof func != 'function') {
	    return identity;
	  }
	  if (thisArg === undefined) {
	    return func;
	  }
	  switch (argCount) {
	    case 1: return function(value) {
	      return func.call(thisArg, value);
	    };
	    case 3: return function(value, index, collection) {
	      return func.call(thisArg, value, index, collection);
	    };
	    case 4: return function(accumulator, value, index, collection) {
	      return func.call(thisArg, accumulator, value, index, collection);
	    };
	    case 5: return function(value, other, key, object, source) {
	      return func.call(thisArg, value, other, key, object, source);
	    };
	  }
	  return function() {
	    return func.apply(thisArg, arguments);
	  };
	}

	module.exports = bindCallback;


/***/ },
/* 30 */
/***/ function(module, exports) {

	/**
	 * This method returns the first argument provided to it.
	 *
	 * @static
	 * @memberOf _
	 * @category Utility
	 * @param {*} value Any value.
	 * @returns {*} Returns `value`.
	 * @example
	 *
	 * var object = { 'user': 'fred' };
	 *
	 * _.identity(object) === object;
	 * // => true
	 */
	function identity(value) {
	  return value;
	}

	module.exports = identity;


/***/ },
/* 31 */
/***/ function(module, exports, __webpack_require__) {

	var toObject = __webpack_require__(32);

	/**
	 * A specialized version of `_.pick` which picks `object` properties specified
	 * by `props`.
	 *
	 * @private
	 * @param {Object} object The source object.
	 * @param {string[]} props The property names to pick.
	 * @returns {Object} Returns the new object.
	 */
	function pickByArray(object, props) {
	  object = toObject(object);

	  var index = -1,
	      length = props.length,
	      result = {};

	  while (++index < length) {
	    var key = props[index];
	    if (key in object) {
	      result[key] = object[key];
	    }
	  }
	  return result;
	}

	module.exports = pickByArray;


/***/ },
/* 32 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(28);

	/**
	 * Converts `value` to an object if it's not one.
	 *
	 * @private
	 * @param {*} value The value to process.
	 * @returns {Object} Returns the object.
	 */
	function toObject(value) {
	  return isObject(value) ? value : Object(value);
	}

	module.exports = toObject;


/***/ },
/* 33 */
/***/ function(module, exports, __webpack_require__) {

	var baseForIn = __webpack_require__(34);

	/**
	 * A specialized version of `_.pick` which picks `object` properties `predicate`
	 * returns truthy for.
	 *
	 * @private
	 * @param {Object} object The source object.
	 * @param {Function} predicate The function invoked per iteration.
	 * @returns {Object} Returns the new object.
	 */
	function pickByCallback(object, predicate) {
	  var result = {};
	  baseForIn(object, function(value, key, object) {
	    if (predicate(value, key, object)) {
	      result[key] = value;
	    }
	  });
	  return result;
	}

	module.exports = pickByCallback;


/***/ },
/* 34 */
/***/ function(module, exports, __webpack_require__) {

	var baseFor = __webpack_require__(35),
	    keysIn = __webpack_require__(37);

	/**
	 * The base implementation of `_.forIn` without support for callback
	 * shorthands and `this` binding.
	 *
	 * @private
	 * @param {Object} object The object to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Object} Returns `object`.
	 */
	function baseForIn(object, iteratee) {
	  return baseFor(object, iteratee, keysIn);
	}

	module.exports = baseForIn;


/***/ },
/* 35 */
/***/ function(module, exports, __webpack_require__) {

	var createBaseFor = __webpack_require__(36);

	/**
	 * The base implementation of `baseForIn` and `baseForOwn` which iterates
	 * over `object` properties returned by `keysFunc` invoking `iteratee` for
	 * each property. Iteratee functions may exit iteration early by explicitly
	 * returning `false`.
	 *
	 * @private
	 * @param {Object} object The object to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @param {Function} keysFunc The function to get the keys of `object`.
	 * @returns {Object} Returns `object`.
	 */
	var baseFor = createBaseFor();

	module.exports = baseFor;


/***/ },
/* 36 */
/***/ function(module, exports, __webpack_require__) {

	var toObject = __webpack_require__(32);

	/**
	 * Creates a base function for `_.forIn` or `_.forInRight`.
	 *
	 * @private
	 * @param {boolean} [fromRight] Specify iterating from right to left.
	 * @returns {Function} Returns the new base function.
	 */
	function createBaseFor(fromRight) {
	  return function(object, iteratee, keysFunc) {
	    var iterable = toObject(object),
	        props = keysFunc(object),
	        length = props.length,
	        index = fromRight ? length : -1;

	    while ((fromRight ? index-- : ++index < length)) {
	      var key = props[index];
	      if (iteratee(iterable[key], key, iterable) === false) {
	        break;
	      }
	    }
	    return object;
	  };
	}

	module.exports = createBaseFor;


/***/ },
/* 37 */
/***/ function(module, exports, __webpack_require__) {

	var isArguments = __webpack_require__(18),
	    isArray = __webpack_require__(24),
	    isIndex = __webpack_require__(38),
	    isLength = __webpack_require__(22),
	    isObject = __webpack_require__(28);

	/** Used for native method references. */
	var objectProto = Object.prototype;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/**
	 * Creates an array of the own and inherited enumerable property names of `object`.
	 *
	 * **Note:** Non-object values are coerced to objects.
	 *
	 * @static
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 *   this.b = 2;
	 * }
	 *
	 * Foo.prototype.c = 3;
	 *
	 * _.keysIn(new Foo);
	 * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
	 */
	function keysIn(object) {
	  if (object == null) {
	    return [];
	  }
	  if (!isObject(object)) {
	    object = Object(object);
	  }
	  var length = object.length;
	  length = (length && isLength(length) &&
	    (isArray(object) || isArguments(object)) && length) || 0;

	  var Ctor = object.constructor,
	      index = -1,
	      isProto = typeof Ctor == 'function' && Ctor.prototype === object,
	      result = Array(length),
	      skipIndexes = length > 0;

	  while (++index < length) {
	    result[index] = (index + '');
	  }
	  for (var key in object) {
	    if (!(skipIndexes && isIndex(key, length)) &&
	        !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
	      result.push(key);
	    }
	  }
	  return result;
	}

	module.exports = keysIn;


/***/ },
/* 38 */
/***/ function(module, exports) {

	/** Used to detect unsigned integer values. */
	var reIsUint = /^\d+$/;

	/**
	 * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)
	 * of an array-like value.
	 */
	var MAX_SAFE_INTEGER = 9007199254740991;

	/**
	 * Checks if `value` is a valid array-like index.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
	 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
	 */
	function isIndex(value, length) {
	  value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;
	  length = length == null ? MAX_SAFE_INTEGER : length;
	  return value > -1 && value % 1 == 0 && value < length;
	}

	module.exports = isIndex;


/***/ },
/* 39 */
/***/ function(module, exports) {

	/** Used as the `TypeError` message for "Functions" methods. */
	var FUNC_ERROR_TEXT = 'Expected a function';

	/* Native method references for those with the same name as other `lodash` methods. */
	var nativeMax = Math.max;

	/**
	 * Creates a function that invokes `func` with the `this` binding of the
	 * created function and arguments from `start` and beyond provided as an array.
	 *
	 * **Note:** This method is based on the [rest parameter](https://developer.mozilla.org/Web/JavaScript/Reference/Functions/rest_parameters).
	 *
	 * @static
	 * @memberOf _
	 * @category Function
	 * @param {Function} func The function to apply a rest parameter to.
	 * @param {number} [start=func.length-1] The start position of the rest parameter.
	 * @returns {Function} Returns the new function.
	 * @example
	 *
	 * var say = _.restParam(function(what, names) {
	 *   return what + ' ' + _.initial(names).join(', ') +
	 *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);
	 * });
	 *
	 * say('hello', 'fred', 'barney', 'pebbles');
	 * // => 'hello fred, barney, & pebbles'
	 */
	function restParam(func, start) {
	  if (typeof func != 'function') {
	    throw new TypeError(FUNC_ERROR_TEXT);
	  }
	  start = nativeMax(start === undefined ? (func.length - 1) : (+start || 0), 0);
	  return function() {
	    var args = arguments,
	        index = -1,
	        length = nativeMax(args.length - start, 0),
	        rest = Array(length);

	    while (++index < length) {
	      rest[index] = args[start + index];
	    }
	    switch (start) {
	      case 0: return func.call(this, rest);
	      case 1: return func.call(this, args[0], rest);
	      case 2: return func.call(this, args[0], args[1], rest);
	    }
	    var otherArgs = Array(start + 1);
	    index = -1;
	    while (++index < start) {
	      otherArgs[index] = args[index];
	    }
	    otherArgs[start] = rest;
	    return func.apply(this, otherArgs);
	  };
	}

	module.exports = restParam;


/***/ },
/* 40 */
/***/ function(module, exports, __webpack_require__) {

	var attributes = __webpack_require__(41)

	var ATTRIBUTE_NAME_CHAR = ':A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040';

	var isCustom = RegExp.prototype.test.bind(new RegExp('^(data|aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$'))

	module.exports = function pickAttributes(props) {
	  var result = {};

	  Object.keys(props).forEach(function(key) {
	    if (attributes[key] || isCustom(key))
	      result[key] = props[key]
	  })

	  return result;
	}


/***/ },
/* 41 */
/***/ function(module, exports) {

	/*!
	 * html-attributes
	 * https://github.com/alexmingoia/html-attributes
	 */

	'use strict';

	/**
	 * @module html-attributes
	 */

	module.exports = {
	  "abbr": "abbr",
	  "accept": "accept",
	  "acceptCharset": "accept-charset",
	  "accessKey": "accesskey",
	  "action": "action",
	  "allowFullScreen": "allowfullscreen",
	  "allowTransparency": "allowtransparency",
	  "alt": "alt",
	  "async": "async",
	  "autoComplete": "autocomplete",
	  "autoFocus": "autofocus",
	  "autoPlay": "autoplay",
	  "cellPadding": "cellpadding",
	  "cellSpacing": "cellspacing",
	  "challenge": "challenge",
	  "charset": "charset",
	  "checked": "checked",
	  "cite": "cite",
	  "class": "class",
	  "className": "class",
	  "cols": "cols",
	  "colSpan": "colspan",
	  "command": "command",
	  "content": "content",
	  "contentEditable": "contenteditable",
	  "contextMenu": "contextmenu",
	  "controls": "controls",
	  "coords": "coords",
	  "crossOrigin": "crossorigin",
	  "data": "data",
	  "dateTime": "datetime",
	  "default": "default",
	  "defer": "defer",
	  "dir": "dir",
	  "disabled": "disabled",
	  "download": "download",
	  "draggable": "draggable",
	  "dropzone": "dropzone",
	  "encType": "enctype",
	  "for": "for",
	  "form": "form",
	  "formAction": "formaction",
	  "formEncType": "formenctype",
	  "formMethod": "formmethod",
	  "formNoValidate": "formnovalidate",
	  "formTarget": "formtarget",
	  "frameBorder": "frameBorder",
	  "headers": "headers",
	  "height": "height",
	  "hidden": "hidden",
	  "high": "high",
	  "href": "href",
	  "hrefLang": "hreflang",
	  "htmlFor": "for",
	  "httpEquiv": "http-equiv",
	  "icon": "icon",
	  "id": "id",
	  "inputMode": "inputmode",
	  "isMap": "ismap",
	  "itemId": "itemid",
	  "itemProp": "itemprop",
	  "itemRef": "itemref",
	  "itemScope": "itemscope",
	  "itemType": "itemtype",
	  "kind": "kind",
	  "label": "label",
	  "lang": "lang",
	  "list": "list",
	  "loop": "loop",
	  "manifest": "manifest",
	  "max": "max",
	  "maxLength": "maxlength",
	  "media": "media",
	  "mediaGroup": "mediagroup",
	  "method": "method",
	  "min": "min",
	  "minLength": "minlength",
	  "multiple": "multiple",
	  "muted": "muted",
	  "name": "name",
	  "noValidate": "novalidate",
	  "open": "open",
	  "optimum": "optimum",
	  "pattern": "pattern",
	  "ping": "ping",
	  "placeholder": "placeholder",
	  "poster": "poster",
	  "preload": "preload",
	  "radioGroup": "radiogroup",
	  "readOnly": "readonly",
	  "rel": "rel",
	  "required": "required",
	  "role": "role",
	  "rows": "rows",
	  "rowSpan": "rowspan",
	  "sandbox": "sandbox",
	  "scope": "scope",
	  "scoped": "scoped",
	  "scrolling": "scrolling",
	  "seamless": "seamless",
	  "selected": "selected",
	  "shape": "shape",
	  "size": "size",
	  "sizes": "sizes",
	  "sortable": "sortable",
	  "span": "span",
	  "spellCheck": "spellcheck",
	  "src": "src",
	  "srcDoc": "srcdoc",
	  "srcSet": "srcset",
	  "start": "start",
	  "step": "step",
	  "style": "style",
	  "tabIndex": "tabindex",
	  "target": "target",
	  "title": "title",
	  "translate": "translate",
	  "type": "type",
	  "typeMustMatch": "typemustmatch",
	  "useMap": "usemap",
	  "value": "value",
	  "width": "width",
	  "wmode": "wmode",
	  "wrap": "wrap"
	};


/***/ },
/* 42 */
/***/ function(module, exports) {

	/**
	 * @license
	 * expr 1.0.0
	 * Copyright 2014 Jason Quense
	 * Based on Kendo UI Core expression code <https://github.com/telerik/kendo-ui-core#license-information>
	 * Copyright :copyright: 2014 Telerik
	 * Available under MIT license <https://github.com/theporchrat/expr/blob/master/LICENSE.txt>
	 */
	'use strict';
	var SPLIT_REGEX = /[^.^\]^[]+|(?=\[\]|\.\.)/g
	  , DIGIT_REGEX = /^\d+$/;

	var setCache = {}
	  , getCache = {};

	module.exports = {
	  
	  expr: expr,

	  setter: function(path){
	    return setCache[path] || ( setCache[path] = new Function('data, value', 'return ' + expr(path, 'data') + ' = value, data;'))
	  },

	  getter: function(path, safe) {
	    var k = path + '_' + safe
	    return getCache[k] || ( getCache[k] = new Function('data', 'return ' + expr(path, safe, 'data') ))
	  },

	  split: function(path){
	    return path.match(SPLIT_REGEX)
	  },

	  join: function(segments){
	    return segments.reduce(function(path, part){
	       return path + (isQuoted(part) || DIGIT_REGEX.test(part) 
	        ? '['+ part + ']' 
	        : (path ? '.' : '') + part)
	    }, '')
	  },

	  forEach: function(path, cb, thisArg) {
	    forEach(path.match(SPLIT_REGEX), cb, thisArg)
	  }
	}


	function expr(expression, safe, param){
	  expression = expression || ''
	  
	  if (typeof safe === 'string') {
	    param = safe;
	    safe = false;
	  }

	  param = param || 'data'

	  if(expression && expression.charAt(0) !== '[')
	    expression = '.' + expression

	  return safe ? makeSafe(expression, param) : param + expression 
	}

	function forEach(parts, iter, thisArg){
	  var len = parts.length
	    , part, idx, isArray, isBracket;

	  for (idx = 0; idx < len; idx++){
	    part = parts[idx]

	    if( part ) {
	      isBracket = isQuoted(part)
	      isArray   = !isBracket && /^\d+$/.test(part)

	      iter.call(thisArg, part, isBracket, isArray, idx, parts)
	    }
	  }
	}

	function isQuoted(str){
	  return typeof str === 'string' && str && ["'", '"'].indexOf(str.charAt(0)) !== -1
	}

	function makeSafe(path, param) {
	  var result = param
	    , parts = path.match(SPLIT_REGEX)
	    , isLast;

	  forEach(parts, function(part, isBracket, isArray, idx, parts){
	    isLast = idx === (parts.length - 1);

	    part = ( isBracket || isArray) 
	           ? '[' + part + ']' 
	           : '.' + part

	    result += part + (!isLast ? ' || {})' : ')')
	  })

	  return new Array(parts.length + 1).join('(') + result;
	}

/***/ },
/* 43 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports['default'] = shouldPureComponentUpdate;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _shallowEqual = __webpack_require__(44);

	var _shallowEqual2 = _interopRequireDefault(_shallowEqual);

	function shouldPureComponentUpdate(nextProps, nextState) {
	  return !(0, _shallowEqual2['default'])(this.props, nextProps) || !(0, _shallowEqual2['default'])(this.state, nextState);
	}

	module.exports = exports['default'];

/***/ },
/* 44 */
/***/ function(module, exports) {

	'use strict';

	exports.__esModule = true;
	exports['default'] = shallowEqual;

	function shallowEqual(objA, objB) {
	  if (objA === objB) {
	    return true;
	  }

	  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
	    return false;
	  }

	  var keysA = Object.keys(objA);
	  var keysB = Object.keys(objB);

	  if (keysA.length !== keysB.length) {
	    return false;
	  }

	  // Test for A's keys different from B.
	  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);
	  for (var i = 0; i < keysA.length; i++) {
	    if (!bHasOwnProperty(keysA[i]) || objA[keysA[i]] !== objB[keysA[i]]) {
	      return false;
	    }
	  }

	  return true;
	}

	module.exports = exports['default'];

/***/ },
/* 45 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _connectToMessageContainer = __webpack_require__(13);

	var _connectToMessageContainer2 = _interopRequireDefault(_connectToMessageContainer);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var uniq = function uniq(array) {
	  return array.filter(function (item, idx) {
	    return array.indexOf(item) === idx;
	  });
	};

	var add = function add(array, item) {
	  return array.indexOf(item) === -1 && array.push(item);
	};

	var remove = function remove(array, item) {
	  return array.filter(function (i) {
	    return i !== item;
	  });
	};

	var ALL_FIELDS = '@all';

	var MessageContainer = function (_React$Component) {
	  _inherits(MessageContainer, _React$Component);

	  function MessageContainer() {
	    _classCallCheck(this, MessageContainer);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    var _this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args)));

	    _initialiseProps.call(_this);

	    _this._handlers = [];
	    _this._groups = Object.create(null);
	    return _this;
	  }

	  MessageContainer.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
	    this._emit(nextProps);
	  };

	  MessageContainer.prototype.getChildContext = function getChildContext() {
	    if (!this._context) this._context = {
	      messageContainer: {
	        addToGroup: this.addToGroup,
	        namesForGroup: this.namesForGroup,
	        subscribe: this.subscribe,
	        onValidate: this.onValidate
	      }
	    };

	    return this._context;
	  };

	  MessageContainer.prototype._emit = function _emit(props) {
	    var context = this._listenerContext(props);
	    this._handlers.forEach(function (fn) {
	      return fn(context);
	    });
	  };

	  MessageContainer.prototype._listenerContext = function _listenerContext(_ref) {
	    var messages = _ref.messages;

	    return messages;
	  };

	  MessageContainer.prototype.render = function render() {
	    return this.props.children;
	  };

	  return MessageContainer;
	}(_react2.default.Component);

	MessageContainer.propTypes = {
	  passthrough: _react2.default.PropTypes.bool,
	  mapNames: _react2.default.PropTypes.func,
	  messages: _react2.default.PropTypes.object,
	  onValidationNeeded: _react2.default.PropTypes.func
	};
	MessageContainer.defaultProps = {
	  messages: Object.create(null),
	  mapNames: function mapNames(names) {
	    return names;
	  }
	};
	MessageContainer.contextTypes = {
	  messageContainer: _react2.default.PropTypes.object
	};
	MessageContainer.childContextTypes = {
	  messageContainer: _react2.default.PropTypes.object
	};

	var _initialiseProps = function _initialiseProps() {
	  var _this2 = this;

	  this.namesForGroup = function (groups) {
	    groups = groups ? [].concat(groups) : [];

	    if (groups.indexOf(ALL_FIELDS) !== -1) {
	      groups = Object.keys(_this2._groups);
	    }

	    return uniq(groups.reduce(function (fields, group) {
	      return fields.concat(_this2._groups[group]);
	    }, []));
	  };

	  this.addToGroup = function (grpName, names) {
	    if (grpName === ALL_FIELDS) return;

	    grpName = grpName || '@@unassigned-group';

	    names = names && [].concat(names);

	    var group = _this2._groups[grpName];

	    if (!names || !names.length) return;

	    if (!group) group = _this2._groups[grpName] = [];

	    names.forEach(function (name) {
	      return add(group, name);
	    });

	    return function () {
	      return names.forEach(function (name) {
	        return remove(group, name);
	      });
	    };
	  };

	  this.onValidate = function (fields, type, args) {
	    if (!fields || !fields.length) return;

	    var _props = _this2.props;
	    var mapNames = _props.mapNames;
	    var passthrough = _props.passthrough;
	    var messageContainer = _this2.context.messageContainer;


	    if (messageContainer && passthrough) {
	      messageContainer.onValidate(mapNames(fields), type, args);
	      return;
	    }

	    _this2.props.onValidationNeeded && _this2.props.onValidationNeeded({ type: type, fields: fields, args: args });
	  };

	  this.subscribe = function (listener) {
	    var context = _this2._listenerContext(_this2.props);

	    _this2._handlers.push(listener);

	    listener(context);

	    return function () {
	      return remove(_this2._handlers, listener);
	    };
	  };
	};

	exports.default = (0, _connectToMessageContainer2.default)(MessageContainer, {
	  resolveNames: function resolveNames() {},
	  mapMessages: function mapMessages(messages) {
	    return messages;
	  },
	  methods: ['namesForGroup', 'addToGroup']
	});
	module.exports = exports['default'];

/***/ },
/* 46 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _createUncontrollable = __webpack_require__(47);

	var _createUncontrollable2 = _interopRequireDefault(_createUncontrollable);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var mixin = {
	  shouldComponentUpdate: function shouldComponentUpdate() {
	    //let the forceUpdate trigger the update
	    return !this._notifying;
	  }
	};

	function set(component, propName, handler, value, args) {
	  if (handler) {
	    component._notifying = true;
	    handler.call.apply(handler, [component, value].concat(args));
	    component._notifying = false;
	  }

	  component._values[propName] = value;

	  if (component.isMounted()) component.forceUpdate();
	}

	exports.default = (0, _createUncontrollable2.default)([mixin], set);
	module.exports = exports['default'];

/***/ },
/* 47 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	exports.default = createUncontrollable;

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _invariant = __webpack_require__(48);

	var _invariant2 = _interopRequireDefault(_invariant);

	var _utils = __webpack_require__(49);

	var utils = _interopRequireWildcard(_utils);

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function createUncontrollable(mixins, set) {

	  return uncontrollable;

	  function uncontrollable(Component, controlledValues) {
	    var methods = arguments.length <= 2 || arguments[2] === undefined ? [] : arguments[2];

	    var displayName = Component.displayName || Component.name || 'Component',
	        basePropTypes = utils.getType(Component).propTypes,
	        isCompositeComponent = utils.isReactComponent(Component),
	        controlledProps = Object.keys(controlledValues),
	        propTypes;

	    var OMIT_PROPS = ['valueLink', 'checkedLink'].concat(controlledProps.map(utils.defaultKey));

	    propTypes = utils.uncontrolledPropTypes(controlledValues, basePropTypes, displayName);

	    (0, _invariant2.default)(isCompositeComponent || !methods.length, '[uncontrollable] stateless function components cannot pass through methods ' + 'because they have no associated instances. Check component: ' + displayName + ', ' + 'attempting to pass through methods: ' + methods.join(', '));

	    methods = utils.transform(methods, function (obj, method) {
	      obj[method] = function () {
	        var _refs$inner;

	        return (_refs$inner = this.refs.inner)[method].apply(_refs$inner, arguments);
	      };
	    }, {});

	    var component = _react2.default.createClass(_extends({

	      displayName: 'Uncontrolled(' + displayName + ')',

	      mixins: mixins,

	      propTypes: propTypes

	    }, methods, {
	      componentWillMount: function componentWillMount() {
	        var _this = this;

	        var props = this.props;

	        this._values = {};

	        controlledProps.forEach(function (key) {
	          _this._values[key] = props[utils.defaultKey(key)];
	        });
	      },


	      /**
	       * If a prop switches from controlled to Uncontrolled
	       * reset its value to the defaultValue
	       */
	      componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
	        var _this2 = this;

	        var props = this.props;

	        controlledProps.forEach(function (key) {
	          if (utils.getValue(nextProps, key) === undefined && utils.getValue(props, key) !== undefined) {
	            _this2._values[key] = nextProps[utils.defaultKey(key)];
	          }
	        });
	      },
	      getControlledInstance: function getControlledInstance() {
	        return this.refs.inner;
	      },
	      render: function render() {
	        var _this3 = this;

	        var newProps = {},
	            props = omitProps(this.props);

	        utils.each(controlledValues, function (handle, propName) {
	          var linkPropName = utils.getLinkName(propName),
	              prop = _this3.props[propName];

	          if (linkPropName && !isProp(_this3.props, propName) && isProp(_this3.props, linkPropName)) {
	            prop = _this3.props[linkPropName].value;
	          }

	          newProps[propName] = prop !== undefined ? prop : _this3._values[propName];

	          newProps[handle] = setAndNotify.bind(_this3, propName);
	        });

	        newProps = _extends({}, props, newProps, {
	          ref: isCompositeComponent ? 'inner' : null
	        });

	        return _react2.default.createElement(Component, newProps);
	      }
	    }));

	    component.ControlledComponent = Component;

	    /**
	     * useful when wrapping a Component and you want to control
	     * everything
	     */
	    component.deferControlTo = function (newComponent) {
	      var additions = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];
	      var nextMethods = arguments[2];

	      return uncontrollable(newComponent, _extends({}, controlledValues, additions), nextMethods);
	    };

	    return component;

	    function setAndNotify(propName, value) {
	      var linkName = utils.getLinkName(propName),
	          handler = this.props[controlledValues[propName]];

	      if (linkName && isProp(this.props, linkName) && !handler) {
	        handler = this.props[linkName].requestChange;
	      }

	      for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
	        args[_key - 2] = arguments[_key];
	      }

	      set(this, propName, handler, value, args);
	    }

	    function isProp(props, prop) {
	      return props[prop] !== undefined;
	    }

	    function omitProps(props) {
	      var result = {};

	      utils.each(props, function (value, key) {
	        if (OMIT_PROPS.indexOf(key) === -1) result[key] = value;
	      });

	      return result;
	    }
	  }
	}
	module.exports = exports['default'];

/***/ },
/* 48 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 */

	'use strict';

	/**
	 * Use invariant() to assert state which your program assumes to be true.
	 *
	 * Provide sprintf-style format (only %s is supported) and arguments
	 * to provide information about what broke and what you were
	 * expecting.
	 *
	 * The invariant message will be stripped in production, but the invariant
	 * will remain to ensure logic does not differ in production.
	 */

	var invariant = function(condition, format, a, b, c, d, e, f) {
	  if (true) {
	    if (format === undefined) {
	      throw new Error('invariant requires an error message argument');
	    }
	  }

	  if (!condition) {
	    var error;
	    if (format === undefined) {
	      error = new Error(
	        'Minified exception occurred; use the non-minified dev environment ' +
	        'for the full error message and additional helpful warnings.'
	      );
	    } else {
	      var args = [a, b, c, d, e, f];
	      var argIndex = 0;
	      error = new Error(
	        format.replace(/%s/g, function() { return args[argIndex++]; })
	      );
	      error.name = 'Invariant Violation';
	    }

	    error.framesToPop = 1; // we don't care about invariant's own frame
	    throw error;
	  }
	};

	module.exports = invariant;


/***/ },
/* 49 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.version = undefined;
	exports.uncontrolledPropTypes = uncontrolledPropTypes;
	exports.getType = getType;
	exports.getValue = getValue;
	exports.getLinkName = getLinkName;
	exports.defaultKey = defaultKey;
	exports.chain = chain;
	exports.transform = transform;
	exports.each = each;
	exports.has = has;
	exports.isReactComponent = isReactComponent;

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _invariant = __webpack_require__(48);

	var _invariant2 = _interopRequireDefault(_invariant);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function readOnlyPropType(handler, name) {
	  return function (props, propName) {
	    if (props[propName] !== undefined) {
	      if (!props[handler]) {
	        return new Error('You have provided a `' + propName + '` prop to ' + '`' + name + '` without an `' + handler + '` handler. This will render a read-only field. ' + 'If the field should be mutable use `' + defaultKey(propName) + '`. Otherwise, set `' + handler + '`');
	      }
	    }
	  };
	}

	function uncontrolledPropTypes(controlledValues, basePropTypes, displayName) {
	  var propTypes = {};

	  if (("development") !== 'production' && basePropTypes) {
	    transform(controlledValues, function (obj, handler, prop) {
	      (0, _invariant2.default)(typeof handler === 'string' && handler.trim().length, 'Uncontrollable - [%s]: the prop `%s` needs a valid handler key name in order to make it uncontrollable', displayName, prop);

	      obj[prop] = readOnlyPropType(handler, displayName);
	    }, propTypes);
	  }

	  return propTypes;
	}

	var version = exports.version = _react2.default.version.split('.').map(parseFloat);

	function getType(component) {
	  if (version[0] >= 15 || version[0] === 0 && version[1] >= 13) return component;

	  return component.type;
	}

	function getValue(props, name) {
	  var linkPropName = getLinkName(name);

	  if (linkPropName && !isProp(props, name) && isProp(props, linkPropName)) return props[linkPropName].value;

	  return props[name];
	}

	function isProp(props, prop) {
	  return props[prop] !== undefined;
	}

	function getLinkName(name) {
	  return name === 'value' ? 'valueLink' : name === 'checked' ? 'checkedLink' : null;
	}

	function defaultKey(key) {
	  return 'default' + key.charAt(0).toUpperCase() + key.substr(1);
	}

	function chain(thisArg, a, b) {
	  return function chainedFunction() {
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    a && a.call.apply(a, [thisArg].concat(args));
	    b && b.call.apply(b, [thisArg].concat(args));
	  };
	}

	function transform(obj, cb, seed) {
	  each(obj, cb.bind(null, seed = seed || (Array.isArray(obj) ? [] : {})));
	  return seed;
	}

	function each(obj, cb, thisArg) {
	  if (Array.isArray(obj)) return obj.forEach(cb, thisArg);

	  for (var key in obj) {
	    if (has(obj, key)) cb.call(thisArg, obj[key], key, obj);
	  }
	}

	function has(o, k) {
	  return o ? Object.prototype.hasOwnProperty.call(o, k) : false;
	}

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 */
	function isReactComponent(component) {
	  return !!(component && component.prototype && component.prototype.isReactComponent);
	}

/***/ },
/* 50 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 */

	'use strict';

	/**
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */

	var warning = function() {};

	if (true) {
	  warning = function(condition, format, args) {
	    var len = arguments.length;
	    args = new Array(len > 2 ? len - 2 : 0);
	    for (var key = 2; key < len; key++) {
	      args[key - 2] = arguments[key];
	    }
	    if (format === undefined) {
	      throw new Error(
	        '`warning(condition, format, ...args)` requires a warning ' +
	        'message argument'
	      );
	    }

	    if (format.length < 10 || (/^[s\W]*$/).test(format)) {
	      throw new Error(
	        'The warning format should be able to uniquely identify this ' +
	        'warning. Please, use a more descriptive format than: ' + format
	      );
	    }

	    if (!condition) {
	      var argIndex = 0;
	      var message = 'Warning: ' +
	        format.replace(/%s/g, function() {
	          return args[argIndex++];
	        });
	      if (typeof console !== 'undefined') {
	        console.error(message);
	      }
	      try {
	        // This error was thrown as a convenience so that you can use this stack
	        // to find the callsite that caused this warning to fire.
	        throw new Error(message);
	      } catch(x) {}
	    }
	  };
	}

	module.exports = warning;


/***/ },
/* 51 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.default = reach;

	var _propertyExpr = __webpack_require__(42);

	var _has = __webpack_require__(52);

	var _has2 = _interopRequireDefault(_has);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var trim = function trim(part) {
	  return part.substr(0, part.length - 1).substr(1);
	};

	function reach(obj, path, value, context) {
	  var parent = void 0,
	      lastPart = void 0;

	  // if only one "value" arg then use it for both
	  context = context || value;

	  (0, _propertyExpr.forEach)(path, function (_part, isBracket, isArray) {
	    var part = isBracket ? trim(_part) : _part;

	    if (isArray || (0, _has2.default)(obj, '_subType')) {
	      // we skipped an array: foo[].bar
	      var idx = isArray ? parseInt(part, 10) : 0;

	      obj = obj.resolve({ context: context, parent: parent, value: value })._subType;

	      if (value) {
	        if (isArray && idx >= value.length) {
	          throw new Error('Yup.reach cannot resolve an array item at index: ' + _part + ', in the path: ' + path + '. ' + 'because there is no value at that index. ');
	        }

	        value = value[idx];
	      }
	    }

	    if (!isArray) {
	      obj = obj.resolve({ context: context, parent: parent, value: value });

	      if (!(0, _has2.default)(obj, 'fields') || !(0, _has2.default)(obj.fields, part)) throw new Error('The schema does not contain the path: ' + path + '. ' + ('(failed at: ' + lastPart + ' which is a type: "' + obj._type + '") '));

	      obj = obj.fields[part];

	      parent = value;
	      value = value && value[part];
	      lastPart = isBracket ? '[' + _part + ']' : '.' + _part;
	    }
	  });

	  if (obj) {
	    obj = obj.resolve({ context: context, parent: parent, value: value });
	  }

	  return obj;
	}
	module.exports = exports['default'];

/***/ },
/* 52 */
/***/ function(module, exports, __webpack_require__) {

	var baseHas = __webpack_require__(53),
	    hasPath = __webpack_require__(54);

	/**
	 * Checks if `path` is a direct property of `object`.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The object to query.
	 * @param {Array|string} path The path to check.
	 * @returns {boolean} Returns `true` if `path` exists, else `false`.
	 * @example
	 *
	 * var object = { 'a': { 'b': 2 } };
	 * var other = _.create({ 'a': _.create({ 'b': 2 }) });
	 *
	 * _.has(object, 'a');
	 * // => true
	 *
	 * _.has(object, 'a.b');
	 * // => true
	 *
	 * _.has(object, ['a', 'b']);
	 * // => true
	 *
	 * _.has(other, 'a');
	 * // => false
	 */
	function has(object, path) {
	  return object != null && hasPath(object, path, baseHas);
	}

	module.exports = has;


/***/ },
/* 53 */
/***/ function(module, exports) {

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/**
	 * The base implementation of `_.has` without support for deep paths.
	 *
	 * @private
	 * @param {Object} [object] The object to query.
	 * @param {Array|string} key The key to check.
	 * @returns {boolean} Returns `true` if `key` exists, else `false`.
	 */
	function baseHas(object, key) {
	  return object != null && hasOwnProperty.call(object, key);
	}

	module.exports = baseHas;


/***/ },
/* 54 */
/***/ function(module, exports, __webpack_require__) {

	var castPath = __webpack_require__(55),
	    isArguments = __webpack_require__(99),
	    isArray = __webpack_require__(56),
	    isIndex = __webpack_require__(103),
	    isKey = __webpack_require__(104),
	    isLength = __webpack_require__(102),
	    toKey = __webpack_require__(105);

	/**
	 * Checks if `path` exists on `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {Array|string} path The path to check.
	 * @param {Function} hasFunc The function to check properties.
	 * @returns {boolean} Returns `true` if `path` exists, else `false`.
	 */
	function hasPath(object, path, hasFunc) {
	  path = isKey(path, object) ? [path] : castPath(path);

	  var index = -1,
	      length = path.length,
	      result = false;

	  while (++index < length) {
	    var key = toKey(path[index]);
	    if (!(result = object != null && hasFunc(object, key))) {
	      break;
	    }
	    object = object[key];
	  }
	  if (result || ++index != length) {
	    return result;
	  }
	  length = object ? object.length : 0;
	  return !!length && isLength(length) && isIndex(key, length) &&
	    (isArray(object) || isArguments(object));
	}

	module.exports = hasPath;


/***/ },
/* 55 */
/***/ function(module, exports, __webpack_require__) {

	var isArray = __webpack_require__(56),
	    stringToPath = __webpack_require__(57);

	/**
	 * Casts `value` to a path array if it's not one.
	 *
	 * @private
	 * @param {*} value The value to inspect.
	 * @returns {Array} Returns the cast property path array.
	 */
	function castPath(value) {
	  return isArray(value) ? value : stringToPath(value);
	}

	module.exports = castPath;


/***/ },
/* 56 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is classified as an `Array` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
	 * @example
	 *
	 * _.isArray([1, 2, 3]);
	 * // => true
	 *
	 * _.isArray(document.body.children);
	 * // => false
	 *
	 * _.isArray('abc');
	 * // => false
	 *
	 * _.isArray(_.noop);
	 * // => false
	 */
	var isArray = Array.isArray;

	module.exports = isArray;


/***/ },
/* 57 */
/***/ function(module, exports, __webpack_require__) {

	var memoizeCapped = __webpack_require__(58),
	    toString = __webpack_require__(94);

	/** Used to match property names within property paths. */
	var reLeadingDot = /^\./,
	    rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;

	/** Used to match backslashes in property paths. */
	var reEscapeChar = /\\(\\)?/g;

	/**
	 * Converts `string` to a property path array.
	 *
	 * @private
	 * @param {string} string The string to convert.
	 * @returns {Array} Returns the property path array.
	 */
	var stringToPath = memoizeCapped(function(string) {
	  string = toString(string);

	  var result = [];
	  if (reLeadingDot.test(string)) {
	    result.push('');
	  }
	  string.replace(rePropName, function(match, number, quote, string) {
	    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));
	  });
	  return result;
	});

	module.exports = stringToPath;


/***/ },
/* 58 */
/***/ function(module, exports, __webpack_require__) {

	var memoize = __webpack_require__(59);

	/** Used as the maximum memoize cache size. */
	var MAX_MEMOIZE_SIZE = 500;

	/**
	 * A specialized version of `_.memoize` which clears the memoized function's
	 * cache when it exceeds `MAX_MEMOIZE_SIZE`.
	 *
	 * @private
	 * @param {Function} func The function to have its output memoized.
	 * @returns {Function} Returns the new memoized function.
	 */
	function memoizeCapped(func) {
	  var result = memoize(func, function(key) {
	    if (cache.size === MAX_MEMOIZE_SIZE) {
	      cache.clear();
	    }
	    return key;
	  });

	  var cache = result.cache;
	  return result;
	}

	module.exports = memoizeCapped;


/***/ },
/* 59 */
/***/ function(module, exports, __webpack_require__) {

	var MapCache = __webpack_require__(60);

	/** Error message constants. */
	var FUNC_ERROR_TEXT = 'Expected a function';

	/**
	 * Creates a function that memoizes the result of `func`. If `resolver` is
	 * provided, it determines the cache key for storing the result based on the
	 * arguments provided to the memoized function. By default, the first argument
	 * provided to the memoized function is used as the map cache key. The `func`
	 * is invoked with the `this` binding of the memoized function.
	 *
	 * **Note:** The cache is exposed as the `cache` property on the memoized
	 * function. Its creation may be customized by replacing the `_.memoize.Cache`
	 * constructor with one whose instances implement the
	 * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
	 * method interface of `delete`, `get`, `has`, and `set`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Function
	 * @param {Function} func The function to have its output memoized.
	 * @param {Function} [resolver] The function to resolve the cache key.
	 * @returns {Function} Returns the new memoized function.
	 * @example
	 *
	 * var object = { 'a': 1, 'b': 2 };
	 * var other = { 'c': 3, 'd': 4 };
	 *
	 * var values = _.memoize(_.values);
	 * values(object);
	 * // => [1, 2]
	 *
	 * values(other);
	 * // => [3, 4]
	 *
	 * object.a = 2;
	 * values(object);
	 * // => [1, 2]
	 *
	 * // Modify the result cache.
	 * values.cache.set(object, ['a', 'b']);
	 * values(object);
	 * // => ['a', 'b']
	 *
	 * // Replace `_.memoize.Cache`.
	 * _.memoize.Cache = WeakMap;
	 */
	function memoize(func, resolver) {
	  if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {
	    throw new TypeError(FUNC_ERROR_TEXT);
	  }
	  var memoized = function() {
	    var args = arguments,
	        key = resolver ? resolver.apply(this, args) : args[0],
	        cache = memoized.cache;

	    if (cache.has(key)) {
	      return cache.get(key);
	    }
	    var result = func.apply(this, args);
	    memoized.cache = cache.set(key, result) || cache;
	    return result;
	  };
	  memoized.cache = new (memoize.Cache || MapCache);
	  return memoized;
	}

	// Expose `MapCache`.
	memoize.Cache = MapCache;

	module.exports = memoize;


/***/ },
/* 60 */
/***/ function(module, exports, __webpack_require__) {

	var mapCacheClear = __webpack_require__(61),
	    mapCacheDelete = __webpack_require__(88),
	    mapCacheGet = __webpack_require__(91),
	    mapCacheHas = __webpack_require__(92),
	    mapCacheSet = __webpack_require__(93);

	/**
	 * Creates a map cache object to store key-value pairs.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [entries] The key-value pairs to cache.
	 */
	function MapCache(entries) {
	  var index = -1,
	      length = entries ? entries.length : 0;

	  this.clear();
	  while (++index < length) {
	    var entry = entries[index];
	    this.set(entry[0], entry[1]);
	  }
	}

	// Add methods to `MapCache`.
	MapCache.prototype.clear = mapCacheClear;
	MapCache.prototype['delete'] = mapCacheDelete;
	MapCache.prototype.get = mapCacheGet;
	MapCache.prototype.has = mapCacheHas;
	MapCache.prototype.set = mapCacheSet;

	module.exports = MapCache;


/***/ },
/* 61 */
/***/ function(module, exports, __webpack_require__) {

	var Hash = __webpack_require__(62),
	    ListCache = __webpack_require__(79),
	    Map = __webpack_require__(87);

	/**
	 * Removes all key-value entries from the map.
	 *
	 * @private
	 * @name clear
	 * @memberOf MapCache
	 */
	function mapCacheClear() {
	  this.size = 0;
	  this.__data__ = {
	    'hash': new Hash,
	    'map': new (Map || ListCache),
	    'string': new Hash
	  };
	}

	module.exports = mapCacheClear;


/***/ },
/* 62 */
/***/ function(module, exports, __webpack_require__) {

	var hashClear = __webpack_require__(63),
	    hashDelete = __webpack_require__(75),
	    hashGet = __webpack_require__(76),
	    hashHas = __webpack_require__(77),
	    hashSet = __webpack_require__(78);

	/**
	 * Creates a hash object.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [entries] The key-value pairs to cache.
	 */
	function Hash(entries) {
	  var index = -1,
	      length = entries ? entries.length : 0;

	  this.clear();
	  while (++index < length) {
	    var entry = entries[index];
	    this.set(entry[0], entry[1]);
	  }
	}

	// Add methods to `Hash`.
	Hash.prototype.clear = hashClear;
	Hash.prototype['delete'] = hashDelete;
	Hash.prototype.get = hashGet;
	Hash.prototype.has = hashHas;
	Hash.prototype.set = hashSet;

	module.exports = Hash;


/***/ },
/* 63 */
/***/ function(module, exports, __webpack_require__) {

	var nativeCreate = __webpack_require__(64);

	/**
	 * Removes all key-value entries from the hash.
	 *
	 * @private
	 * @name clear
	 * @memberOf Hash
	 */
	function hashClear() {
	  this.__data__ = nativeCreate ? nativeCreate(null) : {};
	  this.size = 0;
	}

	module.exports = hashClear;


/***/ },
/* 64 */
/***/ function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(65);

	/* Built-in method references that are verified to be native. */
	var nativeCreate = getNative(Object, 'create');

	module.exports = nativeCreate;


/***/ },
/* 65 */
/***/ function(module, exports, __webpack_require__) {

	var baseIsNative = __webpack_require__(66),
	    getValue = __webpack_require__(74);

	/**
	 * Gets the native function at `key` of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {string} key The key of the method to get.
	 * @returns {*} Returns the function if it's native, else `undefined`.
	 */
	function getNative(object, key) {
	  var value = getValue(object, key);
	  return baseIsNative(value) ? value : undefined;
	}

	module.exports = getNative;


/***/ },
/* 66 */
/***/ function(module, exports, __webpack_require__) {

	var isFunction = __webpack_require__(67),
	    isMasked = __webpack_require__(69),
	    isObject = __webpack_require__(68),
	    toSource = __webpack_require__(73);

	/**
	 * Used to match `RegExp`
	 * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
	 */
	var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;

	/** Used to detect host constructors (Safari). */
	var reIsHostCtor = /^\[object .+?Constructor\]$/;

	/** Used for built-in method references. */
	var funcProto = Function.prototype,
	    objectProto = Object.prototype;

	/** Used to resolve the decompiled source of functions. */
	var funcToString = funcProto.toString;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/** Used to detect if a method is native. */
	var reIsNative = RegExp('^' +
	  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
	  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
	);

	/**
	 * The base implementation of `_.isNative` without bad shim checks.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a native function,
	 *  else `false`.
	 */
	function baseIsNative(value) {
	  if (!isObject(value) || isMasked(value)) {
	    return false;
	  }
	  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
	  return pattern.test(toSource(value));
	}

	module.exports = baseIsNative;


/***/ },
/* 67 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(68);

	/** `Object#toString` result references. */
	var funcTag = '[object Function]',
	    genTag = '[object GeneratorFunction]',
	    proxyTag = '[object Proxy]';

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objectToString = objectProto.toString;

	/**
	 * Checks if `value` is classified as a `Function` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
	 * @example
	 *
	 * _.isFunction(_);
	 * // => true
	 *
	 * _.isFunction(/abc/);
	 * // => false
	 */
	function isFunction(value) {
	  // The use of `Object#toString` avoids issues with the `typeof` operator
	  // in Safari 8-9 which returns 'object' for typed array and other constructors.
	  var tag = isObject(value) ? objectToString.call(value) : '';
	  return tag == funcTag || tag == genTag || tag == proxyTag;
	}

	module.exports = isFunction;


/***/ },
/* 68 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is the
	 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
	 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
	 * @example
	 *
	 * _.isObject({});
	 * // => true
	 *
	 * _.isObject([1, 2, 3]);
	 * // => true
	 *
	 * _.isObject(_.noop);
	 * // => true
	 *
	 * _.isObject(null);
	 * // => false
	 */
	function isObject(value) {
	  var type = typeof value;
	  return value != null && (type == 'object' || type == 'function');
	}

	module.exports = isObject;


/***/ },
/* 69 */
/***/ function(module, exports, __webpack_require__) {

	var coreJsData = __webpack_require__(70);

	/** Used to detect methods masquerading as native. */
	var maskSrcKey = (function() {
	  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
	  return uid ? ('Symbol(src)_1.' + uid) : '';
	}());

	/**
	 * Checks if `func` has its source masked.
	 *
	 * @private
	 * @param {Function} func The function to check.
	 * @returns {boolean} Returns `true` if `func` is masked, else `false`.
	 */
	function isMasked(func) {
	  return !!maskSrcKey && (maskSrcKey in func);
	}

	module.exports = isMasked;


/***/ },
/* 70 */
/***/ function(module, exports, __webpack_require__) {

	var root = __webpack_require__(71);

	/** Used to detect overreaching core-js shims. */
	var coreJsData = root['__core-js_shared__'];

	module.exports = coreJsData;


/***/ },
/* 71 */
/***/ function(module, exports, __webpack_require__) {

	var freeGlobal = __webpack_require__(72);

	/** Detect free variable `self`. */
	var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

	/** Used as a reference to the global object. */
	var root = freeGlobal || freeSelf || Function('return this')();

	module.exports = root;


/***/ },
/* 72 */
/***/ function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(global) {/** Detect free variable `global` from Node.js. */
	var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

	module.exports = freeGlobal;

	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 73 */
/***/ function(module, exports) {

	/** Used for built-in method references. */
	var funcProto = Function.prototype;

	/** Used to resolve the decompiled source of functions. */
	var funcToString = funcProto.toString;

	/**
	 * Converts `func` to its source code.
	 *
	 * @private
	 * @param {Function} func The function to process.
	 * @returns {string} Returns the source code.
	 */
	function toSource(func) {
	  if (func != null) {
	    try {
	      return funcToString.call(func);
	    } catch (e) {}
	    try {
	      return (func + '');
	    } catch (e) {}
	  }
	  return '';
	}

	module.exports = toSource;


/***/ },
/* 74 */
/***/ function(module, exports) {

	/**
	 * Gets the value at `key` of `object`.
	 *
	 * @private
	 * @param {Object} [object] The object to query.
	 * @param {string} key The key of the property to get.
	 * @returns {*} Returns the property value.
	 */
	function getValue(object, key) {
	  return object == null ? undefined : object[key];
	}

	module.exports = getValue;


/***/ },
/* 75 */
/***/ function(module, exports) {

	/**
	 * Removes `key` and its value from the hash.
	 *
	 * @private
	 * @name delete
	 * @memberOf Hash
	 * @param {Object} hash The hash to modify.
	 * @param {string} key The key of the value to remove.
	 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	 */
	function hashDelete(key) {
	  var result = this.has(key) && delete this.__data__[key];
	  this.size -= result ? 1 : 0;
	  return result;
	}

	module.exports = hashDelete;


/***/ },
/* 76 */
/***/ function(module, exports, __webpack_require__) {

	var nativeCreate = __webpack_require__(64);

	/** Used to stand-in for `undefined` hash values. */
	var HASH_UNDEFINED = '__lodash_hash_undefined__';

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/**
	 * Gets the hash value for `key`.
	 *
	 * @private
	 * @name get
	 * @memberOf Hash
	 * @param {string} key The key of the value to get.
	 * @returns {*} Returns the entry value.
	 */
	function hashGet(key) {
	  var data = this.__data__;
	  if (nativeCreate) {
	    var result = data[key];
	    return result === HASH_UNDEFINED ? undefined : result;
	  }
	  return hasOwnProperty.call(data, key) ? data[key] : undefined;
	}

	module.exports = hashGet;


/***/ },
/* 77 */
/***/ function(module, exports, __webpack_require__) {

	var nativeCreate = __webpack_require__(64);

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/**
	 * Checks if a hash value for `key` exists.
	 *
	 * @private
	 * @name has
	 * @memberOf Hash
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function hashHas(key) {
	  var data = this.__data__;
	  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);
	}

	module.exports = hashHas;


/***/ },
/* 78 */
/***/ function(module, exports, __webpack_require__) {

	var nativeCreate = __webpack_require__(64);

	/** Used to stand-in for `undefined` hash values. */
	var HASH_UNDEFINED = '__lodash_hash_undefined__';

	/**
	 * Sets the hash `key` to `value`.
	 *
	 * @private
	 * @name set
	 * @memberOf Hash
	 * @param {string} key The key of the value to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns the hash instance.
	 */
	function hashSet(key, value) {
	  var data = this.__data__;
	  this.size += this.has(key) ? 0 : 1;
	  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
	  return this;
	}

	module.exports = hashSet;


/***/ },
/* 79 */
/***/ function(module, exports, __webpack_require__) {

	var listCacheClear = __webpack_require__(80),
	    listCacheDelete = __webpack_require__(81),
	    listCacheGet = __webpack_require__(84),
	    listCacheHas = __webpack_require__(85),
	    listCacheSet = __webpack_require__(86);

	/**
	 * Creates an list cache object.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [entries] The key-value pairs to cache.
	 */
	function ListCache(entries) {
	  var index = -1,
	      length = entries ? entries.length : 0;

	  this.clear();
	  while (++index < length) {
	    var entry = entries[index];
	    this.set(entry[0], entry[1]);
	  }
	}

	// Add methods to `ListCache`.
	ListCache.prototype.clear = listCacheClear;
	ListCache.prototype['delete'] = listCacheDelete;
	ListCache.prototype.get = listCacheGet;
	ListCache.prototype.has = listCacheHas;
	ListCache.prototype.set = listCacheSet;

	module.exports = ListCache;


/***/ },
/* 80 */
/***/ function(module, exports) {

	/**
	 * Removes all key-value entries from the list cache.
	 *
	 * @private
	 * @name clear
	 * @memberOf ListCache
	 */
	function listCacheClear() {
	  this.__data__ = [];
	  this.size = 0;
	}

	module.exports = listCacheClear;


/***/ },
/* 81 */
/***/ function(module, exports, __webpack_require__) {

	var assocIndexOf = __webpack_require__(82);

	/** Used for built-in method references. */
	var arrayProto = Array.prototype;

	/** Built-in value references. */
	var splice = arrayProto.splice;

	/**
	 * Removes `key` and its value from the list cache.
	 *
	 * @private
	 * @name delete
	 * @memberOf ListCache
	 * @param {string} key The key of the value to remove.
	 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	 */
	function listCacheDelete(key) {
	  var data = this.__data__,
	      index = assocIndexOf(data, key);

	  if (index < 0) {
	    return false;
	  }
	  var lastIndex = data.length - 1;
	  if (index == lastIndex) {
	    data.pop();
	  } else {
	    splice.call(data, index, 1);
	  }
	  --this.size;
	  return true;
	}

	module.exports = listCacheDelete;


/***/ },
/* 82 */
/***/ function(module, exports, __webpack_require__) {

	var eq = __webpack_require__(83);

	/**
	 * Gets the index at which the `key` is found in `array` of key-value pairs.
	 *
	 * @private
	 * @param {Array} array The array to inspect.
	 * @param {*} key The key to search for.
	 * @returns {number} Returns the index of the matched value, else `-1`.
	 */
	function assocIndexOf(array, key) {
	  var length = array.length;
	  while (length--) {
	    if (eq(array[length][0], key)) {
	      return length;
	    }
	  }
	  return -1;
	}

	module.exports = assocIndexOf;


/***/ },
/* 83 */
/***/ function(module, exports) {

	/**
	 * Performs a
	 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	 * comparison between two values to determine if they are equivalent.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to compare.
	 * @param {*} other The other value to compare.
	 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	 * @example
	 *
	 * var object = { 'a': 1 };
	 * var other = { 'a': 1 };
	 *
	 * _.eq(object, object);
	 * // => true
	 *
	 * _.eq(object, other);
	 * // => false
	 *
	 * _.eq('a', 'a');
	 * // => true
	 *
	 * _.eq('a', Object('a'));
	 * // => false
	 *
	 * _.eq(NaN, NaN);
	 * // => true
	 */
	function eq(value, other) {
	  return value === other || (value !== value && other !== other);
	}

	module.exports = eq;


/***/ },
/* 84 */
/***/ function(module, exports, __webpack_require__) {

	var assocIndexOf = __webpack_require__(82);

	/**
	 * Gets the list cache value for `key`.
	 *
	 * @private
	 * @name get
	 * @memberOf ListCache
	 * @param {string} key The key of the value to get.
	 * @returns {*} Returns the entry value.
	 */
	function listCacheGet(key) {
	  var data = this.__data__,
	      index = assocIndexOf(data, key);

	  return index < 0 ? undefined : data[index][1];
	}

	module.exports = listCacheGet;


/***/ },
/* 85 */
/***/ function(module, exports, __webpack_require__) {

	var assocIndexOf = __webpack_require__(82);

	/**
	 * Checks if a list cache value for `key` exists.
	 *
	 * @private
	 * @name has
	 * @memberOf ListCache
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function listCacheHas(key) {
	  return assocIndexOf(this.__data__, key) > -1;
	}

	module.exports = listCacheHas;


/***/ },
/* 86 */
/***/ function(module, exports, __webpack_require__) {

	var assocIndexOf = __webpack_require__(82);

	/**
	 * Sets the list cache `key` to `value`.
	 *
	 * @private
	 * @name set
	 * @memberOf ListCache
	 * @param {string} key The key of the value to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns the list cache instance.
	 */
	function listCacheSet(key, value) {
	  var data = this.__data__,
	      index = assocIndexOf(data, key);

	  if (index < 0) {
	    ++this.size;
	    data.push([key, value]);
	  } else {
	    data[index][1] = value;
	  }
	  return this;
	}

	module.exports = listCacheSet;


/***/ },
/* 87 */
/***/ function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(65),
	    root = __webpack_require__(71);

	/* Built-in method references that are verified to be native. */
	var Map = getNative(root, 'Map');

	module.exports = Map;


/***/ },
/* 88 */
/***/ function(module, exports, __webpack_require__) {

	var getMapData = __webpack_require__(89);

	/**
	 * Removes `key` and its value from the map.
	 *
	 * @private
	 * @name delete
	 * @memberOf MapCache
	 * @param {string} key The key of the value to remove.
	 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	 */
	function mapCacheDelete(key) {
	  var result = getMapData(this, key)['delete'](key);
	  this.size -= result ? 1 : 0;
	  return result;
	}

	module.exports = mapCacheDelete;


/***/ },
/* 89 */
/***/ function(module, exports, __webpack_require__) {

	var isKeyable = __webpack_require__(90);

	/**
	 * Gets the data for `map`.
	 *
	 * @private
	 * @param {Object} map The map to query.
	 * @param {string} key The reference key.
	 * @returns {*} Returns the map data.
	 */
	function getMapData(map, key) {
	  var data = map.__data__;
	  return isKeyable(key)
	    ? data[typeof key == 'string' ? 'string' : 'hash']
	    : data.map;
	}

	module.exports = getMapData;


/***/ },
/* 90 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is suitable for use as unique object key.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
	 */
	function isKeyable(value) {
	  var type = typeof value;
	  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
	    ? (value !== '__proto__')
	    : (value === null);
	}

	module.exports = isKeyable;


/***/ },
/* 91 */
/***/ function(module, exports, __webpack_require__) {

	var getMapData = __webpack_require__(89);

	/**
	 * Gets the map value for `key`.
	 *
	 * @private
	 * @name get
	 * @memberOf MapCache
	 * @param {string} key The key of the value to get.
	 * @returns {*} Returns the entry value.
	 */
	function mapCacheGet(key) {
	  return getMapData(this, key).get(key);
	}

	module.exports = mapCacheGet;


/***/ },
/* 92 */
/***/ function(module, exports, __webpack_require__) {

	var getMapData = __webpack_require__(89);

	/**
	 * Checks if a map value for `key` exists.
	 *
	 * @private
	 * @name has
	 * @memberOf MapCache
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function mapCacheHas(key) {
	  return getMapData(this, key).has(key);
	}

	module.exports = mapCacheHas;


/***/ },
/* 93 */
/***/ function(module, exports, __webpack_require__) {

	var getMapData = __webpack_require__(89);

	/**
	 * Sets the map `key` to `value`.
	 *
	 * @private
	 * @name set
	 * @memberOf MapCache
	 * @param {string} key The key of the value to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns the map cache instance.
	 */
	function mapCacheSet(key, value) {
	  var data = getMapData(this, key),
	      size = data.size;

	  data.set(key, value);
	  this.size += data.size == size ? 0 : 1;
	  return this;
	}

	module.exports = mapCacheSet;


/***/ },
/* 94 */
/***/ function(module, exports, __webpack_require__) {

	var baseToString = __webpack_require__(95);

	/**
	 * Converts `value` to a string. An empty string is returned for `null`
	 * and `undefined` values. The sign of `-0` is preserved.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to process.
	 * @returns {string} Returns the string.
	 * @example
	 *
	 * _.toString(null);
	 * // => ''
	 *
	 * _.toString(-0);
	 * // => '-0'
	 *
	 * _.toString([1, 2, 3]);
	 * // => '1,2,3'
	 */
	function toString(value) {
	  return value == null ? '' : baseToString(value);
	}

	module.exports = toString;


/***/ },
/* 95 */
/***/ function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(96),
	    isSymbol = __webpack_require__(97);

	/** Used as references for various `Number` constants. */
	var INFINITY = 1 / 0;

	/** Used to convert symbols to primitives and strings. */
	var symbolProto = Symbol ? Symbol.prototype : undefined,
	    symbolToString = symbolProto ? symbolProto.toString : undefined;

	/**
	 * The base implementation of `_.toString` which doesn't convert nullish
	 * values to empty strings.
	 *
	 * @private
	 * @param {*} value The value to process.
	 * @returns {string} Returns the string.
	 */
	function baseToString(value) {
	  // Exit early for strings to avoid a performance hit in some environments.
	  if (typeof value == 'string') {
	    return value;
	  }
	  if (isSymbol(value)) {
	    return symbolToString ? symbolToString.call(value) : '';
	  }
	  var result = (value + '');
	  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
	}

	module.exports = baseToString;


/***/ },
/* 96 */
/***/ function(module, exports, __webpack_require__) {

	var root = __webpack_require__(71);

	/** Built-in value references. */
	var Symbol = root.Symbol;

	module.exports = Symbol;


/***/ },
/* 97 */
/***/ function(module, exports, __webpack_require__) {

	var isObjectLike = __webpack_require__(98);

	/** `Object#toString` result references. */
	var symbolTag = '[object Symbol]';

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objectToString = objectProto.toString;

	/**
	 * Checks if `value` is classified as a `Symbol` primitive or object.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
	 * @example
	 *
	 * _.isSymbol(Symbol.iterator);
	 * // => true
	 *
	 * _.isSymbol('abc');
	 * // => false
	 */
	function isSymbol(value) {
	  return typeof value == 'symbol' ||
	    (isObjectLike(value) && objectToString.call(value) == symbolTag);
	}

	module.exports = isSymbol;


/***/ },
/* 98 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is object-like. A value is object-like if it's not `null`
	 * and has a `typeof` result of "object".
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
	 * @example
	 *
	 * _.isObjectLike({});
	 * // => true
	 *
	 * _.isObjectLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isObjectLike(_.noop);
	 * // => false
	 *
	 * _.isObjectLike(null);
	 * // => false
	 */
	function isObjectLike(value) {
	  return value != null && typeof value == 'object';
	}

	module.exports = isObjectLike;


/***/ },
/* 99 */
/***/ function(module, exports, __webpack_require__) {

	var isArrayLikeObject = __webpack_require__(100);

	/** `Object#toString` result references. */
	var argsTag = '[object Arguments]';

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objectToString = objectProto.toString;

	/** Built-in value references. */
	var propertyIsEnumerable = objectProto.propertyIsEnumerable;

	/**
	 * Checks if `value` is likely an `arguments` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
	 *  else `false`.
	 * @example
	 *
	 * _.isArguments(function() { return arguments; }());
	 * // => true
	 *
	 * _.isArguments([1, 2, 3]);
	 * // => false
	 */
	function isArguments(value) {
	  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.
	  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&
	    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);
	}

	module.exports = isArguments;


/***/ },
/* 100 */
/***/ function(module, exports, __webpack_require__) {

	var isArrayLike = __webpack_require__(101),
	    isObjectLike = __webpack_require__(98);

	/**
	 * This method is like `_.isArrayLike` except that it also checks if `value`
	 * is an object.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an array-like object,
	 *  else `false`.
	 * @example
	 *
	 * _.isArrayLikeObject([1, 2, 3]);
	 * // => true
	 *
	 * _.isArrayLikeObject(document.body.children);
	 * // => true
	 *
	 * _.isArrayLikeObject('abc');
	 * // => false
	 *
	 * _.isArrayLikeObject(_.noop);
	 * // => false
	 */
	function isArrayLikeObject(value) {
	  return isObjectLike(value) && isArrayLike(value);
	}

	module.exports = isArrayLikeObject;


/***/ },
/* 101 */
/***/ function(module, exports, __webpack_require__) {

	var isFunction = __webpack_require__(67),
	    isLength = __webpack_require__(102);

	/**
	 * Checks if `value` is array-like. A value is considered array-like if it's
	 * not a function and has a `value.length` that's an integer greater than or
	 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
	 * @example
	 *
	 * _.isArrayLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isArrayLike(document.body.children);
	 * // => true
	 *
	 * _.isArrayLike('abc');
	 * // => true
	 *
	 * _.isArrayLike(_.noop);
	 * // => false
	 */
	function isArrayLike(value) {
	  return value != null && isLength(value.length) && !isFunction(value);
	}

	module.exports = isArrayLike;


/***/ },
/* 102 */
/***/ function(module, exports) {

	/** Used as references for various `Number` constants. */
	var MAX_SAFE_INTEGER = 9007199254740991;

	/**
	 * Checks if `value` is a valid array-like length.
	 *
	 * **Note:** This method is loosely based on
	 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
	 * @example
	 *
	 * _.isLength(3);
	 * // => true
	 *
	 * _.isLength(Number.MIN_VALUE);
	 * // => false
	 *
	 * _.isLength(Infinity);
	 * // => false
	 *
	 * _.isLength('3');
	 * // => false
	 */
	function isLength(value) {
	  return typeof value == 'number' &&
	    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
	}

	module.exports = isLength;


/***/ },
/* 103 */
/***/ function(module, exports) {

	/** Used as references for various `Number` constants. */
	var MAX_SAFE_INTEGER = 9007199254740991;

	/** Used to detect unsigned integer values. */
	var reIsUint = /^(?:0|[1-9]\d*)$/;

	/**
	 * Checks if `value` is a valid array-like index.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
	 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
	 */
	function isIndex(value, length) {
	  length = length == null ? MAX_SAFE_INTEGER : length;
	  return !!length &&
	    (typeof value == 'number' || reIsUint.test(value)) &&
	    (value > -1 && value % 1 == 0 && value < length);
	}

	module.exports = isIndex;


/***/ },
/* 104 */
/***/ function(module, exports, __webpack_require__) {

	var isArray = __webpack_require__(56),
	    isSymbol = __webpack_require__(97);

	/** Used to match property names within property paths. */
	var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
	    reIsPlainProp = /^\w*$/;

	/**
	 * Checks if `value` is a property name and not a property path.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @param {Object} [object] The object to query keys on.
	 * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
	 */
	function isKey(value, object) {
	  if (isArray(value)) {
	    return false;
	  }
	  var type = typeof value;
	  if (type == 'number' || type == 'symbol' || type == 'boolean' ||
	      value == null || isSymbol(value)) {
	    return true;
	  }
	  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
	    (object != null && value in Object(object));
	}

	module.exports = isKey;


/***/ },
/* 105 */
/***/ function(module, exports, __webpack_require__) {

	var isSymbol = __webpack_require__(97);

	/** Used as references for various `Number` constants. */
	var INFINITY = 1 / 0;

	/**
	 * Converts `value` to a string key if it's not a string or symbol.
	 *
	 * @private
	 * @param {*} value The value to inspect.
	 * @returns {string|symbol} Returns the key.
	 */
	function toKey(value) {
	  if (typeof value == 'string' || isSymbol(value)) {
	    return value;
	  }
	  var result = (value + '');
	  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
	}

	module.exports = toKey;


/***/ },
/* 106 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	exports.default = errorManager;

	var _universalPromise = __webpack_require__(107);

	var _universalPromise2 = _interopRequireDefault(_universalPromise);

	var _errToJSON = __webpack_require__(112);

	var _errToJSON2 = _interopRequireDefault(_errToJSON);

	var _paths = __webpack_require__(113);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var isValidationError = function isValidationError(err) {
	  return err && err.name === 'ValidationError';
	};

	function errorManager(handleValidation) {
	  function validatePath(name, context, errors) {
	    return _universalPromise2.default.resolve(handleValidation(name, context)).then(function (validationError) {
	      if (!validationError) return true;

	      if (!isValidationError(validationError)) throw validationError;

	      (0, _errToJSON2.default)(validationError, errors);
	    });
	  }

	  return {
	    collect: function collect(paths) {
	      var pristineErrors = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];
	      var options = arguments[2];

	      paths = (0, _paths.reduce)([].concat(paths));

	      var errors = _extends({}, pristineErrors);
	      var nextErrors = errors;
	      var workDone = false;

	      var validations = paths.map(function (path) {
	        nextErrors = (0, _paths.trim)(path, nextErrors);

	        if (errors !== nextErrors) {
	          workDone = true;
	        }

	        return validatePath(path, options, nextErrors);
	      });

	      return _universalPromise2.default.all(validations).then(function (results) {
	        if (!workDone && results.every(Boolean)) return pristineErrors;

	        return nextErrors;
	      });
	    }
	  };
	}
	module.exports = exports['default'];

/***/ },
/* 107 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(108)


/***/ },
/* 108 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(109)


/***/ },
/* 109 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	//This file contains the ES6 extensions to the core Promises/A+ API

	var Promise = __webpack_require__(110);

	module.exports = Promise;

	/* Static Functions */

	var TRUE = valuePromise(true);
	var FALSE = valuePromise(false);
	var NULL = valuePromise(null);
	var UNDEFINED = valuePromise(undefined);
	var ZERO = valuePromise(0);
	var EMPTYSTRING = valuePromise('');

	function valuePromise(value) {
	  var p = new Promise(Promise._61);
	  p._81 = 1;
	  p._65 = value;
	  return p;
	}
	Promise.resolve = function (value) {
	  if (value instanceof Promise) return value;

	  if (value === null) return NULL;
	  if (value === undefined) return UNDEFINED;
	  if (value === true) return TRUE;
	  if (value === false) return FALSE;
	  if (value === 0) return ZERO;
	  if (value === '') return EMPTYSTRING;

	  if (typeof value === 'object' || typeof value === 'function') {
	    try {
	      var then = value.then;
	      if (typeof then === 'function') {
	        return new Promise(then.bind(value));
	      }
	    } catch (ex) {
	      return new Promise(function (resolve, reject) {
	        reject(ex);
	      });
	    }
	  }
	  return valuePromise(value);
	};

	Promise.all = function (arr) {
	  var args = Array.prototype.slice.call(arr);

	  return new Promise(function (resolve, reject) {
	    if (args.length === 0) return resolve([]);
	    var remaining = args.length;
	    function res(i, val) {
	      if (val && (typeof val === 'object' || typeof val === 'function')) {
	        if (val instanceof Promise && val.then === Promise.prototype.then) {
	          while (val._81 === 3) {
	            val = val._65;
	          }
	          if (val._81 === 1) return res(i, val._65);
	          if (val._81 === 2) reject(val._65);
	          val.then(function (val) {
	            res(i, val);
	          }, reject);
	          return;
	        } else {
	          var then = val.then;
	          if (typeof then === 'function') {
	            var p = new Promise(then.bind(val));
	            p.then(function (val) {
	              res(i, val);
	            }, reject);
	            return;
	          }
	        }
	      }
	      args[i] = val;
	      if (--remaining === 0) {
	        resolve(args);
	      }
	    }
	    for (var i = 0; i < args.length; i++) {
	      res(i, args[i]);
	    }
	  });
	};

	Promise.reject = function (value) {
	  return new Promise(function (resolve, reject) {
	    reject(value);
	  });
	};

	Promise.race = function (values) {
	  return new Promise(function (resolve, reject) {
	    values.forEach(function(value){
	      Promise.resolve(value).then(resolve, reject);
	    });
	  });
	};

	/* Prototype Methods */

	Promise.prototype['catch'] = function (onRejected) {
	  return this.then(null, onRejected);
	};


/***/ },
/* 110 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var asap = __webpack_require__(111);

	function noop() {}

	// States:
	//
	// 0 - pending
	// 1 - fulfilled with _value
	// 2 - rejected with _value
	// 3 - adopted the state of another promise, _value
	//
	// once the state is no longer pending (0) it is immutable

	// All `_` prefixed properties will be reduced to `_{random number}`
	// at build time to obfuscate them and discourage their use.
	// We don't use symbols or Object.defineProperty to fully hide them
	// because the performance isn't good enough.


	// to avoid using try/catch inside critical functions, we
	// extract them to here.
	var LAST_ERROR = null;
	var IS_ERROR = {};
	function getThen(obj) {
	  try {
	    return obj.then;
	  } catch (ex) {
	    LAST_ERROR = ex;
	    return IS_ERROR;
	  }
	}

	function tryCallOne(fn, a) {
	  try {
	    return fn(a);
	  } catch (ex) {
	    LAST_ERROR = ex;
	    return IS_ERROR;
	  }
	}
	function tryCallTwo(fn, a, b) {
	  try {
	    fn(a, b);
	  } catch (ex) {
	    LAST_ERROR = ex;
	    return IS_ERROR;
	  }
	}

	module.exports = Promise;

	function Promise(fn) {
	  if (typeof this !== 'object') {
	    throw new TypeError('Promises must be constructed via new');
	  }
	  if (typeof fn !== 'function') {
	    throw new TypeError('not a function');
	  }
	  this._45 = 0;
	  this._81 = 0;
	  this._65 = null;
	  this._54 = null;
	  if (fn === noop) return;
	  doResolve(fn, this);
	}
	Promise._10 = null;
	Promise._97 = null;
	Promise._61 = noop;

	Promise.prototype.then = function(onFulfilled, onRejected) {
	  if (this.constructor !== Promise) {
	    return safeThen(this, onFulfilled, onRejected);
	  }
	  var res = new Promise(noop);
	  handle(this, new Handler(onFulfilled, onRejected, res));
	  return res;
	};

	function safeThen(self, onFulfilled, onRejected) {
	  return new self.constructor(function (resolve, reject) {
	    var res = new Promise(noop);
	    res.then(resolve, reject);
	    handle(self, new Handler(onFulfilled, onRejected, res));
	  });
	};
	function handle(self, deferred) {
	  while (self._81 === 3) {
	    self = self._65;
	  }
	  if (Promise._10) {
	    Promise._10(self);
	  }
	  if (self._81 === 0) {
	    if (self._45 === 0) {
	      self._45 = 1;
	      self._54 = deferred;
	      return;
	    }
	    if (self._45 === 1) {
	      self._45 = 2;
	      self._54 = [self._54, deferred];
	      return;
	    }
	    self._54.push(deferred);
	    return;
	  }
	  handleResolved(self, deferred);
	}

	function handleResolved(self, deferred) {
	  asap(function() {
	    var cb = self._81 === 1 ? deferred.onFulfilled : deferred.onRejected;
	    if (cb === null) {
	      if (self._81 === 1) {
	        resolve(deferred.promise, self._65);
	      } else {
	        reject(deferred.promise, self._65);
	      }
	      return;
	    }
	    var ret = tryCallOne(cb, self._65);
	    if (ret === IS_ERROR) {
	      reject(deferred.promise, LAST_ERROR);
	    } else {
	      resolve(deferred.promise, ret);
	    }
	  });
	}
	function resolve(self, newValue) {
	  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure
	  if (newValue === self) {
	    return reject(
	      self,
	      new TypeError('A promise cannot be resolved with itself.')
	    );
	  }
	  if (
	    newValue &&
	    (typeof newValue === 'object' || typeof newValue === 'function')
	  ) {
	    var then = getThen(newValue);
	    if (then === IS_ERROR) {
	      return reject(self, LAST_ERROR);
	    }
	    if (
	      then === self.then &&
	      newValue instanceof Promise
	    ) {
	      self._81 = 3;
	      self._65 = newValue;
	      finale(self);
	      return;
	    } else if (typeof then === 'function') {
	      doResolve(then.bind(newValue), self);
	      return;
	    }
	  }
	  self._81 = 1;
	  self._65 = newValue;
	  finale(self);
	}

	function reject(self, newValue) {
	  self._81 = 2;
	  self._65 = newValue;
	  if (Promise._97) {
	    Promise._97(self, newValue);
	  }
	  finale(self);
	}
	function finale(self) {
	  if (self._45 === 1) {
	    handle(self, self._54);
	    self._54 = null;
	  }
	  if (self._45 === 2) {
	    for (var i = 0; i < self._54.length; i++) {
	      handle(self, self._54[i]);
	    }
	    self._54 = null;
	  }
	}

	function Handler(onFulfilled, onRejected, promise){
	  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;
	  this.onRejected = typeof onRejected === 'function' ? onRejected : null;
	  this.promise = promise;
	}

	/**
	 * Take a potentially misbehaving resolver function and make sure
	 * onFulfilled and onRejected are only called once.
	 *
	 * Makes no guarantees about asynchrony.
	 */
	function doResolve(fn, promise) {
	  var done = false;
	  var res = tryCallTwo(fn, function (value) {
	    if (done) return;
	    done = true;
	    resolve(promise, value);
	  }, function (reason) {
	    if (done) return;
	    done = true;
	    reject(promise, reason);
	  })
	  if (!done && res === IS_ERROR) {
	    done = true;
	    reject(promise, LAST_ERROR);
	  }
	}


/***/ },
/* 111 */
/***/ function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(global) {"use strict";

	// Use the fastest means possible to execute a task in its own turn, with
	// priority over other events including IO, animation, reflow, and redraw
	// events in browsers.
	//
	// An exception thrown by a task will permanently interrupt the processing of
	// subsequent tasks. The higher level `asap` function ensures that if an
	// exception is thrown by a task, that the task queue will continue flushing as
	// soon as possible, but if you use `rawAsap` directly, you are responsible to
	// either ensure that no exceptions are thrown from your task, or to manually
	// call `rawAsap.requestFlush` if an exception is thrown.
	module.exports = rawAsap;
	function rawAsap(task) {
	    if (!queue.length) {
	        requestFlush();
	        flushing = true;
	    }
	    // Equivalent to push, but avoids a function call.
	    queue[queue.length] = task;
	}

	var queue = [];
	// Once a flush has been requested, no further calls to `requestFlush` are
	// necessary until the next `flush` completes.
	var flushing = false;
	// `requestFlush` is an implementation-specific method that attempts to kick
	// off a `flush` event as quickly as possible. `flush` will attempt to exhaust
	// the event queue before yielding to the browser's own event loop.
	var requestFlush;
	// The position of the next task to execute in the task queue. This is
	// preserved between calls to `flush` so that it can be resumed if
	// a task throws an exception.
	var index = 0;
	// If a task schedules additional tasks recursively, the task queue can grow
	// unbounded. To prevent memory exhaustion, the task queue will periodically
	// truncate already-completed tasks.
	var capacity = 1024;

	// The flush function processes all tasks that have been scheduled with
	// `rawAsap` unless and until one of those tasks throws an exception.
	// If a task throws an exception, `flush` ensures that its state will remain
	// consistent and will resume where it left off when called again.
	// However, `flush` does not make any arrangements to be called again if an
	// exception is thrown.
	function flush() {
	    while (index < queue.length) {
	        var currentIndex = index;
	        // Advance the index before calling the task. This ensures that we will
	        // begin flushing on the next task the task throws an error.
	        index = index + 1;
	        queue[currentIndex].call();
	        // Prevent leaking memory for long chains of recursive calls to `asap`.
	        // If we call `asap` within tasks scheduled by `asap`, the queue will
	        // grow, but to avoid an O(n) walk for every task we execute, we don't
	        // shift tasks off the queue after they have been executed.
	        // Instead, we periodically shift 1024 tasks off the queue.
	        if (index > capacity) {
	            // Manually shift all values starting at the index back to the
	            // beginning of the queue.
	            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {
	                queue[scan] = queue[scan + index];
	            }
	            queue.length -= index;
	            index = 0;
	        }
	    }
	    queue.length = 0;
	    index = 0;
	    flushing = false;
	}

	// `requestFlush` is implemented using a strategy based on data collected from
	// every available SauceLabs Selenium web driver worker at time of writing.
	// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593

	// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that
	// have WebKitMutationObserver but not un-prefixed MutationObserver.
	// Must use `global` or `self` instead of `window` to work in both frames and web
	// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.

	/* globals self */
	var scope = typeof global !== "undefined" ? global : self;
	var BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;

	// MutationObservers are desirable because they have high priority and work
	// reliably everywhere they are implemented.
	// They are implemented in all modern browsers.
	//
	// - Android 4-4.3
	// - Chrome 26-34
	// - Firefox 14-29
	// - Internet Explorer 11
	// - iPad Safari 6-7.1
	// - iPhone Safari 7-7.1
	// - Safari 6-7
	if (typeof BrowserMutationObserver === "function") {
	    requestFlush = makeRequestCallFromMutationObserver(flush);

	// MessageChannels are desirable because they give direct access to the HTML
	// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera
	// 11-12, and in web workers in many engines.
	// Although message channels yield to any queued rendering and IO tasks, they
	// would be better than imposing the 4ms delay of timers.
	// However, they do not work reliably in Internet Explorer or Safari.

	// Internet Explorer 10 is the only browser that has setImmediate but does
	// not have MutationObservers.
	// Although setImmediate yields to the browser's renderer, it would be
	// preferrable to falling back to setTimeout since it does not have
	// the minimum 4ms penalty.
	// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and
	// Desktop to a lesser extent) that renders both setImmediate and
	// MessageChannel useless for the purposes of ASAP.
	// https://github.com/kriskowal/q/issues/396

	// Timers are implemented universally.
	// We fall back to timers in workers in most engines, and in foreground
	// contexts in the following browsers.
	// However, note that even this simple case requires nuances to operate in a
	// broad spectrum of browsers.
	//
	// - Firefox 3-13
	// - Internet Explorer 6-9
	// - iPad Safari 4.3
	// - Lynx 2.8.7
	} else {
	    requestFlush = makeRequestCallFromTimer(flush);
	}

	// `requestFlush` requests that the high priority event queue be flushed as
	// soon as possible.
	// This is useful to prevent an error thrown in a task from stalling the event
	// queue if the exception handled by Node.js’s
	// `process.on("uncaughtException")` or by a domain.
	rawAsap.requestFlush = requestFlush;

	// To request a high priority event, we induce a mutation observer by toggling
	// the text of a text node between "1" and "-1".
	function makeRequestCallFromMutationObserver(callback) {
	    var toggle = 1;
	    var observer = new BrowserMutationObserver(callback);
	    var node = document.createTextNode("");
	    observer.observe(node, {characterData: true});
	    return function requestCall() {
	        toggle = -toggle;
	        node.data = toggle;
	    };
	}

	// The message channel technique was discovered by Malte Ubl and was the
	// original foundation for this library.
	// http://www.nonblocking.io/2011/06/windownexttick.html

	// Safari 6.0.5 (at least) intermittently fails to create message ports on a
	// page's first load. Thankfully, this version of Safari supports
	// MutationObservers, so we don't need to fall back in that case.

	// function makeRequestCallFromMessageChannel(callback) {
	//     var channel = new MessageChannel();
	//     channel.port1.onmessage = callback;
	//     return function requestCall() {
	//         channel.port2.postMessage(0);
	//     };
	// }

	// For reasons explained above, we are also unable to use `setImmediate`
	// under any circumstances.
	// Even if we were, there is another bug in Internet Explorer 10.
	// It is not sufficient to assign `setImmediate` to `requestFlush` because
	// `setImmediate` must be called *by name* and therefore must be wrapped in a
	// closure.
	// Never forget.

	// function makeRequestCallFromSetImmediate(callback) {
	//     return function requestCall() {
	//         setImmediate(callback);
	//     };
	// }

	// Safari 6.0 has a problem where timers will get lost while the user is
	// scrolling. This problem does not impact ASAP because Safari 6.0 supports
	// mutation observers, so that implementation is used instead.
	// However, if we ever elect to use timers in Safari, the prevalent work-around
	// is to add a scroll event listener that calls for a flush.

	// `setTimeout` does not call the passed callback if the delay is less than
	// approximately 7 in web workers in Firefox 8 through 18, and sometimes not
	// even then.

	function makeRequestCallFromTimer(callback) {
	    return function requestCall() {
	        // We dispatch a timeout with a specified delay of 0 for engines that
	        // can reliably accommodate that request. This will usually be snapped
	        // to a 4 milisecond delay, but once we're flushing, there's no delay
	        // between events.
	        var timeoutHandle = setTimeout(handleTimer, 0);
	        // However, since this timer gets frequently dropped in Firefox
	        // workers, we enlist an interval handle that will try to fire
	        // an event 20 times per second until it succeeds.
	        var intervalHandle = setInterval(handleTimer, 50);

	        function handleTimer() {
	            // Whichever timer succeeds will cancel both timers and
	            // execute the callback.
	            clearTimeout(timeoutHandle);
	            clearInterval(intervalHandle);
	            callback();
	        }
	    };
	}

	// This is for `asap.js` only.
	// Its name will be periodically randomized to break any code that depends on
	// its existence.
	rawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;

	// ASAP was originally a nextTick shim included in Q. This was factored out
	// into this ASAP package. It was later adapted to RSVP which made further
	// amendments. These decisions, particularly to marginalize MessageChannel and
	// to capture the MutationObserver implementation in a closure, were integrated
	// back into ASAP proper.
	// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js

	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 112 */
/***/ function(module, exports) {

	'use strict';

	exports.__esModule = true;
	exports.default = errToJSON;
	function errToJSON(error) {
	  var target = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

	  if (error.inner.length) {
	    error.inner.forEach(function (inner) {
	      errToJSON(inner, target, inner.path);
	    });

	    return target;
	  }

	  var path = error.path || '';
	  var existing = target[path];

	  var json = {
	    message: error.message,
	    values: error.params,
	    type: error.type
	  };

	  target[path] = existing ? [].concat(existing, [json]) : [json];

	  return target;
	}
	module.exports = exports['default'];

/***/ },
/* 113 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.inPath = inPath;
	exports.clean = clean;
	exports.isQuoted = isQuoted;
	exports.reduce = reduce;
	exports.trim = trim;

	var _propertyExpr = __webpack_require__(42);

	var _propertyExpr2 = _interopRequireDefault(_propertyExpr);

	var _uniq = __webpack_require__(114);

	var _uniq2 = _interopRequireDefault(_uniq);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function inPath(pathA, pathB) {
	  if (pathA === pathB) return true;

	  var partsA = _propertyExpr2.default.split(pathA) || [],
	      partsB = _propertyExpr2.default.split(pathB) || [];

	  if (partsA.length > partsB.length) return false;

	  return partsA.every(function (part, idx) {
	    return clean(part) === clean(partsB[idx]);
	  });
	}

	function clean(part) {
	  return isQuoted(part) ? part.substr(1, part.length - 2) : part;
	}

	function isQuoted(str) {
	  return typeof str === 'string' && str && (str[0] === '"' || str[0] === "'");
	}

	function reduce(paths) {
	  paths = (0, _uniq2.default)(paths == null ? [] : [].concat(paths));

	  if (paths.length <= 1) return paths;

	  return paths.reduce(function (paths, current) {
	    paths = paths.filter(function (p) {
	      return !inPath(current, p);
	    });

	    if (!paths.some(function (p) {
	      return inPath(p, current);
	    })) paths.push(current);

	    return paths;
	  }, []);
	}

	function trim(rootPath, pathHash) {
	  var exact = arguments.length <= 2 || arguments[2] === undefined ? false : arguments[2];

	  var workDone = false;
	  var result = {};

	  var matches = exact ? function (p) {
	    return p === rootPath;
	  } : function (p) {
	    return inPath(rootPath, p);
	  };

	  Object.keys(pathHash).forEach(function (path) {
	    if (matches(path)) {
	      return workDone = true;
	    }

	    result[path] = pathHash[path];
	  });

	  return workDone ? result : pathHash;
	}

/***/ },
/* 114 */
/***/ function(module, exports, __webpack_require__) {

	var baseCallback = __webpack_require__(115),
	    baseUniq = __webpack_require__(139),
	    isIterateeCall = __webpack_require__(146),
	    sortedUniq = __webpack_require__(147);

	/**
	 * Creates a duplicate-free version of an array, using
	 * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
	 * for equality comparisons, in which only the first occurence of each element
	 * is kept. Providing `true` for `isSorted` performs a faster search algorithm
	 * for sorted arrays. If an iteratee function is provided it's invoked for
	 * each element in the array to generate the criterion by which uniqueness
	 * is computed. The `iteratee` is bound to `thisArg` and invoked with three
	 * arguments: (value, index, array).
	 *
	 * If a property name is provided for `iteratee` the created `_.property`
	 * style callback returns the property value of the given element.
	 *
	 * If a value is also provided for `thisArg` the created `_.matchesProperty`
	 * style callback returns `true` for elements that have a matching property
	 * value, else `false`.
	 *
	 * If an object is provided for `iteratee` the created `_.matches` style
	 * callback returns `true` for elements that have the properties of the given
	 * object, else `false`.
	 *
	 * @static
	 * @memberOf _
	 * @alias unique
	 * @category Array
	 * @param {Array} array The array to inspect.
	 * @param {boolean} [isSorted] Specify the array is sorted.
	 * @param {Function|Object|string} [iteratee] The function invoked per iteration.
	 * @param {*} [thisArg] The `this` binding of `iteratee`.
	 * @returns {Array} Returns the new duplicate-value-free array.
	 * @example
	 *
	 * _.uniq([2, 1, 2]);
	 * // => [2, 1]
	 *
	 * // using `isSorted`
	 * _.uniq([1, 1, 2], true);
	 * // => [1, 2]
	 *
	 * // using an iteratee function
	 * _.uniq([1, 2.5, 1.5, 2], function(n) {
	 *   return this.floor(n);
	 * }, Math);
	 * // => [1, 2.5]
	 *
	 * // using the `_.property` callback shorthand
	 * _.uniq([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');
	 * // => [{ 'x': 1 }, { 'x': 2 }]
	 */
	function uniq(array, isSorted, iteratee, thisArg) {
	  var length = array ? array.length : 0;
	  if (!length) {
	    return [];
	  }
	  if (isSorted != null && typeof isSorted != 'boolean') {
	    thisArg = iteratee;
	    iteratee = isIterateeCall(array, isSorted, thisArg) ? undefined : isSorted;
	    isSorted = false;
	  }
	  iteratee = iteratee == null ? iteratee : baseCallback(iteratee, thisArg, 3);
	  return (isSorted)
	    ? sortedUniq(array, iteratee)
	    : baseUniq(array, iteratee);
	}

	module.exports = uniq;


/***/ },
/* 115 */
/***/ function(module, exports, __webpack_require__) {

	var baseMatches = __webpack_require__(116),
	    baseMatchesProperty = __webpack_require__(130),
	    bindCallback = __webpack_require__(29),
	    identity = __webpack_require__(30),
	    property = __webpack_require__(137);

	/**
	 * The base implementation of `_.callback` which supports specifying the
	 * number of arguments to provide to `func`.
	 *
	 * @private
	 * @param {*} [func=_.identity] The value to convert to a callback.
	 * @param {*} [thisArg] The `this` binding of `func`.
	 * @param {number} [argCount] The number of arguments to provide to `func`.
	 * @returns {Function} Returns the callback.
	 */
	function baseCallback(func, thisArg, argCount) {
	  var type = typeof func;
	  if (type == 'function') {
	    return thisArg === undefined
	      ? func
	      : bindCallback(func, thisArg, argCount);
	  }
	  if (func == null) {
	    return identity;
	  }
	  if (type == 'object') {
	    return baseMatches(func);
	  }
	  return thisArg === undefined
	    ? property(func)
	    : baseMatchesProperty(func, thisArg);
	}

	module.exports = baseCallback;


/***/ },
/* 116 */
/***/ function(module, exports, __webpack_require__) {

	var baseIsMatch = __webpack_require__(117),
	    getMatchData = __webpack_require__(127),
	    toObject = __webpack_require__(32);

	/**
	 * The base implementation of `_.matches` which does not clone `source`.
	 *
	 * @private
	 * @param {Object} source The object of property values to match.
	 * @returns {Function} Returns the new function.
	 */
	function baseMatches(source) {
	  var matchData = getMatchData(source);
	  if (matchData.length == 1 && matchData[0][2]) {
	    var key = matchData[0][0],
	        value = matchData[0][1];

	    return function(object) {
	      if (object == null) {
	        return false;
	      }
	      return object[key] === value && (value !== undefined || (key in toObject(object)));
	    };
	  }
	  return function(object) {
	    return baseIsMatch(object, matchData);
	  };
	}

	module.exports = baseMatches;


/***/ },
/* 117 */
/***/ function(module, exports, __webpack_require__) {

	var baseIsEqual = __webpack_require__(118),
	    toObject = __webpack_require__(32);

	/**
	 * The base implementation of `_.isMatch` without support for callback
	 * shorthands and `this` binding.
	 *
	 * @private
	 * @param {Object} object The object to inspect.
	 * @param {Array} matchData The propery names, values, and compare flags to match.
	 * @param {Function} [customizer] The function to customize comparing objects.
	 * @returns {boolean} Returns `true` if `object` is a match, else `false`.
	 */
	function baseIsMatch(object, matchData, customizer) {
	  var index = matchData.length,
	      length = index,
	      noCustomizer = !customizer;

	  if (object == null) {
	    return !length;
	  }
	  object = toObject(object);
	  while (index--) {
	    var data = matchData[index];
	    if ((noCustomizer && data[2])
	          ? data[1] !== object[data[0]]
	          : !(data[0] in object)
	        ) {
	      return false;
	    }
	  }
	  while (++index < length) {
	    data = matchData[index];
	    var key = data[0],
	        objValue = object[key],
	        srcValue = data[1];

	    if (noCustomizer && data[2]) {
	      if (objValue === undefined && !(key in object)) {
	        return false;
	      }
	    } else {
	      var result = customizer ? customizer(objValue, srcValue, key) : undefined;
	      if (!(result === undefined ? baseIsEqual(srcValue, objValue, customizer, true) : result)) {
	        return false;
	      }
	    }
	  }
	  return true;
	}

	module.exports = baseIsMatch;


/***/ },
/* 118 */
/***/ function(module, exports, __webpack_require__) {

	var baseIsEqualDeep = __webpack_require__(119),
	    isObject = __webpack_require__(28),
	    isObjectLike = __webpack_require__(23);

	/**
	 * The base implementation of `_.isEqual` without support for `this` binding
	 * `customizer` functions.
	 *
	 * @private
	 * @param {*} value The value to compare.
	 * @param {*} other The other value to compare.
	 * @param {Function} [customizer] The function to customize comparing values.
	 * @param {boolean} [isLoose] Specify performing partial comparisons.
	 * @param {Array} [stackA] Tracks traversed `value` objects.
	 * @param {Array} [stackB] Tracks traversed `other` objects.
	 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	 */
	function baseIsEqual(value, other, customizer, isLoose, stackA, stackB) {
	  if (value === other) {
	    return true;
	  }
	  if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {
	    return value !== value && other !== other;
	  }
	  return baseIsEqualDeep(value, other, baseIsEqual, customizer, isLoose, stackA, stackB);
	}

	module.exports = baseIsEqual;


/***/ },
/* 119 */
/***/ function(module, exports, __webpack_require__) {

	var equalArrays = __webpack_require__(120),
	    equalByTag = __webpack_require__(122),
	    equalObjects = __webpack_require__(123),
	    isArray = __webpack_require__(24),
	    isTypedArray = __webpack_require__(126);

	/** `Object#toString` result references. */
	var argsTag = '[object Arguments]',
	    arrayTag = '[object Array]',
	    objectTag = '[object Object]';

	/** Used for native method references. */
	var objectProto = Object.prototype;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/**
	 * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objToString = objectProto.toString;

	/**
	 * A specialized version of `baseIsEqual` for arrays and objects which performs
	 * deep comparisons and tracks traversed objects enabling objects with circular
	 * references to be compared.
	 *
	 * @private
	 * @param {Object} object The object to compare.
	 * @param {Object} other The other object to compare.
	 * @param {Function} equalFunc The function to determine equivalents of values.
	 * @param {Function} [customizer] The function to customize comparing objects.
	 * @param {boolean} [isLoose] Specify performing partial comparisons.
	 * @param {Array} [stackA=[]] Tracks traversed `value` objects.
	 * @param {Array} [stackB=[]] Tracks traversed `other` objects.
	 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	 */
	function baseIsEqualDeep(object, other, equalFunc, customizer, isLoose, stackA, stackB) {
	  var objIsArr = isArray(object),
	      othIsArr = isArray(other),
	      objTag = arrayTag,
	      othTag = arrayTag;

	  if (!objIsArr) {
	    objTag = objToString.call(object);
	    if (objTag == argsTag) {
	      objTag = objectTag;
	    } else if (objTag != objectTag) {
	      objIsArr = isTypedArray(object);
	    }
	  }
	  if (!othIsArr) {
	    othTag = objToString.call(other);
	    if (othTag == argsTag) {
	      othTag = objectTag;
	    } else if (othTag != objectTag) {
	      othIsArr = isTypedArray(other);
	    }
	  }
	  var objIsObj = objTag == objectTag,
	      othIsObj = othTag == objectTag,
	      isSameTag = objTag == othTag;

	  if (isSameTag && !(objIsArr || objIsObj)) {
	    return equalByTag(object, other, objTag);
	  }
	  if (!isLoose) {
	    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
	        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

	    if (objIsWrapped || othIsWrapped) {
	      return equalFunc(objIsWrapped ? object.value() : object, othIsWrapped ? other.value() : other, customizer, isLoose, stackA, stackB);
	    }
	  }
	  if (!isSameTag) {
	    return false;
	  }
	  // Assume cyclic values are equal.
	  // For more information on detecting circular references see https://es5.github.io/#JO.
	  stackA || (stackA = []);
	  stackB || (stackB = []);

	  var length = stackA.length;
	  while (length--) {
	    if (stackA[length] == object) {
	      return stackB[length] == other;
	    }
	  }
	  // Add `object` and `other` to the stack of traversed objects.
	  stackA.push(object);
	  stackB.push(other);

	  var result = (objIsArr ? equalArrays : equalObjects)(object, other, equalFunc, customizer, isLoose, stackA, stackB);

	  stackA.pop();
	  stackB.pop();

	  return result;
	}

	module.exports = baseIsEqualDeep;


/***/ },
/* 120 */
/***/ function(module, exports, __webpack_require__) {

	var arraySome = __webpack_require__(121);

	/**
	 * A specialized version of `baseIsEqualDeep` for arrays with support for
	 * partial deep comparisons.
	 *
	 * @private
	 * @param {Array} array The array to compare.
	 * @param {Array} other The other array to compare.
	 * @param {Function} equalFunc The function to determine equivalents of values.
	 * @param {Function} [customizer] The function to customize comparing arrays.
	 * @param {boolean} [isLoose] Specify performing partial comparisons.
	 * @param {Array} [stackA] Tracks traversed `value` objects.
	 * @param {Array} [stackB] Tracks traversed `other` objects.
	 * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
	 */
	function equalArrays(array, other, equalFunc, customizer, isLoose, stackA, stackB) {
	  var index = -1,
	      arrLength = array.length,
	      othLength = other.length;

	  if (arrLength != othLength && !(isLoose && othLength > arrLength)) {
	    return false;
	  }
	  // Ignore non-index properties.
	  while (++index < arrLength) {
	    var arrValue = array[index],
	        othValue = other[index],
	        result = customizer ? customizer(isLoose ? othValue : arrValue, isLoose ? arrValue : othValue, index) : undefined;

	    if (result !== undefined) {
	      if (result) {
	        continue;
	      }
	      return false;
	    }
	    // Recursively compare arrays (susceptible to call stack limits).
	    if (isLoose) {
	      if (!arraySome(other, function(othValue) {
	            return arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB);
	          })) {
	        return false;
	      }
	    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB))) {
	      return false;
	    }
	  }
	  return true;
	}

	module.exports = equalArrays;


/***/ },
/* 121 */
/***/ function(module, exports) {

	/**
	 * A specialized version of `_.some` for arrays without support for callback
	 * shorthands and `this` binding.
	 *
	 * @private
	 * @param {Array} array The array to iterate over.
	 * @param {Function} predicate The function invoked per iteration.
	 * @returns {boolean} Returns `true` if any element passes the predicate check,
	 *  else `false`.
	 */
	function arraySome(array, predicate) {
	  var index = -1,
	      length = array.length;

	  while (++index < length) {
	    if (predicate(array[index], index, array)) {
	      return true;
	    }
	  }
	  return false;
	}

	module.exports = arraySome;


/***/ },
/* 122 */
/***/ function(module, exports) {

	/** `Object#toString` result references. */
	var boolTag = '[object Boolean]',
	    dateTag = '[object Date]',
	    errorTag = '[object Error]',
	    numberTag = '[object Number]',
	    regexpTag = '[object RegExp]',
	    stringTag = '[object String]';

	/**
	 * A specialized version of `baseIsEqualDeep` for comparing objects of
	 * the same `toStringTag`.
	 *
	 * **Note:** This function only supports comparing values with tags of
	 * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
	 *
	 * @private
	 * @param {Object} object The object to compare.
	 * @param {Object} other The other object to compare.
	 * @param {string} tag The `toStringTag` of the objects to compare.
	 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	 */
	function equalByTag(object, other, tag) {
	  switch (tag) {
	    case boolTag:
	    case dateTag:
	      // Coerce dates and booleans to numbers, dates to milliseconds and booleans
	      // to `1` or `0` treating invalid dates coerced to `NaN` as not equal.
	      return +object == +other;

	    case errorTag:
	      return object.name == other.name && object.message == other.message;

	    case numberTag:
	      // Treat `NaN` vs. `NaN` as equal.
	      return (object != +object)
	        ? other != +other
	        : object == +other;

	    case regexpTag:
	    case stringTag:
	      // Coerce regexes to strings and treat strings primitives and string
	      // objects as equal. See https://es5.github.io/#x15.10.6.4 for more details.
	      return object == (other + '');
	  }
	  return false;
	}

	module.exports = equalByTag;


/***/ },
/* 123 */
/***/ function(module, exports, __webpack_require__) {

	var keys = __webpack_require__(124);

	/** Used for native method references. */
	var objectProto = Object.prototype;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/**
	 * A specialized version of `baseIsEqualDeep` for objects with support for
	 * partial deep comparisons.
	 *
	 * @private
	 * @param {Object} object The object to compare.
	 * @param {Object} other The other object to compare.
	 * @param {Function} equalFunc The function to determine equivalents of values.
	 * @param {Function} [customizer] The function to customize comparing values.
	 * @param {boolean} [isLoose] Specify performing partial comparisons.
	 * @param {Array} [stackA] Tracks traversed `value` objects.
	 * @param {Array} [stackB] Tracks traversed `other` objects.
	 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	 */
	function equalObjects(object, other, equalFunc, customizer, isLoose, stackA, stackB) {
	  var objProps = keys(object),
	      objLength = objProps.length,
	      othProps = keys(other),
	      othLength = othProps.length;

	  if (objLength != othLength && !isLoose) {
	    return false;
	  }
	  var index = objLength;
	  while (index--) {
	    var key = objProps[index];
	    if (!(isLoose ? key in other : hasOwnProperty.call(other, key))) {
	      return false;
	    }
	  }
	  var skipCtor = isLoose;
	  while (++index < objLength) {
	    key = objProps[index];
	    var objValue = object[key],
	        othValue = other[key],
	        result = customizer ? customizer(isLoose ? othValue : objValue, isLoose? objValue : othValue, key) : undefined;

	    // Recursively compare objects (susceptible to call stack limits).
	    if (!(result === undefined ? equalFunc(objValue, othValue, customizer, isLoose, stackA, stackB) : result)) {
	      return false;
	    }
	    skipCtor || (skipCtor = key == 'constructor');
	  }
	  if (!skipCtor) {
	    var objCtor = object.constructor,
	        othCtor = other.constructor;

	    // Non `Object` object instances with different constructors are not equal.
	    if (objCtor != othCtor &&
	        ('constructor' in object && 'constructor' in other) &&
	        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
	          typeof othCtor == 'function' && othCtor instanceof othCtor)) {
	      return false;
	    }
	  }
	  return true;
	}

	module.exports = equalObjects;


/***/ },
/* 124 */
/***/ function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(25),
	    isArrayLike = __webpack_require__(19),
	    isObject = __webpack_require__(28),
	    shimKeys = __webpack_require__(125);

	/* Native method references for those with the same name as other `lodash` methods. */
	var nativeKeys = getNative(Object, 'keys');

	/**
	 * Creates an array of the own enumerable property names of `object`.
	 *
	 * **Note:** Non-object values are coerced to objects. See the
	 * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)
	 * for more details.
	 *
	 * @static
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 *   this.b = 2;
	 * }
	 *
	 * Foo.prototype.c = 3;
	 *
	 * _.keys(new Foo);
	 * // => ['a', 'b'] (iteration order is not guaranteed)
	 *
	 * _.keys('hi');
	 * // => ['0', '1']
	 */
	var keys = !nativeKeys ? shimKeys : function(object) {
	  var Ctor = object == null ? undefined : object.constructor;
	  if ((typeof Ctor == 'function' && Ctor.prototype === object) ||
	      (typeof object != 'function' && isArrayLike(object))) {
	    return shimKeys(object);
	  }
	  return isObject(object) ? nativeKeys(object) : [];
	};

	module.exports = keys;


/***/ },
/* 125 */
/***/ function(module, exports, __webpack_require__) {

	var isArguments = __webpack_require__(18),
	    isArray = __webpack_require__(24),
	    isIndex = __webpack_require__(38),
	    isLength = __webpack_require__(22),
	    keysIn = __webpack_require__(37);

	/** Used for native method references. */
	var objectProto = Object.prototype;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/**
	 * A fallback implementation of `Object.keys` which creates an array of the
	 * own enumerable property names of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 */
	function shimKeys(object) {
	  var props = keysIn(object),
	      propsLength = props.length,
	      length = propsLength && object.length;

	  var allowIndexes = !!length && isLength(length) &&
	    (isArray(object) || isArguments(object));

	  var index = -1,
	      result = [];

	  while (++index < propsLength) {
	    var key = props[index];
	    if ((allowIndexes && isIndex(key, length)) || hasOwnProperty.call(object, key)) {
	      result.push(key);
	    }
	  }
	  return result;
	}

	module.exports = shimKeys;


/***/ },
/* 126 */
/***/ function(module, exports, __webpack_require__) {

	var isLength = __webpack_require__(22),
	    isObjectLike = __webpack_require__(23);

	/** `Object#toString` result references. */
	var argsTag = '[object Arguments]',
	    arrayTag = '[object Array]',
	    boolTag = '[object Boolean]',
	    dateTag = '[object Date]',
	    errorTag = '[object Error]',
	    funcTag = '[object Function]',
	    mapTag = '[object Map]',
	    numberTag = '[object Number]',
	    objectTag = '[object Object]',
	    regexpTag = '[object RegExp]',
	    setTag = '[object Set]',
	    stringTag = '[object String]',
	    weakMapTag = '[object WeakMap]';

	var arrayBufferTag = '[object ArrayBuffer]',
	    float32Tag = '[object Float32Array]',
	    float64Tag = '[object Float64Array]',
	    int8Tag = '[object Int8Array]',
	    int16Tag = '[object Int16Array]',
	    int32Tag = '[object Int32Array]',
	    uint8Tag = '[object Uint8Array]',
	    uint8ClampedTag = '[object Uint8ClampedArray]',
	    uint16Tag = '[object Uint16Array]',
	    uint32Tag = '[object Uint32Array]';

	/** Used to identify `toStringTag` values of typed arrays. */
	var typedArrayTags = {};
	typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
	typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
	typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
	typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
	typedArrayTags[uint32Tag] = true;
	typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
	typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
	typedArrayTags[dateTag] = typedArrayTags[errorTag] =
	typedArrayTags[funcTag] = typedArrayTags[mapTag] =
	typedArrayTags[numberTag] = typedArrayTags[objectTag] =
	typedArrayTags[regexpTag] = typedArrayTags[setTag] =
	typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;

	/** Used for native method references. */
	var objectProto = Object.prototype;

	/**
	 * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objToString = objectProto.toString;

	/**
	 * Checks if `value` is classified as a typed array.
	 *
	 * @static
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
	 * @example
	 *
	 * _.isTypedArray(new Uint8Array);
	 * // => true
	 *
	 * _.isTypedArray([]);
	 * // => false
	 */
	function isTypedArray(value) {
	  return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objToString.call(value)];
	}

	module.exports = isTypedArray;


/***/ },
/* 127 */
/***/ function(module, exports, __webpack_require__) {

	var isStrictComparable = __webpack_require__(128),
	    pairs = __webpack_require__(129);

	/**
	 * Gets the propery names, values, and compare flags of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the match data of `object`.
	 */
	function getMatchData(object) {
	  var result = pairs(object),
	      length = result.length;

	  while (length--) {
	    result[length][2] = isStrictComparable(result[length][1]);
	  }
	  return result;
	}

	module.exports = getMatchData;


/***/ },
/* 128 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(28);

	/**
	 * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` if suitable for strict
	 *  equality comparisons, else `false`.
	 */
	function isStrictComparable(value) {
	  return value === value && !isObject(value);
	}

	module.exports = isStrictComparable;


/***/ },
/* 129 */
/***/ function(module, exports, __webpack_require__) {

	var keys = __webpack_require__(124),
	    toObject = __webpack_require__(32);

	/**
	 * Creates a two dimensional array of the key-value pairs for `object`,
	 * e.g. `[[key1, value1], [key2, value2]]`.
	 *
	 * @static
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the new array of key-value pairs.
	 * @example
	 *
	 * _.pairs({ 'barney': 36, 'fred': 40 });
	 * // => [['barney', 36], ['fred', 40]] (iteration order is not guaranteed)
	 */
	function pairs(object) {
	  object = toObject(object);

	  var index = -1,
	      props = keys(object),
	      length = props.length,
	      result = Array(length);

	  while (++index < length) {
	    var key = props[index];
	    result[index] = [key, object[key]];
	  }
	  return result;
	}

	module.exports = pairs;


/***/ },
/* 130 */
/***/ function(module, exports, __webpack_require__) {

	var baseGet = __webpack_require__(131),
	    baseIsEqual = __webpack_require__(118),
	    baseSlice = __webpack_require__(132),
	    isArray = __webpack_require__(24),
	    isKey = __webpack_require__(133),
	    isStrictComparable = __webpack_require__(128),
	    last = __webpack_require__(134),
	    toObject = __webpack_require__(32),
	    toPath = __webpack_require__(135);

	/**
	 * The base implementation of `_.matchesProperty` which does not clone `srcValue`.
	 *
	 * @private
	 * @param {string} path The path of the property to get.
	 * @param {*} srcValue The value to compare.
	 * @returns {Function} Returns the new function.
	 */
	function baseMatchesProperty(path, srcValue) {
	  var isArr = isArray(path),
	      isCommon = isKey(path) && isStrictComparable(srcValue),
	      pathKey = (path + '');

	  path = toPath(path);
	  return function(object) {
	    if (object == null) {
	      return false;
	    }
	    var key = pathKey;
	    object = toObject(object);
	    if ((isArr || !isCommon) && !(key in object)) {
	      object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));
	      if (object == null) {
	        return false;
	      }
	      key = last(path);
	      object = toObject(object);
	    }
	    return object[key] === srcValue
	      ? (srcValue !== undefined || (key in object))
	      : baseIsEqual(srcValue, object[key], undefined, true);
	  };
	}

	module.exports = baseMatchesProperty;


/***/ },
/* 131 */
/***/ function(module, exports, __webpack_require__) {

	var toObject = __webpack_require__(32);

	/**
	 * The base implementation of `get` without support for string paths
	 * and default values.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {Array} path The path of the property to get.
	 * @param {string} [pathKey] The key representation of path.
	 * @returns {*} Returns the resolved value.
	 */
	function baseGet(object, path, pathKey) {
	  if (object == null) {
	    return;
	  }
	  if (pathKey !== undefined && pathKey in toObject(object)) {
	    path = [pathKey];
	  }
	  var index = 0,
	      length = path.length;

	  while (object != null && index < length) {
	    object = object[path[index++]];
	  }
	  return (index && index == length) ? object : undefined;
	}

	module.exports = baseGet;


/***/ },
/* 132 */
/***/ function(module, exports) {

	/**
	 * The base implementation of `_.slice` without an iteratee call guard.
	 *
	 * @private
	 * @param {Array} array The array to slice.
	 * @param {number} [start=0] The start position.
	 * @param {number} [end=array.length] The end position.
	 * @returns {Array} Returns the slice of `array`.
	 */
	function baseSlice(array, start, end) {
	  var index = -1,
	      length = array.length;

	  start = start == null ? 0 : (+start || 0);
	  if (start < 0) {
	    start = -start > length ? 0 : (length + start);
	  }
	  end = (end === undefined || end > length) ? length : (+end || 0);
	  if (end < 0) {
	    end += length;
	  }
	  length = start > end ? 0 : ((end - start) >>> 0);
	  start >>>= 0;

	  var result = Array(length);
	  while (++index < length) {
	    result[index] = array[index + start];
	  }
	  return result;
	}

	module.exports = baseSlice;


/***/ },
/* 133 */
/***/ function(module, exports, __webpack_require__) {

	var isArray = __webpack_require__(24),
	    toObject = __webpack_require__(32);

	/** Used to match property names within property paths. */
	var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\n\\]|\\.)*?\1)\]/,
	    reIsPlainProp = /^\w*$/;

	/**
	 * Checks if `value` is a property name and not a property path.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @param {Object} [object] The object to query keys on.
	 * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
	 */
	function isKey(value, object) {
	  var type = typeof value;
	  if ((type == 'string' && reIsPlainProp.test(value)) || type == 'number') {
	    return true;
	  }
	  if (isArray(value)) {
	    return false;
	  }
	  var result = !reIsDeepProp.test(value);
	  return result || (object != null && value in toObject(object));
	}

	module.exports = isKey;


/***/ },
/* 134 */
/***/ function(module, exports) {

	/**
	 * Gets the last element of `array`.
	 *
	 * @static
	 * @memberOf _
	 * @category Array
	 * @param {Array} array The array to query.
	 * @returns {*} Returns the last element of `array`.
	 * @example
	 *
	 * _.last([1, 2, 3]);
	 * // => 3
	 */
	function last(array) {
	  var length = array ? array.length : 0;
	  return length ? array[length - 1] : undefined;
	}

	module.exports = last;


/***/ },
/* 135 */
/***/ function(module, exports, __webpack_require__) {

	var baseToString = __webpack_require__(136),
	    isArray = __webpack_require__(24);

	/** Used to match property names within property paths. */
	var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\n\\]|\\.)*?)\2)\]/g;

	/** Used to match backslashes in property paths. */
	var reEscapeChar = /\\(\\)?/g;

	/**
	 * Converts `value` to property path array if it's not one.
	 *
	 * @private
	 * @param {*} value The value to process.
	 * @returns {Array} Returns the property path array.
	 */
	function toPath(value) {
	  if (isArray(value)) {
	    return value;
	  }
	  var result = [];
	  baseToString(value).replace(rePropName, function(match, number, quote, string) {
	    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));
	  });
	  return result;
	}

	module.exports = toPath;


/***/ },
/* 136 */
/***/ function(module, exports) {

	/**
	 * Converts `value` to a string if it's not one. An empty string is returned
	 * for `null` or `undefined` values.
	 *
	 * @private
	 * @param {*} value The value to process.
	 * @returns {string} Returns the string.
	 */
	function baseToString(value) {
	  return value == null ? '' : (value + '');
	}

	module.exports = baseToString;


/***/ },
/* 137 */
/***/ function(module, exports, __webpack_require__) {

	var baseProperty = __webpack_require__(21),
	    basePropertyDeep = __webpack_require__(138),
	    isKey = __webpack_require__(133);

	/**
	 * Creates a function that returns the property value at `path` on a
	 * given object.
	 *
	 * @static
	 * @memberOf _
	 * @category Utility
	 * @param {Array|string} path The path of the property to get.
	 * @returns {Function} Returns the new function.
	 * @example
	 *
	 * var objects = [
	 *   { 'a': { 'b': { 'c': 2 } } },
	 *   { 'a': { 'b': { 'c': 1 } } }
	 * ];
	 *
	 * _.map(objects, _.property('a.b.c'));
	 * // => [2, 1]
	 *
	 * _.pluck(_.sortBy(objects, _.property(['a', 'b', 'c'])), 'a.b.c');
	 * // => [1, 2]
	 */
	function property(path) {
	  return isKey(path) ? baseProperty(path) : basePropertyDeep(path);
	}

	module.exports = property;


/***/ },
/* 138 */
/***/ function(module, exports, __webpack_require__) {

	var baseGet = __webpack_require__(131),
	    toPath = __webpack_require__(135);

	/**
	 * A specialized version of `baseProperty` which supports deep paths.
	 *
	 * @private
	 * @param {Array|string} path The path of the property to get.
	 * @returns {Function} Returns the new function.
	 */
	function basePropertyDeep(path) {
	  var pathKey = (path + '');
	  path = toPath(path);
	  return function(object) {
	    return baseGet(object, path, pathKey);
	  };
	}

	module.exports = basePropertyDeep;


/***/ },
/* 139 */
/***/ function(module, exports, __webpack_require__) {

	var baseIndexOf = __webpack_require__(140),
	    cacheIndexOf = __webpack_require__(142),
	    createCache = __webpack_require__(143);

	/** Used as the size to enable large array optimizations. */
	var LARGE_ARRAY_SIZE = 200;

	/**
	 * The base implementation of `_.uniq` without support for callback shorthands
	 * and `this` binding.
	 *
	 * @private
	 * @param {Array} array The array to inspect.
	 * @param {Function} [iteratee] The function invoked per iteration.
	 * @returns {Array} Returns the new duplicate free array.
	 */
	function baseUniq(array, iteratee) {
	  var index = -1,
	      indexOf = baseIndexOf,
	      length = array.length,
	      isCommon = true,
	      isLarge = isCommon && length >= LARGE_ARRAY_SIZE,
	      seen = isLarge ? createCache() : null,
	      result = [];

	  if (seen) {
	    indexOf = cacheIndexOf;
	    isCommon = false;
	  } else {
	    isLarge = false;
	    seen = iteratee ? [] : result;
	  }
	  outer:
	  while (++index < length) {
	    var value = array[index],
	        computed = iteratee ? iteratee(value, index, array) : value;

	    if (isCommon && value === value) {
	      var seenIndex = seen.length;
	      while (seenIndex--) {
	        if (seen[seenIndex] === computed) {
	          continue outer;
	        }
	      }
	      if (iteratee) {
	        seen.push(computed);
	      }
	      result.push(value);
	    }
	    else if (indexOf(seen, computed, 0) < 0) {
	      if (iteratee || isLarge) {
	        seen.push(computed);
	      }
	      result.push(value);
	    }
	  }
	  return result;
	}

	module.exports = baseUniq;


/***/ },
/* 140 */
/***/ function(module, exports, __webpack_require__) {

	var indexOfNaN = __webpack_require__(141);

	/**
	 * The base implementation of `_.indexOf` without support for binary searches.
	 *
	 * @private
	 * @param {Array} array The array to search.
	 * @param {*} value The value to search for.
	 * @param {number} fromIndex The index to search from.
	 * @returns {number} Returns the index of the matched value, else `-1`.
	 */
	function baseIndexOf(array, value, fromIndex) {
	  if (value !== value) {
	    return indexOfNaN(array, fromIndex);
	  }
	  var index = fromIndex - 1,
	      length = array.length;

	  while (++index < length) {
	    if (array[index] === value) {
	      return index;
	    }
	  }
	  return -1;
	}

	module.exports = baseIndexOf;


/***/ },
/* 141 */
/***/ function(module, exports) {

	/**
	 * Gets the index at which the first occurrence of `NaN` is found in `array`.
	 *
	 * @private
	 * @param {Array} array The array to search.
	 * @param {number} fromIndex The index to search from.
	 * @param {boolean} [fromRight] Specify iterating from right to left.
	 * @returns {number} Returns the index of the matched `NaN`, else `-1`.
	 */
	function indexOfNaN(array, fromIndex, fromRight) {
	  var length = array.length,
	      index = fromIndex + (fromRight ? 0 : -1);

	  while ((fromRight ? index-- : ++index < length)) {
	    var other = array[index];
	    if (other !== other) {
	      return index;
	    }
	  }
	  return -1;
	}

	module.exports = indexOfNaN;


/***/ },
/* 142 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(28);

	/**
	 * Checks if `value` is in `cache` mimicking the return signature of
	 * `_.indexOf` by returning `0` if the value is found, else `-1`.
	 *
	 * @private
	 * @param {Object} cache The cache to search.
	 * @param {*} value The value to search for.
	 * @returns {number} Returns `0` if `value` is found, else `-1`.
	 */
	function cacheIndexOf(cache, value) {
	  var data = cache.data,
	      result = (typeof value == 'string' || isObject(value)) ? data.set.has(value) : data.hash[value];

	  return result ? 0 : -1;
	}

	module.exports = cacheIndexOf;


/***/ },
/* 143 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {var SetCache = __webpack_require__(144),
	    getNative = __webpack_require__(25);

	/** Native method references. */
	var Set = getNative(global, 'Set');

	/* Native method references for those with the same name as other `lodash` methods. */
	var nativeCreate = getNative(Object, 'create');

	/**
	 * Creates a `Set` cache object to optimize linear searches of large arrays.
	 *
	 * @private
	 * @param {Array} [values] The values to cache.
	 * @returns {null|Object} Returns the new cache object if `Set` is supported, else `null`.
	 */
	function createCache(values) {
	  return (nativeCreate && Set) ? new SetCache(values) : null;
	}

	module.exports = createCache;

	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 144 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {var cachePush = __webpack_require__(145),
	    getNative = __webpack_require__(25);

	/** Native method references. */
	var Set = getNative(global, 'Set');

	/* Native method references for those with the same name as other `lodash` methods. */
	var nativeCreate = getNative(Object, 'create');

	/**
	 *
	 * Creates a cache object to store unique values.
	 *
	 * @private
	 * @param {Array} [values] The values to cache.
	 */
	function SetCache(values) {
	  var length = values ? values.length : 0;

	  this.data = { 'hash': nativeCreate(null), 'set': new Set };
	  while (length--) {
	    this.push(values[length]);
	  }
	}

	// Add functions to the `Set` cache.
	SetCache.prototype.push = cachePush;

	module.exports = SetCache;

	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 145 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(28);

	/**
	 * Adds `value` to the cache.
	 *
	 * @private
	 * @name push
	 * @memberOf SetCache
	 * @param {*} value The value to cache.
	 */
	function cachePush(value) {
	  var data = this.data;
	  if (typeof value == 'string' || isObject(value)) {
	    data.set.add(value);
	  } else {
	    data.hash[value] = true;
	  }
	}

	module.exports = cachePush;


/***/ },
/* 146 */
/***/ function(module, exports, __webpack_require__) {

	var isArrayLike = __webpack_require__(19),
	    isIndex = __webpack_require__(38),
	    isObject = __webpack_require__(28);

	/**
	 * Checks if the provided arguments are from an iteratee call.
	 *
	 * @private
	 * @param {*} value The potential iteratee value argument.
	 * @param {*} index The potential iteratee index or key argument.
	 * @param {*} object The potential iteratee object argument.
	 * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.
	 */
	function isIterateeCall(value, index, object) {
	  if (!isObject(object)) {
	    return false;
	  }
	  var type = typeof index;
	  if (type == 'number'
	      ? (isArrayLike(object) && isIndex(index, object.length))
	      : (type == 'string' && index in object)) {
	    var other = object[index];
	    return value === value ? (value === other) : (other !== other);
	  }
	  return false;
	}

	module.exports = isIterateeCall;


/***/ },
/* 147 */
/***/ function(module, exports) {

	/**
	 * An implementation of `_.uniq` optimized for sorted arrays without support
	 * for callback shorthands and `this` binding.
	 *
	 * @private
	 * @param {Array} array The array to inspect.
	 * @param {Function} [iteratee] The function invoked per iteration.
	 * @returns {Array} Returns the new duplicate free array.
	 */
	function sortedUniq(array, iteratee) {
	  var seen,
	      index = -1,
	      length = array.length,
	      resIndex = -1,
	      result = [];

	  while (++index < length) {
	    var value = array[index],
	        computed = iteratee ? iteratee(value, index, array) : value;

	    if (!index || seen !== computed) {
	      seen = computed;
	      result[++resIndex] = value;
	    }
	  }
	  return result;
	}

	module.exports = sortedUniq;


/***/ },
/* 148 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = {
	  reactFormalContext: _react2.default.PropTypes.shape({
	    noValidate: _react2.default.PropTypes.bool,
	    schema: _react2.default.PropTypes.func,
	    onSubmit: _react2.default.PropTypes.func,
	    onOptions: _react2.default.PropTypes.func
	  })
	};
	module.exports = exports['default'];

/***/ },
/* 149 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.default = createTimeoutManager;

	var _spyOnComponent = __webpack_require__(150);

	var _spyOnComponent2 = _interopRequireDefault(_spyOnComponent);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function createTimeoutManager(componentInstance) {
	  var unmounted = false;
	  var timers = Object.create(null);

	  (0, _spyOnComponent2.default)(componentInstance, {
	    componentWillUnmount: function componentWillUnmount() {
	      unmounted = true;

	      for (var k in timers) {
	        clearTimeout(timers[k]);
	      }timers = null;
	    }
	  });

	  return {
	    clear: function clear(key) {
	      clearTimeout(timers[key]);
	    },
	    set: function set(key, fn, ms) {
	      if (unmounted) return;
	      timers[key] = setTimeout(fn, ms);
	    }
	  };
	}
	module.exports = exports['default'];

/***/ },
/* 150 */
/***/ function(module, exports) {

	
	var LIFECYCLE_HOOKS = {
	  componentWillMount: true,
	  componentDidMount: true,
	  componentWillReceiveProps: true,
	  shouldComponentUpdate: true,
	  componentWillUpdate: true,
	  componentDidUpdate: true,
	  componentWillUnmount: true,
	}

	function wrap(base, method) {
	  var before = true;

	  if (Array.isArray(method)) {
	    before = method[0] !== 'after'
	    method = method[1]
	  }

	  if (!base)
	    return method;

	  return function wrappedLifecyclehook() {
	    before && method.apply(this, arguments)
	    base.apply(this, arguments)
	    !before && method.apply(this, arguments)
	  }
	}

	module.exports = function spyOnComponent(component, hooks) {
	  var originals = Object.create(null);


	  for (var key in hooks) if (LIFECYCLE_HOOKS[key])
	    component[key] = wrap(
	      originals[key] = component[key],
	      hooks[key]
	    )

	  return function reset(key) {
	    if (key && {}.hasOwnProperty.call(originals, key))
	      component[key] = originals[key]
	    else for (var key in originals)
	      component[key] = originals[key]
	  }
	}


/***/ },
/* 151 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.default = registerWithContext;

	var _spyOnComponent = __webpack_require__(150);

	var _spyOnComponent2 = _interopRequireDefault(_spyOnComponent);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function registerWithContext(component, submit) {

	  function register(context) {
	    if (context.reactFormalContext) {
	      var registerSubmit = context.reactFormalContext.registerSubmit;


	      if (registerSubmit) registerSubmit(submit);
	    }
	  }

	  (0, _spyOnComponent2.default)(component, {
	    componentDidMount: function componentDidMount() {
	      register(this.context);
	    },
	    componentWillReceiveProps: function componentWillReceiveProps(_, nextContext) {
	      register(nextContext);
	    }
	  });
	}
	module.exports = exports['default'];

/***/ },
/* 152 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _BindingContext = __webpack_require__(153);

	var _BindingContext2 = _interopRequireDefault(_BindingContext);

	var _Binding = __webpack_require__(158);

	var _Binding2 = _interopRequireDefault(_Binding);

	module.exports = {
	  Binding: _Binding2['default'],
	  BindingContext: _BindingContext2['default']
	};

/***/ },
/* 153 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _uncontrollable = __webpack_require__(154);

	var _uncontrollable2 = _interopRequireDefault(_uncontrollable);

	var _invariant = __webpack_require__(48);

	var _invariant2 = _interopRequireDefault(_invariant);

	var _updateIn = __webpack_require__(157);

	var _updateIn2 = _interopRequireDefault(_updateIn);

	var _propertyExpr = __webpack_require__(42);

	var _propertyExpr2 = _interopRequireDefault(_propertyExpr);

	var defaultSetter = function defaultSetter(path, model, val) {
	  return _updateIn2['default'](model, path, val);
	};

	var BindingContext = (function (_React$Component) {
	  _inherits(BindingContext, _React$Component);

	  _createClass(BindingContext, null, [{
	    key: 'propTypes',
	    value: {
	      /**
	       * BindingContext value object, can be left uncontrolled;
	       * use the `defaultValue` prop to initialize an uncontrolled BindingContext.
	       *
	       * BindingContext assumes that `value` is immutable so you must provide a _new_ value
	       * object to trigger an update. The `<Binding/>` components do this by default.
	       */
	      value: _react2['default'].PropTypes.object,

	      /**
	       * Callback that is called when the `value` prop changes.
	       *
	       * ```js
	       * function(
	       * 	value: object,
	       * 	updatedPaths: array<string>
	       * )
	       * ```
	       */
	      onChange: _react2['default'].PropTypes.func,

	      /**
	       * A function used to extract value paths from the Context value.
	       * `getter` is called with `path` and `value` and should return the value at that path.
	       * `getter()` is used when a `<Binding/>` provides a string `accessor`.
	       *
	        * ```js
	       * function(
	       *  path: string,
	       *  value: any,
	       * ) -> object
	       * ```
	       */
	      getter: _react2['default'].PropTypes.func,

	      /**
	       * A value setter function. `setter` is called with `path`, the context `value` and the path `value`.
	       * The `setter` must return updated form `value`, which allows you to leave the original value unmutated.
	       *
	       * ```js
	       * function(
	       *  path: string,
	       *  formValue: object,
	       *  pathValue: any
	       * ) -> object
	       * ```
	       */
	      setter: _react2['default'].PropTypes.func
	    },
	    enumerable: true
	  }, {
	    key: 'childContextTypes',
	    value: {
	      registerWithBindingContext: _react2['default'].PropTypes.func
	    },
	    enumerable: true
	  }, {
	    key: 'defaultProps',
	    value: {
	      getter: function getter(path, model) {
	        return path ? _propertyExpr2['default'].getter(path, true)(model || {}) : model;
	      },
	      setter: defaultSetter
	    },
	    enumerable: true
	  }]);

	  function BindingContext(props, context) {
	    _classCallCheck(this, BindingContext);

	    _React$Component.call(this, props, context);
	    this._handlers = [];
	  }

	  BindingContext.prototype.getChildContext = function getChildContext() {
	    var _this = this;

	    return this._context || (this._context = {

	      registerWithBindingContext: function registerWithBindingContext(listener) {
	        var remove = function remove() {
	          return _this._handlers.splice(_this._handlers.indexOf(listener), 1);
	        };

	        _this._handlers.push(listener);
	        listener(_this._listenerContext(_this.props));

	        return {
	          remove: remove,
	          onChange: function onChange(mapValue, args) {
	            return _this._update(mapValue, args);
	          }
	        };
	      }
	    });
	  };

	  BindingContext.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
	    if (nextProps.value !== this.props.value) this._emit(nextProps);
	  };

	  BindingContext.prototype.render = function render() {
	    return _react2['default'].Children.only(this.props.children);
	  };

	  BindingContext.prototype._update = function _update(mapValue, args) {
	    var model = this.props.value,
	        updater = this.props.setter,
	        paths = [];

	    if (true) updater = wrapSetter(updater);

	    Object.keys(mapValue).forEach(function (key) {
	      var field = mapValue[key],
	          value = undefined;

	      if (typeof field === 'function') value = field.apply(undefined, args);else if (field === '.' || field == null || args[0] == null) value = args[0];else {
	        value = _propertyExpr2['default'].getter(field, true)(args[0]);
	      }

	      if (paths.indexOf(key) === -1) paths.push(key);

	      model = updater(key, model, value, defaultSetter);
	    });

	    this.props.onChange(model, paths);
	  };

	  BindingContext.prototype._emit = function _emit(props) {
	    var context = this._listenerContext(props);
	    this._handlers.forEach(function (fn) {
	      return fn(context);
	    });
	  };

	  BindingContext.prototype._listenerContext = function _listenerContext(props) {
	    return {
	      value: function value(pathOrAccessor) {
	        return typeof pathOrAccessor === 'function' ? pathOrAccessor(props.value, props.getter) : props.getter(pathOrAccessor, props.value);
	      }
	    };
	  };

	  return BindingContext;
	})(_react2['default'].Component);

	function wrapSetter(setter) {
	  return function () {
	    var result = setter.apply(undefined, arguments);
	    _invariant2['default'](result && typeof result === 'object', '`setter(..)` props must return the form value object after updating a value.');
	    return result;
	  };
	}

	exports['default'] = _uncontrollable2['default'](BindingContext, { value: 'onChange' });
	module.exports = exports['default'];

/***/ },
/* 154 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _createUncontrollable = __webpack_require__(155);

	var _createUncontrollable2 = _interopRequireDefault(_createUncontrollable);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var mixin = {
	  shouldComponentUpdate: function shouldComponentUpdate() {
	    //let the forceUpdate trigger the update
	    return !this._notifying;
	  }
	};

	function set(component, propName, handler, value, args) {
	  if (handler) {
	    component._notifying = true;
	    handler.call.apply(handler, [component, value].concat(args));
	    component._notifying = false;
	  }

	  component._values[propName] = value;

	  if (component.isMounted()) component.forceUpdate();
	}

	exports.default = (0, _createUncontrollable2.default)([mixin], set);
	module.exports = exports['default'];

/***/ },
/* 155 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	exports.default = createUncontrollable;

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _invariant = __webpack_require__(48);

	var _invariant2 = _interopRequireDefault(_invariant);

	var _utils = __webpack_require__(156);

	var utils = _interopRequireWildcard(_utils);

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	function createUncontrollable(mixins, set) {

	  return uncontrollable;

	  function uncontrollable(Component, controlledValues) {
	    var methods = arguments.length <= 2 || arguments[2] === undefined ? [] : arguments[2];

	    var displayName = Component.displayName || Component.name || 'Component',
	        basePropTypes = utils.getType(Component).propTypes,
	        isCompositeComponent = utils.isReactComponent(Component),
	        propTypes;

	    propTypes = utils.uncontrolledPropTypes(controlledValues, basePropTypes, displayName);

	    (0, _invariant2.default)(isCompositeComponent || !methods.length, '[uncontrollable] stateless function components cannot pass through methods ' + 'becasue they have no associated instances. Check component: ' + displayName + ', ' + 'attempting to pass through methods: ' + methods.join(', '));
	    methods = utils.transform(methods, function (obj, method) {
	      obj[method] = function () {
	        var _refs$inner;

	        return (_refs$inner = this.refs.inner)[method].apply(_refs$inner, arguments);
	      };
	    }, {});

	    var component = _react2.default.createClass(_extends({

	      displayName: 'Uncontrolled(' + displayName + ')',

	      mixins: mixins,

	      propTypes: propTypes

	    }, methods, {
	      componentWillMount: function componentWillMount() {
	        var props = this.props,
	            keys = Object.keys(controlledValues);

	        this._values = utils.transform(keys, function (values, key) {
	          values[key] = props[utils.defaultKey(key)];
	        }, {});
	      },


	      /**
	       * If a prop switches from controlled to Uncontrolled
	       * reset its value to the defaultValue
	       */
	      componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
	        var _this = this;

	        var props = this.props,
	            keys = Object.keys(controlledValues);

	        keys.forEach(function (key) {
	          if (utils.getValue(nextProps, key) === undefined && utils.getValue(props, key) !== undefined) {
	            _this._values[key] = nextProps[utils.defaultKey(key)];
	          }
	        });
	      },
	      render: function render() {
	        var _this2 = this;

	        var newProps = {};
	        var _props = this.props;
	        var valueLink = _props.valueLink;
	        var checkedLink = _props.checkedLink;

	        var props = _objectWithoutProperties(_props, ['valueLink', 'checkedLink']);

	        utils.each(controlledValues, function (handle, propName) {
	          var linkPropName = utils.getLinkName(propName),
	              prop = _this2.props[propName];

	          if (linkPropName && !isProp(_this2.props, propName) && isProp(_this2.props, linkPropName)) {
	            prop = _this2.props[linkPropName].value;
	          }

	          newProps[propName] = prop !== undefined ? prop : _this2._values[propName];

	          newProps[handle] = setAndNotify.bind(_this2, propName);
	        });

	        newProps = _extends({}, props, newProps, {
	          ref: isCompositeComponent ? 'inner' : null
	        });

	        return _react2.default.createElement(Component, newProps);
	      }
	    }));

	    component.ControlledComponent = Component;

	    /**
	     * useful when wrapping a Component and you want to control
	     * everything
	     */
	    component.deferControlTo = function (newComponent) {
	      var additions = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];
	      var nextMethods = arguments[2];

	      return uncontrollable(newComponent, _extends({}, controlledValues, additions), nextMethods);
	    };

	    return component;

	    function setAndNotify(propName, value) {
	      var linkName = utils.getLinkName(propName),
	          handler = this.props[controlledValues[propName]];

	      if (linkName && isProp(this.props, linkName) && !handler) {
	        handler = this.props[linkName].requestChange;
	      }

	      for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
	        args[_key - 2] = arguments[_key];
	      }

	      set(this, propName, handler, value, args);
	    }

	    function isProp(props, prop) {
	      return props[prop] !== undefined;
	    }
	  }
	}
	module.exports = exports['default'];

/***/ },
/* 156 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.version = undefined;
	exports.customPropType = customPropType;
	exports.uncontrolledPropTypes = uncontrolledPropTypes;
	exports.getType = getType;
	exports.getValue = getValue;
	exports.getLinkName = getLinkName;
	exports.defaultKey = defaultKey;
	exports.chain = chain;
	exports.transform = transform;
	exports.each = each;
	exports.isReactComponent = isReactComponent;
	exports.has = has;

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _invariant = __webpack_require__(48);

	var _invariant2 = _interopRequireDefault(_invariant);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function customPropType(handler, propType, name) {

	  return function (props, propName) {

	    if (props[propName] !== undefined) {
	      if (!props[handler]) {
	        return new Error('You have provided a `' + propName + '` prop to ' + '`' + name + '` without an `' + handler + '` handler. This will render a read-only field. ' + 'If the field should be mutable use `' + defaultKey(propName) + '`. Otherwise, set `' + handler + '`');
	      }

	      return propType && propType(props, propName, name);
	    }
	  };
	}

	function uncontrolledPropTypes(controlledValues, basePropTypes, displayName) {
	  var propTypes = {};

	  if (("development") !== 'production' && basePropTypes) {
	    transform(controlledValues, function (obj, handler, prop) {
	      var type = basePropTypes[prop];

	      (0, _invariant2.default)(typeof handler === 'string' && handler.trim().length, 'Uncontrollable - [%s]: the prop `%s` needs a valid handler key name in order to make it uncontrollable', displayName, prop);

	      obj[prop] = customPropType(handler, type, displayName);

	      if (type !== undefined) obj[defaultKey(prop)] = type;
	    }, propTypes);
	  }

	  return propTypes;
	}

	var version = exports.version = _react2.default.version.split('.').map(parseFloat);

	function getType(component) {
	  if (version[0] >= 15 || version[0] === 0 && version[1] >= 13) return component;

	  return component.type;
	}

	function getValue(props, name) {
	  var linkPropName = getLinkName(name);

	  if (linkPropName && !isProp(props, name) && isProp(props, linkPropName)) return props[linkPropName].value;

	  return props[name];
	}

	function isProp(props, prop) {
	  return props[prop] !== undefined;
	}

	function getLinkName(name) {
	  return name === 'value' ? 'valueLink' : name === 'checked' ? 'checkedLink' : null;
	}

	function defaultKey(key) {
	  return 'default' + key.charAt(0).toUpperCase() + key.substr(1);
	}

	function chain(thisArg, a, b) {
	  return function chainedFunction() {
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    a && a.call.apply(a, [thisArg].concat(args));
	    b && b.call.apply(b, [thisArg].concat(args));
	  };
	}

	function transform(obj, cb, seed) {
	  each(obj, cb.bind(null, seed = seed || (Array.isArray(obj) ? [] : {})));
	  return seed;
	}

	function each(obj, cb, thisArg) {
	  if (Array.isArray(obj)) return obj.forEach(cb, thisArg);

	  for (var key in obj) {
	    if (has(obj, key)) cb.call(thisArg, obj[key], key, obj);
	  }
	}

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 */
	function isReactComponent(component) {
	  return !!(component && component.prototype && component.prototype.isReactComponent);
	}

	function has(o, k) {
	  return o ? Object.prototype.hasOwnProperty.call(o, k) : false;
	}

/***/ },
/* 157 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	exports['default'] = update;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _propertyExpr = __webpack_require__(42);

	var _propertyExpr2 = _interopRequireDefault(_propertyExpr);

	var IS_ARRAY = /^\d+$/;

	function update(model, path, value) {
	  var parts = _propertyExpr2['default'].split(path),
	      newModel = copy(model),
	      part,
	      islast;

	  if (newModel == null) newModel = IS_ARRAY.test(parts[0]) ? [] : {};

	  var current = newModel;

	  for (var idx = 0; idx < parts.length; idx++) {
	    islast = idx === parts.length - 1;
	    part = clean(parts[idx]);

	    if (islast) current[part] = value;else {
	      current = current[part] = current[part] == null ? IS_ARRAY.test(parts[idx + 1]) ? [] : {} : copy(current[part]);
	    }
	  }

	  return newModel;
	}

	function clean(part) {
	  return isQuoted(part) ? part.substr(1, part.length - 2) : part;
	}

	function isQuoted(str) {
	  return typeof str === 'string' && str && (str[0] === '"' || str[0] === "'");
	}

	function copy(value) {
	  return Array.isArray(value) ? value.concat() : value !== null && typeof value === 'object' ? _extends(new value.constructor(), value) : value;
	}
	module.exports = exports['default'];

/***/ },
/* 158 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _ChildBridge = __webpack_require__(12);

	var _ChildBridge2 = _interopRequireDefault(_ChildBridge);

	function mapValue(props, propName, componentName) {
	  var isOpaqueAccessor = typeof props.bindTo === 'function';

	  if (isOpaqueAccessor) {
	    if (typeof props[propName] === 'function') return new Error(propName + ' must be an Object or a String, when `bindTo` is a function');
	  }

	  for (var _len = arguments.length, args = Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {
	    args[_key - 3] = arguments[_key];
	  }

	  return _react.PropTypes.oneOfType([_react.PropTypes.object, _react.PropTypes.string, _react.PropTypes.func]).apply(undefined, [props, propName, componentName].concat(args));
	}

	var Binding = (function (_React$Component) {
	  _inherits(Binding, _React$Component);

	  function Binding() {
	    var _this = this;

	    _classCallCheck(this, Binding);

	    _React$Component.apply(this, arguments);

	    this.handleEvent = function (event) {
	      for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
	        args[_key2 - 1] = arguments[_key2];
	      }

	      var _props = _this.props;
	      var bindTo = _props.bindTo;
	      var children = _props.children;
	      var mapValue = _props.mapValue;
	      var updateAfterChild = _props.updateAfterChild;

	      var childHandler = _react2['default'].isValidElement(children) && children.props[event];

	      if (typeof bindTo === 'string') {
	        var _mapValue;

	        if (typeof mapValue !== 'object') mapValue = (_mapValue = {}, _mapValue[bindTo] = mapValue, _mapValue);
	      }

	      if (updateAfterChild && childHandler) childHandler.apply(undefined, args);

	      if (_this.bindingContext && mapValue) _this.bindingContext.onChange(mapValue, args);

	      if (!updateAfterChild && childHandler) childHandler.apply(undefined, args);
	    };

	    this.inject = function (props) {
	      var _props2 = _this.props;
	      var valueProp = _props2.valueProp;
	      var children = _props2.children;

	      if (_this.bindingContext) props[valueProp] = _this._value;

	      if (typeof children === 'function') return children(props);

	      return _react2['default'].cloneElement(children, props);
	    };
	  }

	  Binding.prototype.componentWillMount = function componentWillMount() {
	    this.registerWithBindingContext();
	  };

	  Binding.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps, _, nextContext) {
	    this.registerWithBindingContext(nextProps, nextContext);
	  };

	  Binding.prototype.componentWillUnmount = function componentWillUnmount() {
	    this.unmounted = true;

	    if (this.bindingContext) {
	      this.bindingContext.remove();
	    }
	  };

	  Binding.prototype.render = function render() {
	    var changeProp = this.props.changeProp;

	    return _react2['default'].createElement(
	      _ChildBridge2['default'],
	      {
	        events: changeProp,
	        onEvent: this.handleEvent
	      },
	      this.inject
	    );
	  };

	  Binding.prototype.registerWithBindingContext = function registerWithBindingContext() {
	    var _this2 = this;

	    var props = arguments.length <= 0 || arguments[0] === undefined ? this.props : arguments[0];
	    var context = arguments.length <= 1 || arguments[1] === undefined ? this.context : arguments[1];

	    var register = context.registerWithBindingContext,
	        first = true;

	    if (register && !this.bindingContext) this.bindingContext = register(function (bindingContext) {
	      var last = _this2._value;
	      _this2._value = bindingContext.value(props.bindTo);

	      if (!first && last !== _this2._value && !_this2.unmounted) _this2.forceUpdate();

	      first = false;
	    });
	  };

	  _createClass(Binding, null, [{
	    key: 'propTypes',
	    value: {
	      /**
	       * A callback prop name that the Binding should listen for changes on.
	       *
	       * ```js
	       * <Binding changeProp='onSelect'>
	       *   <MyDropDown />
	       * </Binding>
	       * ```
	       */
	      changeProp: _react.PropTypes.string.isRequired,

	      /**
	       * A prop name for the Binding to set from the BindingContext.
	       *
	       * ```js
	       * <Binding valueProp='selectedValue'>
	       *   <MyDropDown />
	       * </Binding>
	       * ```
	       */
	      valueProp: _react.PropTypes.string.isRequired,

	      /**
	       * An field name or accessor function, extracting the Binding value
	       * from the overall BindingContext value. If a function, it's called
	       * with the form value, and the current Form `getter`.
	       *
	       * ```js
	       * <Binding bindTo='details.name'>
	       *   <input />
	       * </Binding>
	       *
	       * <Binding
	       *   bindTo={(model, getter) => {
	       *     let [first, last] = getter(model, 'details.name').split(' ')
	       *     return { first, last }
	       *   }}
	       * >
	       *  <MyDropdown />
	       * </Binding>
	       * ```
	       */
	      bindTo: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.func]).isRequired,

	      /**
	       * Customize how the Binding return value maps to the overall BindingContext `value`.
	       * `mapValue` can be a a string property name or a function that returns a
	       * value to be set to the `bindTo` field.
	       *
	       * ```js
	       * <Binding
	       *   bindTo='name'
	       *   mapValue={dropdownValue =>
	       *     dropdownValue.first + ' ' + dropdownValue.last
	       *   }
	       * >
	       *  <MyDropdown />
	       * </Binding>
	       * ```
	       *
	       * You can also provide an object hash, mapping paths of the BindingContext `value`
	       * to fields in the Binding value using a string field name, or a function accessor.
	       *
	       * ```js
	       * <Binding
	       *   bindTo={model => {
	       *     let [first, last] = model.name.split(' ')
	       *     return { first, last }
	       *   }}
	       *   mapValue={{
	       *    name: dropdownValue =>
	       *      dropdownValue.first + ' ' + dropdownValue.last
	       *   }}
	       * >
	       *   <MyDropdown />
	       * </Binding>
	       * ```
	       */
	      mapValue: mapValue,

	      /**
	       * The element to be bound. You can also specify a function child for components
	       * that nest and alter children. Or need more nuanced control over the injection process.
	       *
	       * ```js
	       * let Surround = (props) => <div {...props}>{props.children}</div>
	       *
	       * <Binding>
	       * {(props)=>
	       *   <Surround>
	       *     <input type='text' {...props} />
	       *   </Surround>
	       * }
	       * </Binding>
	       * ```
	       */
	      children: _react.PropTypes.oneOfType([_react.PropTypes.element, _react.PropTypes.func]).isRequired,

	      /**
	       * Configures the change callback to fire _after_ the child's change handler,
	       * if there is one.
	       */
	      updateAfterChild: _react.PropTypes.bool
	    },
	    enumerable: true
	  }, {
	    key: 'defaultProps',
	    value: {
	      changeProp: 'onChange',
	      valueProp: 'value',
	      updateAfterChild: false
	    },
	    enumerable: true
	  }, {
	    key: 'contextTypes',
	    value: {
	      registerWithBindingContext: _react.PropTypes.func
	    },
	    enumerable: true
	  }]);

	  return Binding;
	})(_react2['default'].Component);

	exports['default'] = Binding;
	module.exports = exports['default'];

/***/ },
/* 159 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _classnames = __webpack_require__(160);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _omit = __webpack_require__(161);

	var _omit2 = _interopRequireDefault(_omit);

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _shallowEqual = __webpack_require__(44);

	var _shallowEqual2 = _interopRequireDefault(_shallowEqual);

	var _MessageTrigger = __webpack_require__(11);

	var _MessageTrigger2 = _interopRequireDefault(_MessageTrigger);

	var _topeka = __webpack_require__(152);

	var _invariant = __webpack_require__(48);

	var _invariant2 = _interopRequireDefault(_invariant);

	var _chainEvents = __webpack_require__(164);

	var _chainEvents2 = _interopRequireDefault(_chainEvents);

	var _isNativeType = __webpack_require__(166);

	var _isNativeType2 = _interopRequireDefault(_isNativeType);

	var _resolveFieldComponent = __webpack_require__(167);

	var _resolveFieldComponent2 = _interopRequireDefault(_resolveFieldComponent);

	var _contextType = __webpack_require__(148);

	var _contextType2 = _interopRequireDefault(_contextType);

	var _config = __webpack_require__(169);

	var _config2 = _interopRequireDefault(_config);

	var _isReactComponent = __webpack_require__(176);

	var _isReactComponent2 = _interopRequireDefault(_isReactComponent);

	var _paths = __webpack_require__(113);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	function getValue(value, bindTo, getter) {
	  if (typeof bindTo === 'function') {
	    return bindTo(value, getter);
	  }
	  if (typeof bindTo === 'string') {
	    return getter(bindTo, value);
	  }

	  return Object.keys(bindTo).reduce(function (obj, key) {
	    obj[key] = getValue(value, bindTo[key], getter);
	    return obj;
	  }, {});
	}

	function inclusiveMapMessages(messages, names) {
	  var activeMessages = {};

	  if (!names.length) return activeMessages;

	  var paths = Object.keys(messages);

	  names.forEach(function (name) {
	    paths.forEach(function (path) {
	      if (messages[path] && (0, _paths.inPath)(name, path)) {
	        activeMessages[path] = messages[path];
	      }
	    });
	  });

	  return activeMessages;
	}

	/**
	 * The Field Component renders a form control and handles input value updates and validations.
	 * Changes to the Field value are automatically propagated back up to the containing Form
	 * Component.
	 *
	 * Fields provide a light abstraction over normal input components where values and onChange handlers
	 * are take care of for you. Beyond that they just render the input for their type, Fields whille pass along
	 * any props and children to the input so you can easily configure new input types.
	 *
	 * ```editable
	 * <Form
	 *   noValidate
	 *   schema={modelSchema}
	 *   defaultValue={{
	 *     name: { first: 'Sally'},
	 *     colorID: 0
	 *   }}
	 * >
	 *   <label>Name</label>
	 *   <Form.Field
	 *     name='name.first'
	 *     placeholder='First name'
	 *   />
	 *
	 *   <label>Favorite Color</label>
	 *   <Form.Field name='colorId' type='select'>
	 *     <option value={0}>Red</option>
	 *     <option value={1}>Yellow</option>
	 *     <option value={2}>Blue</option>
	 *     <option value={3}>other</option>
	 *   </Form.Field>
	 *   <Form.Button type='submit'>Submit</Form.Button>
	 * </Form>
	 * ```
	 */

	var Field = function (_React$Component) {
	  _inherits(Field, _React$Component);

	  function Field() {
	    var _temp, _this, _ret;

	    _classCallCheck(this, Field);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.bindTo = function (_value, getter) {
	      var _this$props = _this.props;
	      var mapToValue = _this$props.mapToValue;
	      var name = _this$props.name;


	      var value = getValue(_value, mapToValue || name, getter);

	      // ensure that no inputs are left uncontrolled
	      if (value === undefined) value = null;

	      return value;
	    }, _this.constructComponent = function (bindingProps) {
	      var triggerProps = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];
	      var _this$props2 = _this.props;
	      var name = _this$props2.name;
	      var type = _this$props2.type;
	      var children = _this$props2.children;
	      var className = _this$props2.className;
	      var _this$props2$events = _this$props2.events;
	      var events = _this$props2$events === undefined ? _config2.default.events : _this$props2$events;
	      var _this$props2$errorCla = _this$props2.errorClass;
	      var errorClass = _this$props2$errorCla === undefined ? _config2.default.errorClass : _this$props2$errorCla;


	      var fieldProps = (0, _chainEvents2.default)(events, [{ name: name }, (0, _omit2.default)(_this.props, Object.keys(Field.propTypes)), bindingProps, triggerProps]);

	      if (_this.shouldValidate()) {
	        var messages = fieldProps.messages;

	        var invalid = messages && !!Object.keys(messages).length;

	        fieldProps.errors = messages;
	        fieldProps.invalid = invalid;
	        fieldProps.className = (0, _classnames2.default)(className, invalid && errorClass);

	        delete fieldProps.messages;
	      }

	      var _resolveFieldComponen = (0, _resolveFieldComponent2.default)(type, _this.schema(name));

	      var Component = _resolveFieldComponen[0];
	      var resolvedType = _resolveFieldComponen[1];


	      fieldProps.type = (0, _isNativeType2.default)(resolvedType) ? resolvedType : undefined;

	      // Escape hatch for more complex Field types.
	      if (typeof children === 'function') {
	        return children(fieldProps, Component);
	      }

	      return _react2.default.createElement(Component, _extends({}, fieldProps, {
	        ref: (0, _isReactComponent2.default)(Component) ? function (r) {
	          return _this.input = r;
	        } : null
	      }));
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }

	  Field.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps, _, nextContext) {
	    return !(0, _shallowEqual2.default)(nextProps, this.props) || !(0, _shallowEqual2.default)(nextContext, this.context);
	  };

	  Field.prototype.componentWillMount = function componentWillMount() {
	    var name = this.props.name;
	    var context = this.context.reactFormalContext;

	    if (true) (0, _invariant2.default)(context.noValidate || !name || this.schema(name), 'There is no corresponding schema defined for this field: "' + name + '" ' + 'Each Field\'s `name` prop must be a valid path defined by the parent Form schema');
	  };

	  Field.prototype.render = function render() {
	    var _mapFromValue,
	        _this2 = this;

	    var _props = this.props;
	    var name = _props.name;
	    var group = _props.group;
	    var exclusive = _props.exclusive;
	    var mapFromValue = _props.mapFromValue;
	    var alsoValidates = _props.alsoValidates;
	    var _props$events = _props.events;
	    var events = _props$events === undefined ? _config2.default.events : _props$events;


	    var mapMessages = !exclusive ? inclusiveMapMessages : undefined;

	    if ((typeof mapFromValue === 'undefined' ? 'undefined' : _typeof(mapFromValue)) !== 'object') mapFromValue = (_mapFromValue = {}, _mapFromValue[name] = mapFromValue, _mapFromValue);

	    if (!this.shouldValidate()) {
	      return _react2.default.createElement(
	        _topeka.Binding,
	        { bindTo: this.bindTo, mapValue: mapFromValue },
	        this.constructComponent
	      );
	    }

	    if (alsoValidates != null) {
	      name = [name].concat(alsoValidates);
	    }

	    return _react2.default.createElement(
	      _topeka.Binding,
	      { bindTo: this.bindTo, mapValue: mapFromValue },
	      function (bindingProps) {
	        return _react2.default.createElement(
	          _MessageTrigger2.default,
	          {
	            'for': name,
	            group: group,
	            events: events,
	            mapMessages: mapMessages
	          },
	          function (triggerProps) {
	            return _this2.constructComponent(bindingProps, triggerProps);
	          }
	        );
	      }
	    );
	  };

	  Field.prototype.schema = function schema(path) {
	    var schema = void 0;
	    var context = this.context.reactFormalContext;
	    try {
	      schema = path && context.schema && context.schema(path);
	    } catch (err) {} // eslint-disable-line no-empty

	    return schema;
	  };

	  Field.prototype.shouldValidate = function shouldValidate() {
	    var context = this.context.reactFormalContext;
	    return !(this.props.noValidate || context.noValidate);
	  };

	  Field.prototype.inputInstance = function inputInstance() {
	    return this.input;
	  };

	  return Field;
	}(_react2.default.Component);

	Field.contextTypes = _contextType2.default;
	Field.defaultProps = {
	  type: '',
	  exclusive: false
	};


	Field.propTypes = {
	  /**
	   * The Field name, which should be path corresponding to a specific form `value` path.
	   *
	   * ```js
	   * // given the form value
	   * value = {
	   *   name: { first: '' }
	   *   languages: ['english', 'spanish']
	   * }
	   *
	   * // the path "name.first" would update the "first" property of the form value
	   * <Form.Field name='name.first' />
	   *
	   * // use indexes for paths that cross arrays
	   * <Form.Field name='languages[0]' />
	   *
	   * ```
	   */
	  name: _react2.default.PropTypes.string.isRequired,

	  /**
	   * Group Fields together with a common `group` name. Groups can be
	   * validated together, helpful for multi-part forms.
	   *
	   * ```editable
	   * <Form
	   *   schema={modelSchema}
	   *   defaultValue={modelSchema.default()}
	   * >
	   *
	   *   <Form.Field
	   *     name='name.first'
	   *     group='name'
	   *     placeholder='first'
	   *   />
	   *   <Form.Field
	   *     name='name.last'
	   *     group='name'
	   *     placeholder='surname'
	   *   />
	   *   <Form.Message for={['name.first', 'name.last']}/>
	   *
	   *   <Form.Field
	   *     name='dateOfBirth'
	   *     placeholder='dob'
	   *   />
	   *
	   *   <Form.Button group='name'>
	   *     Validate Name
	   *   </Form.Button>
	   * </Form>
	   * ```
	   */
	  group: _react2.default.PropTypes.string,

	  /**
	   * The Component Input the form should render. You can sepcify a builtin type
	   * with a string name e.g `'text'`, `'datetime-local'`, etc. or provide a Component
	   * type class directly. When no type is provided the Field will attempt determine
	   * the correct input from the corresponding scheme. A Field corresponding to a `yup.number()`
	   * will render a `type='number'` input by default.
	   *
	   * ```editable
	   * <Form noValidate schema={modelSchema}>
	   *   Use the schema to determine type
	   *   <Form.Field
	   *     name='dateOfBirth'
	   *     placeholder='date'
	   *   />
	   *
	   *   Override it!
	   *   <Form.Field
	   *     name='dateOfBirth'
	   *     type='time'
	   *     placeholder='time only'
	   *   />
	   *
	   *   Use a custom Component
	   *   (need native 'datetime' support to see it)
	   *   <Form.Field
	   *     name='dateOfBirth'
	   *     type={MyDateInput}/>
	   *
	   * </Form>
	   * ```
	   * Custom Inputs should comply with the basic input api contract: set a value via a `value` prop and
	   * broadcast changes to that value via an `onChange` handler.
	   *
	   * You can also permenantly map Components to a string `type` name via the top-level
	   * `addInputType()` api.
	   */
	  type: _react2.default.PropTypes.oneOfType([_react2.default.PropTypes.func, _react2.default.PropTypes.string]),

	  /**
	   * Event name or array of event names that the Field should trigger a validation.
	   */
	  events: _react2.default.PropTypes.oneOfType([_react2.default.PropTypes.string, _react2.default.PropTypes.arrayOf(_react2.default.PropTypes.string)]),

	  /**
	   * Customize how the Field value maps to the overall Form `value`.
	   * `mapFromValue` can be a a string property name or a function that returns a
	   * value for `name`'d path, allowing you to set commuted values from the Field.
	   *
	   * ```js
	   * <Form.Field name='name'
	   *   mapFromValue={fieldValue => fieldValue.first + ' ' + fieldValue.last}
	   * />
	   * ```
	   *
	   * You can also provide an object hash, mapping paths of the Form `value`
	   * to fields in the field value using a string field name, or a function accessor.
	   *
	   * ```editable
	   * <Form
	   *   schema={modelSchema}
	   *   defaultValue={modelSchema.default()}
	   * >
	   *   <label>Name</label>
	   *   <Form.Field
	   *     name='name.first'
	   *     placeholder='First name'
	   *   />
	   *
	   *   <label>Date of Birth</label>
	   *   <Form.Field name='dateOfBirth'
	   *     mapFromValue={{
	   *       'dateOfBirth': date => date,
	   *       'age': date =>
	   *         (new Date()).getFullYear() - date.getFullYear()
	   *   }}/>
	    *   <label>Age</label>
	   *   <Form.Field name='age'/>
	   *
	   *   <Form.Button type='submit'>Submit</Form.Button>
	   * </Form>
	   * ```
	   */
	  mapFromValue: _react2.default.PropTypes.oneOfType([_react2.default.PropTypes.func, _react2.default.PropTypes.string, _react2.default.PropTypes.object]),

	  /**
	   * Map the Form value to the Field value. By default
	   * the `name` of the Field is used to extract the relevant
	   * property from the Form value.
	   *
	   * ```js
	   * <Form.Field
	   *   name='location'
	   *   type="dropdownlist"
	   *   mapToValue={model=> pick(model, 'location', 'locationId')}
	   * />
	   * ```
	   */
	  mapToValue: _react2.default.PropTypes.oneOfType([_react2.default.PropTypes.func, _react2.default.PropTypes.object]),

	  /**
	   * The css class added to the Field Input when it fails validation
	   */
	  errorClass: _react2.default.PropTypes.string,

	  /**
	   * Tells the Field to trigger validation for addition paths as well as its own (`name`).
	   * Useful when used in conjuction with a `mapFromValue` hash that updates more than one value, or
	   * if you want to trigger validation for the parent path as well.
	   *
	   * ```js
	   * <Form.Field name='name.first' alsoValidates={['name']}/>
	   * <Form.Field name='name.last' alsoValidates={['name']}/>
	   * ```
	   */
	  alsoValidates: _react2.default.PropTypes.arrayOf(_react2.default.PropTypes.string),

	  /**
	   * Indicates whether child fields of the named field
	   * affect the active state ofthe field.
	   *
	   * ```js
	   * -> 'names'
	   * -> 'names.first'
	   * -> 'names.last'
	   * ```
	   *
	   * Are all considered "part" of a field named `'names'` by default.
	   */
	  exclusive: _react2.default.PropTypes.bool,

	  /**
	   * Disables validation for the Field.
	   */
	  noValidate: _react2.default.PropTypes.bool,

	  /**
	   * When children is the traditional react element or nodes, they are
	   * passed through as-is to the Field `type` component.
	   *
	   * ```jsx
	   * <Field type='select'>
	   *   <option>red</option>
	   *   <option>red</option>
	   * </Field>
	   * ```
	   *
	   * When `children` is a function, its called with the processed field
	   * props and the resolved Field Input component, for more advanced use cases
	   *
	   * ```jsx
	   * <Field name='birthDate'>
	   *  {(props, Input) =>
	   *    <DataProvider>
	   *      <Input {...props} />
	   *    </DataProvider>
	   *  }
	   * </Field>
	   * ```
	   */
	  children: _react2.default.PropTypes.oneOfType([_react2.default.PropTypes.node, _react2.default.PropTypes.func])
	};

	exports.default = Field;
	module.exports = exports['default'];

/***/ },
/* 160 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	  Copyright (c) 2016 Jed Watson.
	  Licensed under the MIT License (MIT), see
	  http://jedwatson.github.io/classnames
	*/
	/* global define */

	(function () {
		'use strict';

		var hasOwn = {}.hasOwnProperty;

		function classNames () {
			var classes = [];

			for (var i = 0; i < arguments.length; i++) {
				var arg = arguments[i];
				if (!arg) continue;

				var argType = typeof arg;

				if (argType === 'string' || argType === 'number') {
					classes.push(arg);
				} else if (Array.isArray(arg)) {
					classes.push(classNames.apply(null, arg));
				} else if (argType === 'object') {
					for (var key in arg) {
						if (hasOwn.call(arg, key) && arg[key]) {
							classes.push(key);
						}
					}
				}
			}

			return classes.join(' ');
		}

		if (typeof module !== 'undefined' && module.exports) {
			module.exports = classNames;
		} else if (true) {
			// register as 'classnames', consistent with npm package name
			!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
				return classNames;
			}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		} else {
			window.classNames = classNames;
		}
	}());


/***/ },
/* 161 */
/***/ function(module, exports, __webpack_require__) {

	var arrayMap = __webpack_require__(162),
	    baseDifference = __webpack_require__(163),
	    baseFlatten = __webpack_require__(16),
	    bindCallback = __webpack_require__(29),
	    keysIn = __webpack_require__(37),
	    pickByArray = __webpack_require__(31),
	    pickByCallback = __webpack_require__(33),
	    restParam = __webpack_require__(39);

	/**
	 * The opposite of `_.pick`; this method creates an object composed of the
	 * own and inherited enumerable properties of `object` that are not omitted.
	 *
	 * @static
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The source object.
	 * @param {Function|...(string|string[])} [predicate] The function invoked per
	 *  iteration or property names to omit, specified as individual property
	 *  names or arrays of property names.
	 * @param {*} [thisArg] The `this` binding of `predicate`.
	 * @returns {Object} Returns the new object.
	 * @example
	 *
	 * var object = { 'user': 'fred', 'age': 40 };
	 *
	 * _.omit(object, 'age');
	 * // => { 'user': 'fred' }
	 *
	 * _.omit(object, _.isNumber);
	 * // => { 'user': 'fred' }
	 */
	var omit = restParam(function(object, props) {
	  if (object == null) {
	    return {};
	  }
	  if (typeof props[0] != 'function') {
	    var props = arrayMap(baseFlatten(props), String);
	    return pickByArray(object, baseDifference(keysIn(object), props));
	  }
	  var predicate = bindCallback(props[0], props[1], 3);
	  return pickByCallback(object, function(value, key, object) {
	    return !predicate(value, key, object);
	  });
	});

	module.exports = omit;


/***/ },
/* 162 */
/***/ function(module, exports) {

	/**
	 * A specialized version of `_.map` for arrays without support for callback
	 * shorthands and `this` binding.
	 *
	 * @private
	 * @param {Array} array The array to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array} Returns the new mapped array.
	 */
	function arrayMap(array, iteratee) {
	  var index = -1,
	      length = array.length,
	      result = Array(length);

	  while (++index < length) {
	    result[index] = iteratee(array[index], index, array);
	  }
	  return result;
	}

	module.exports = arrayMap;


/***/ },
/* 163 */
/***/ function(module, exports, __webpack_require__) {

	var baseIndexOf = __webpack_require__(140),
	    cacheIndexOf = __webpack_require__(142),
	    createCache = __webpack_require__(143);

	/** Used as the size to enable large array optimizations. */
	var LARGE_ARRAY_SIZE = 200;

	/**
	 * The base implementation of `_.difference` which accepts a single array
	 * of values to exclude.
	 *
	 * @private
	 * @param {Array} array The array to inspect.
	 * @param {Array} values The values to exclude.
	 * @returns {Array} Returns the new array of filtered values.
	 */
	function baseDifference(array, values) {
	  var length = array ? array.length : 0,
	      result = [];

	  if (!length) {
	    return result;
	  }
	  var index = -1,
	      indexOf = baseIndexOf,
	      isCommon = true,
	      cache = (isCommon && values.length >= LARGE_ARRAY_SIZE) ? createCache(values) : null,
	      valuesLength = values.length;

	  if (cache) {
	    indexOf = cacheIndexOf;
	    isCommon = false;
	    values = cache;
	  }
	  outer:
	  while (++index < length) {
	    var value = array[index];

	    if (isCommon && value === value) {
	      var valuesIndex = valuesLength;
	      while (valuesIndex--) {
	        if (values[valuesIndex] === value) {
	          continue outer;
	        }
	      }
	      result.push(value);
	    }
	    else if (indexOf(values, value, 0) < 0) {
	      result.push(value);
	    }
	  }
	  return result;
	}

	module.exports = baseDifference;


/***/ },
/* 164 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	exports.default = mergeWithEvents;

	var _has = __webpack_require__(52);

	var _has2 = _interopRequireDefault(_has);

	var _chainFunction = __webpack_require__(165);

	var _chainFunction2 = _interopRequireDefault(_chainFunction);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function chainEvents(events, objects) {
	  if (!events) return;

	  var result = {};

	  [].concat(events).forEach(function (event) {
	    var handlers = objects.map(function (p) {
	      return p[event];
	    });
	    result[event] = _chainFunction2.default.apply(undefined, handlers);
	  });

	  return result;
	}

	function mergeWithEvents(events, objects) {
	  return _extends.apply(undefined, [{}].concat(objects, [chainEvents(events, objects)]));
	}
	module.exports = exports['default'];

/***/ },
/* 165 */
/***/ function(module, exports) {

	
	module.exports = function chain(){
	  var len = arguments.length
	  var args = [];

	  for (var i = 0; i < len; i++)
	    args[i] = arguments[i]

	  args = args.filter(function(fn){ return fn != null })

	  if (args.length === 0) return undefined
	  if (args.length === 1) return args[0]

	  return args.reduce(function(current, next){
	    return function chainedFunction() {
	      current.apply(this, arguments);
	      next.apply(this, arguments);
	    };
	  })
	}


/***/ },
/* 166 */
/***/ function(module, exports) {

	'use strict';

	exports.__esModule = true;
	exports.default = isNativeType;
	function isNativeType(type) {
	  return type === 'button' || type === 'checkbox' || type === 'color' || type === 'date' || type === 'datetime' || type === 'datetime-local' || type === 'email' || type === 'file' || type === 'month' || type === 'number' || type === 'password' || type === 'radio' || type === 'range' || type === 'reset' || type === 'search' || type === 'submit' || type === 'tel' || type === 'text' || type === 'time' || type === 'url' || type === 'week';
	}
	module.exports = exports['default'];

/***/ },
/* 167 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.default = resolveFieldComponent;

	var _Input = __webpack_require__(168);

	var _Input2 = _interopRequireDefault(_Input);

	var _config = __webpack_require__(169);

	var _config2 = _interopRequireDefault(_config);

	var _types = __webpack_require__(170);

	var _types2 = _interopRequireDefault(_types);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function resolveFieldComponent(type, schema) {
	  if (!type && schema) {
	    var meta = schema.meta && schema.meta() || {};
	    type = meta[_config2.default.metadataField] || schema._type;
	  }

	  var Component = type;

	  if (typeof type === 'string') {
	    Component = _types2.default[type.toLowerCase()] || _Input2.default;
	  }

	  return [Component, type];
	}
	module.exports = exports['default'];

/***/ },
/* 168 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Input = function (_React$Component) {
	  _inherits(Input, _React$Component);

	  function Input() {
	    _classCallCheck(this, Input);

	    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
	  }

	  Input.prototype.render = function render() {
	    var _props = this.props;
	    var _props$tagName = _props.tagName;
	    var Tag = _props$tagName === undefined ? 'input' : _props$tagName;
	    var value = _props.value;

	    var props = _objectWithoutProperties(_props, ['tagName', 'value']);

	    delete props.errors;
	    delete props.invalid;

	    if (value === null) value = '';

	    return _react2.default.createElement(Tag, _extends({}, props, {
	      value: value,
	      onChange: function onChange(e) {
	        return props.onChange(e.target.value);
	      }
	    }));
	  };

	  return Input;
	}(_react2.default.Component);

	Input.propTypes = {
	  value: _react2.default.PropTypes.any,
	  onChange: _react2.default.PropTypes.func,
	  tagName: _react2.default.PropTypes.oneOfType([_react2.default.PropTypes.string, _react2.default.PropTypes.func])
	};
	exports.default = Input;
	module.exports = exports['default'];

/***/ },
/* 169 */
/***/ function(module, exports) {

	'use strict';

	exports.__esModule = true;
	exports.default = {
	  metadataField: 'reactFormalType',
	  events: ['onChange', 'onBlur'],
	  errorClass: 'invalid-field'
	};
	module.exports = exports['default'];

/***/ },
/* 170 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _Input = __webpack_require__(168);

	var _Input2 = _interopRequireDefault(_Input);

	var _Date = __webpack_require__(171);

	var _Date2 = _interopRequireDefault(_Date);

	var _Number = __webpack_require__(172);

	var _Number2 = _interopRequireDefault(_Number);

	var _Bool = __webpack_require__(173);

	var _Bool2 = _interopRequireDefault(_Bool);

	var _Select = __webpack_require__(174);

	var _Select2 = _interopRequireDefault(_Select);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var localDt = 'datetime-local';

	var wrapWithDefaults = function wrapWithDefaults(Component, defaults) {
	  var _class, _temp;

	  return _temp = _class = function (_React$Component) {
	    _inherits(_class, _React$Component);

	    function _class() {
	      _classCallCheck(this, _class);

	      return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
	    }

	    _class.prototype.render = function render() {
	      return _react2.default.createElement(Component, _extends({}, defaults, this.props, {
	        type: defaults.type || this.props.type
	      }));
	    };

	    return _class;
	  }(_react2.default.Component), _class.propTypes = {
	    type: _react2.default.PropTypes.oneOfType([_react2.default.PropTypes.string, _react2.default.PropTypes.func])
	  }, _temp;
	};

	var types = Object.create(null);

	types.string = wrapWithDefaults(_Input2.default, { type: 'text' });
	types.number = _Number2.default;
	types.date = types.time = types.datetime = types[localDt] = _Date2.default;

	types.array = types.listbox = wrapWithDefaults(_Select2.default, { multiple: true });

	types.bool = types.boolean = _Bool2.default;

	types.textarea = wrapWithDefaults(_Input2.default, { tagName: 'textarea' });

	types.select = _Select2.default;

	exports.default = types;
	module.exports = exports['default'];

/***/ },
/* 171 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _Input = __webpack_require__(168);

	var _Input2 = _interopRequireDefault(_Input);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var pad = function pad(n) {
	  return n < 10 ? '0' + n : n;
	};

	var isValid = function isValid(date) {
	  return date && !isNaN(date.getTime());
	};

	var toLocal = function toLocal(date) {
	  if (!date) return null;

	  date = new Date(date);
	  return new Date(date.getTime() + date.getTimezoneOffset() * 60000);
	};

	var parse = function parse(date, org, part) {
	  return toLocal(part === 'time' ? toDateString(org || new Date(), 'date') + 'T' + date : date);
	};

	var localISOString = function localISOString(date) {
	  return date.getFullYear() + '-' + pad(date.getMonth() + 1) + '-' + pad(date.getDate()) + 'T' + pad(date.getHours()) + ':' + pad(date.getMinutes()) + ':' + pad(date.getSeconds()) + '.000';
	};

	var toDateString = function toDateString(date, part) {
	  if (!isValid(date)) return '';
	  date = localISOString(date);
	  if (part === 'date') date = date.substr(0, 10);
	  if (part === 'time') date = date.substr(11);
	  return date;
	};

	var DateInput = function (_React$Component) {
	  _inherits(DateInput, _React$Component);

	  function DateInput() {
	    _classCallCheck(this, DateInput);

	    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
	  }

	  DateInput.prototype.render = function render() {
	    var _props = this.props;
	    var value = _props.value;
	    var _props$type = _props.type;
	    var type = _props$type === undefined ? 'date' : _props$type;

	    var props = _objectWithoutProperties(_props, ['value', 'type']);

	    return _react2.default.createElement(_Input2.default, _extends({}, props, {
	      type: type,
	      value: toDateString(value, type),
	      onChange: function onChange(stringValue) {
	        return props.onChange(parse(stringValue, value, type));
	      }
	    }));
	  };

	  return DateInput;
	}(_react2.default.Component);

	DateInput.propTypes = {
	  value: _react2.default.PropTypes.instanceOf(Date),
	  onChange: _react2.default.PropTypes.func,
	  type: _react2.default.PropTypes.string
	};
	exports.default = DateInput;
	module.exports = exports['default'];

/***/ },
/* 172 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _Input = __webpack_require__(168);

	var _Input2 = _interopRequireDefault(_Input);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var isValid = function isValid(num) {
	  return typeof num === 'number' && !isNaN(num);
	};

	var isAtDelimiter = function isAtDelimiter(num, str) {
	  var next = str.length <= 1 ? false : parseFloat(str.substr(0, str.length - 1));
	  return typeof next === 'number' && !isNaN(next) && next === num;
	};

	var NumberInput = function (_React$Component) {
	  _inherits(NumberInput, _React$Component);

	  function NumberInput() {
	    var _temp, _this, _ret;

	    _classCallCheck(this, NumberInput);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {}, _this.handleChange = function (value) {
	      var current = _this.props.value,
	          number = parseFloat(value);

	      if (value == null || value.trim() === '' || !isValid(number)) return _this.props.onChange(null);

	      if (isValid(number) && number !== current && !isAtDelimiter(number, value)) return _this.props.onChange(number);

	      _this.setState({ value: value });
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }

	  NumberInput.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
	    var value = nextProps.value;

	    value = value == null || isNaN(value) ? '' : '' + value;

	    this.setState({ value: value });
	  };

	  NumberInput.prototype.render = function render() {
	    var _props = this.props;
	    var value = _props.value;

	    var props = _objectWithoutProperties(_props, ['value']);

	    value = this.state.value || value;

	    return _react2.default.createElement(_Input2.default, _extends({}, props, {
	      type: 'number',
	      value: value,
	      onChange: this.handleChange
	    }));
	  };

	  return NumberInput;
	}(_react2.default.Component);

	NumberInput.propTypes = {
	  value: _react2.default.PropTypes.number,
	  onChange: _react2.default.PropTypes.func
	};
	exports.default = NumberInput;
	module.exports = exports['default'];

/***/ },
/* 173 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _Input = __webpack_require__(168);

	var _Input2 = _interopRequireDefault(_Input);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var BoolInput = function (_React$Component) {
	  _inherits(BoolInput, _React$Component);

	  function BoolInput() {
	    _classCallCheck(this, BoolInput);

	    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
	  }

	  BoolInput.prototype.render = function render() {
	    var _props = this.props;
	    var value = _props.value;

	    var props = _objectWithoutProperties(_props, ['value']);

	    return _react2.default.createElement(_Input2.default, _extends({}, props, {
	      type: 'checkbox',
	      checked: !!value,
	      onChange: function onChange() {
	        return props.onChange(!value);
	      }
	    }));
	  };

	  return BoolInput;
	}(_react2.default.Component);

	BoolInput.propTypes = {
	  value: _react2.default.PropTypes.bool,
	  onChange: _react2.default.PropTypes.func
	};
	exports.default = BoolInput;
	module.exports = exports['default'];

/***/ },
/* 174 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(175);

	var _Input = __webpack_require__(168);

	var _Input2 = _interopRequireDefault(_Input);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var toArray = _react2.default.Children.toArray || function (children) {
	  var result = [];
	  _react2.default.Children.map(children, function (c) {
	    return result.push(c);
	  });
	  return result;
	};

	var Select = function (_React$Component) {
	  _inherits(Select, _React$Component);

	  function Select() {
	    var _temp, _this, _ret;

	    _classCallCheck(this, Select);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleChange = function () {
	      var _this$props = _this.props;
	      var onChange = _this$props.onChange;
	      var children = _this$props.children;

	      var node = (0, _reactDom.findDOMNode)(_this);

	      children = toArray(children);

	      if (!_this.props.multiple) {
	        var selected = children[node.selectedIndex];
	        return _this.props.onChange(selected.props.value);
	      }

	      var values = [];

	      [].forEach.call(node.options, function (option, i) {
	        if (option.selected) {
	          var _selected = children[i];
	          values.push(_selected.props.value);
	        }
	      });

	      onChange(values);
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }

	  Select.prototype.render = function render() {
	    var _props = this.props;
	    var value = _props.value;
	    var children = _props.children;
	    var _props$tagName = _props.tagName;
	    var tagName = _props$tagName === undefined ? 'select' : _props$tagName;

	    var props = _objectWithoutProperties(_props, ['value', 'children', 'tagName']);

	    if (value === null) value = props.multiple ? [] : '';

	    return _react2.default.createElement(
	      _Input2.default,
	      _extends({}, props, {
	        tagName: tagName,
	        value: value,
	        onChange: this.handleChange
	      }),
	      children
	    );
	  };

	  return Select;
	}(_react2.default.Component);

	Select.propTypes = {
	  value: _react2.default.PropTypes.number,
	  multiple: _react2.default.PropTypes.bool,
	  onChange: _react2.default.PropTypes.func,
	  tagName: _react2.default.PropTypes.oneOfType([_react2.default.PropTypes.string, _react2.default.PropTypes.func])
	};
	exports.default = Select;
	module.exports = exports['default'];

/***/ },
/* 175 */
/***/ function(module, exports) {

	module.exports = __WEBPACK_EXTERNAL_MODULE_175__;

/***/ },
/* 176 */
/***/ function(module, exports) {

	"use strict";

	exports.__esModule = true;
	exports.default = isReactComponent;
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 */
	function isReactComponent(component) {
	  return !!(component && component.prototype && component.prototype.isReactComponent);
	}
	module.exports = exports['default'];

/***/ },
/* 177 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	/**
	 * `<Form.Context />` provides declarative API similar in purpose to the
	 * HTML5 `.form` attribute. Sometimes it is necessary to trigger a form
	 * validation or submission from _outside_ a `<Form />`.
	 *
	 * One approach is to use the imperative API of capturing the `<Form />` instance in a ref
	 * and calling the `.submit()` method on it, but this can be troublesome with
	 * Higher order Components, used by your app or other libraries.
	 *
	 * An more "React" approach is to use `<Form.Context />` to wrap both your form and trigger.
	 *
	 * ```js
	 * <Form.Context>
	 *   <MyForm />
	 *   <Form.Button type='submit' />
	 * </Form.Context>
	 * ```
	 *
	 * @alias Context
	 */
	var FormContext = function (_React$Component) {
	  _inherits(FormContext, _React$Component);

	  function FormContext() {
	    _classCallCheck(this, FormContext);

	    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
	  }

	  /**
	   * the component the Context will render as it's root if necessary.
	   * If there is only one child defined the Context will just return that.
	   *
	   * @default 'div'
	  **/
	  FormContext.prototype.getChildContext = function getChildContext() {
	    var _this2 = this;

	    return this._context || (this._context = {
	      reactFormalContext: {
	        registerSubmit: function registerSubmit(fn) {
	          return _this2.submit = fn;
	        },
	        onSubmit: function onSubmit() {
	          if (_this2.submit) _this2.submit();
	        }
	      }
	    });
	  };

	  FormContext.prototype.render = function render() {
	    var Tag = this.props.component || 'div';
	    return _react2.default.Children.count(this.props.children) === 1 ? this.props.children : _react2.default.createElement(Tag, this.props);
	  };

	  return FormContext;
	}(_react2.default.Component);

	FormContext.propTypes = {
	  component: _react2.default.PropTypes.oneOfType([_react2.default.PropTypes.func, _react2.default.PropTypes.string])
	};
	FormContext.childContextTypes = {
	  reactFormalContext: _react2.default.PropTypes.object
	};
	exports.default = FormContext;
	module.exports = exports['default'];

/***/ },
/* 178 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _function = __webpack_require__(43);

	var _function2 = _interopRequireDefault(_function);

	var _Message = __webpack_require__(179);

	var _Message2 = _interopRequireDefault(_Message);

	var _classnames = __webpack_require__(160);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _uniqMessage = __webpack_require__(180);

	var _uniqMessage2 = _interopRequireDefault(_uniqMessage);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	/**
	 * Represents a Form validation error message. Only renders when the
	 * value that it is `for` is invalid.
	 *
	 * @alias Message
	 */
	var ValidationMessage = function (_React$Component) {
	  _inherits(ValidationMessage, _React$Component);

	  function ValidationMessage() {
	    _classCallCheck(this, ValidationMessage);

	    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
	  }

	  ValidationMessage.prototype.shouldComponentUpdate = function shouldComponentUpdate(p, s, c) {
	    return _function2.default.call(this, p, s, c);
	  };

	  ValidationMessage.prototype.render = function render() {
	    var _props = this.props;
	    var className = _props.className;
	    var errorClass = _props.errorClass;
	    var children = _props.children;
	    var extract = _props.extract;
	    var filter = _props.filter;

	    var props = _objectWithoutProperties(_props, ['className', 'errorClass', 'children', 'extract', 'filter']);

	    return _react2.default.createElement(
	      _Message2.default,
	      _extends({}, props, {
	        className: (0, _classnames2.default)(className, errorClass)
	      }),
	      function (messages) {
	        return children(messages.filter(function () {
	          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	            args[_key] = arguments[_key];
	          }

	          return filter.apply(undefined, args.concat([extract]));
	        }).map(extract));
	      }
	    );
	  };

	  return ValidationMessage;
	}(_react2.default.Component);

	ValidationMessage.propTypes = _extends({}, _Message2.default.propTypes, {
	  /**
	   * A function that maps an array of message strings
	   * and returns a renderable string or ReactElement.
	   *
	   * ```js
	   * <Message>
	   *  {messages => messages.join(', ')}
	   * </Message>
	   * ```
	   */
	  children: _react2.default.PropTypes.func,

	  component: _react2.default.PropTypes.oneOfType([_react2.default.PropTypes.func, _react2.default.PropTypes.string]).isRequired,

	  /**
	   * A css class that should be always be applied to the Message container.
	   */
	  errorClass: _react2.default.PropTypes.string,

	  /**
	   * Map the passed in message object for the field to a string to display
	   */
	  extract: _react2.default.PropTypes.func
	});
	ValidationMessage.defaultProps = {
	  component: 'span',
	  errorClass: 'validation-error',
	  filter: _uniqMessage2.default,
	  extract: function extract(error) {
	    return error.message || error;
	  },
	  children: function children(messages) {
	    return messages.join(', ');
	  }
	};
	exports.default = ValidationMessage;
	module.exports = exports['default'];

/***/ },
/* 179 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _connectToMessageContainer = __webpack_require__(13);

	var _connectToMessageContainer2 = _interopRequireDefault(_connectToMessageContainer);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var values = function values(obj) {
	  return Object.keys(obj).map(function (k) {
	    return obj[k];
	  });
	};
	var flatten = function flatten(arr, next) {
	  return arr.concat(next);
	};

	var stringOrArrayOfStrings = _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.arrayOf(_react.PropTypes.string)]);

	var Message = function (_React$Component) {
	  _inherits(Message, _React$Component);

	  function Message() {
	    _classCallCheck(this, Message);

	    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
	  }

	  Message.prototype.render = function render() {
	    var _props = this.props;
	    var fieldFor = _props.for;
	    var
	    /* eslint-enable no-unused-vars */
	    messages = _props.messages;
	    var Component = _props.component;
	    var children = _props.children;

	    var props = _objectWithoutProperties(_props, ['for', 'messages', 'component', 'children']);

	    if (!Object.keys(messages || {}).length) return null;

	    return _react2.default.createElement(
	      Component,
	      props,
	      children(values(messages).reduce(flatten, []))
	    );
	  };

	  return Message;
	}(_react2.default.Component);

	Message.propTypes = {
	  for: stringOrArrayOfStrings,
	  group: stringOrArrayOfStrings,
	  messagesForNames: _react.PropTypes.func,
	  children: _react.PropTypes.func,
	  component: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.func])
	};
	Message.defaultProps = {
	  component: 'span',
	  children: function children(messages) {
	    return messages.join(', ');
	  }
	};
	Message.contextTypes = {
	  messageContainer: _react2.default.PropTypes.object
	};


	module.exports = (0, _connectToMessageContainer2.default)(Message);
	module.exports._Message = Message;

/***/ },
/* 180 */
/***/ function(module, exports) {

	"use strict";

	exports.__esModule = true;
	exports.default = uniqMessage;
	function uniqMessage(msg, i, list) {
	  var idx = -1;
	  var extract = function extract(item) {
	    return item.message || item;
	  };

	  msg = extract(msg);

	  list.some(function (item, ii) {
	    if (extract(item) === msg) {
	      idx = ii;
	      return true;
	    }
	  });

	  return idx === i;
	}
	module.exports = exports['default'];

/***/ },
/* 181 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _function = __webpack_require__(43);

	var _function2 = _interopRequireDefault(_function);

	var _ValidationMessage = __webpack_require__(178);

	var _ValidationMessage2 = _interopRequireDefault(_ValidationMessage);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	/**
	 * Display all Form validation `errors` in a single summary list.
	 *
	 * ```editable
	 * <Form
	 *   schema={modelSchema}
	 *   defaultValue={modelSchema.default()}
	 * >
	 *   <Form.Summary/>
	 *
	 *   <Form.Field name='name.first' placeholder='first'/>
	 *   <Form.Field name='name.last' placeholder='surname'/>
	 *   <Form.Field name='dateOfBirth' placeholder='dob'/>
	 *
	 *   <Form.Button>Validate</Form.Button>
	 * </Form>
	 * ```
	 * @alias Summary
	 */
	var ValidationSummary = function (_React$Component) {
	  _inherits(ValidationSummary, _React$Component);

	  function ValidationSummary() {
	    _classCallCheck(this, ValidationSummary);

	    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
	  }

	  ValidationSummary.prototype.shouldComponentUpdate = function shouldComponentUpdate(p, s, c) {
	    return _function2.default.call(this, p, s, c);
	  };

	  ValidationSummary.prototype.render = function render() {
	    var _props = this.props;
	    var formatMessage = _props.formatMessage;

	    var props = _objectWithoutProperties(_props, ['formatMessage']);

	    return _react2.default.createElement(
	      _ValidationMessage2.default,
	      props,
	      function (messages) {
	        return messages.map(formatMessage);
	      }
	    );
	  };

	  return ValidationSummary;
	}(_react2.default.Component);

	ValidationSummary.propTypes = {

	  /**
	   * An error message renderer, Should return a `ReactElement`
	   * ```
	   * function(
	   *   message: string,
	   *   idx: number,
	   *   messages: array
	   * ) -> ReactElement
	   * ```
	   */
	  formatMessage: _react2.default.PropTypes.func.isRequired,

	  /**
	   * A DOM node tag name or Component class the Message should render as.
	   */
	  component: _react2.default.PropTypes.oneOfType([_react2.default.PropTypes.func, _react2.default.PropTypes.string]).isRequired,

	  /**
	   * A css class that should be always be applied to the Summary container.
	   */
	  errorClass: _react2.default.PropTypes.string,

	  /**
	   * Specify a group to show erros for, if empty all form errors will be shown in the Summary.
	   */
	  group: _react2.default.PropTypes.string
	};
	ValidationSummary.defaultProps = {
	  component: 'ul',
	  formatMessage: function formatMessage(message, idx) {
	    return _react2.default.createElement(
	      'li',
	      { key: idx },
	      message
	    );
	  }
	};
	exports.default = ValidationSummary;
	module.exports = exports['default'];

/***/ },
/* 182 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _warning = __webpack_require__(50);

	var _warning2 = _interopRequireDefault(_warning);

	var _MessageTrigger = __webpack_require__(11);

	var _MessageTrigger2 = _interopRequireDefault(_MessageTrigger);

	var _chainFunction = __webpack_require__(165);

	var _chainFunction2 = _interopRequireDefault(_chainFunction);

	var _contextType = __webpack_require__(148);

	var _contextType2 = _interopRequireDefault(_contextType);

	var _chainEvents = __webpack_require__(164);

	var _chainEvents2 = _interopRequireDefault(_chainEvents);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	/**
	 * A Form Button, for triggering validations for specific Field groups
	 */
	var Button = function (_React$Component) {
	  _inherits(Button, _React$Component);

	  function Button() {
	    _classCallCheck(this, Button);

	    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
	  }

	  Button.prototype.render = function render() {
	    var _this2 = this;

	    var _props = this.props;
	    var type = _props.type;
	    var group = _props.group;
	    var events = _props.events;
	    var Component = _props.component;

	    var props = _objectWithoutProperties(_props, ['type', 'group', 'events', 'component']);

	    var context = this.context.reactFormalContext || {};

	    (0, _warning2.default)(!group || type.toLowerCase() !== 'submit', 'You have specified a `group` prop with type="submit" on this Form.Button component. ' + 'submit type buttons will automatically trigger a form wide validation. ' + 'to trigger validation for just the group: `' + group + '` use type="button" instead.');

	    if (type.toLowerCase() === 'submit') return _react2.default.createElement(
	      Component,
	      _extends({}, props, { onClick: (0, _chainFunction2.default)(props.onClick, context.onSubmit) }),
	      this.props.children
	    );

	    return _react2.default.createElement(
	      _MessageTrigger2.default,
	      { group: group || '@all', events: events },
	      function (_ref) {
	        var _ = _ref.messages;

	        var triggerProps = _objectWithoutProperties(_ref, ['messages']);

	        return _react2.default.createElement(
	          Component,
	          _extends({}, (0, _chainEvents2.default)(events, [props, triggerProps]), {
	            type: type
	          }),
	          _this2.props.children
	        );
	      }
	    );
	  };

	  return Button;
	}(_react2.default.Component);

	Button.propTypes = {
	  /**
	   * The `<button/>` type
	   */
	  type: _react2.default.PropTypes.oneOf(['button', 'submit']),

	  /**
	   * Specify a group to validate, if empty the entire form will be validated.
	   * If the button type is 'submit' the group will be ignored and the
	   * entire form will be validated prior to submission.
	   */
	  group: _react2.default.PropTypes.string,

	  component: _react2.default.PropTypes.oneOfType([_react2.default.PropTypes.string, _react2.default.PropTypes.func]),

	  /**
	   * An array of event names that trigger validation.
	   */
	  events: _react2.default.PropTypes.arrayOf(_react2.default.PropTypes.string)
	};
	Button.contextTypes = _contextType2.default;
	Button.defaultProps = {
	  type: 'button',
	  component: 'button',
	  events: ['onClick']
	};
	exports.default = Button;
	module.exports = exports['default'];

/***/ },
/* 183 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	exports.default = function () {
	  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	    args[_key] = arguments[_key];
	  }

	  if (args.length === 2) return addType.apply(undefined, args);

	  for (var key in args[0]) {
	    if (has(args[0], key)) addType(key, args[0][key]);
	  }
	};

	var _types = __webpack_require__(170);

	var _types2 = _interopRequireDefault(_types);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var addType = function addType(type, Component) {
	  var compType = typeof Component === 'undefined' ? 'undefined' : _typeof(Component);

	  if (typeof type !== 'string') throw new TypeError('the `type` parameter must be a string');

	  if (compType !== 'string' && compType !== 'function') throw new TypeError('The `Component` parameter must be a valid React Component class or tag name');

	  _types2.default[type] = Component;
	};

	function has(o, k) {
	  return o ? Object.prototype.hasOwnProperty.call(o, k) : false;
	}
	module.exports = exports['default'];

/***/ }
/******/ ])
});
;