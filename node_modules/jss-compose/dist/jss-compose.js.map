{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap d851f175dc545c20c374","webpack:///./src/index.js","webpack:///./~/warning/browser.js"],"names":["jssCompose","setClass","rule","composition","refRule","options","sheet","getRule","substr","className","container","parent","classes","name","style","composes","named","Array","isArray","index","length"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;mBCDwBA,U;;AArCxB;;;;;;AAEA;;;;;;;AAOA,UAASC,QAAT,CAAkBC,IAAlB,EAAwBC,WAAxB,EAAqC;AACnC,OAAIA,YAAY,CAAZ,MAAmB,GAAvB,EAA4B;AAC1B,SAAMC,UAAUF,KAAKG,OAAL,CAAaC,KAAb,CAAmBC,OAAnB,CAA2BJ,YAAYK,MAAZ,CAAmB,CAAnB,CAA3B,CAAhB;;AAEA,SAAI,CAACJ,OAAL,EAAc;AACZ,8BAAQ,KAAR,kDAA+DF,IAA/D;AACA,cAAO,KAAP;AACD;AACD,SAAIE,YAAYF,IAAhB,EAAsB;AACpB,8BAAQ,KAAR,+CAA4DA,IAA5D;AACA,cAAO,KAAP;AACD;AACDD,cAASC,IAAT,EAAeE,QAAQK,SAAvB;AACA,YAAO,IAAP;AACD;;AAED,OAAMC,YAAYR,KAAKG,OAAL,CAAaM,MAA/B;AACAT,QAAKO,SAAL,UAAsBN,WAAtB;AACAO,aAAUE,OAAV,CAAkBV,KAAKW,IAAvB,IAA+BX,KAAKO,SAApC;AACA,UAAO,IAAP;AACD;;AAED;;;;;;AAMe,UAAST,UAAT,GAAsB;AACnC,UAAO,UAACE,IAAD,EAAU;AAAA,SACRY,KADQ,GACCZ,IADD,CACRY,KADQ;;;AAGf,SAAI,CAACA,KAAD,IAAU,CAACA,MAAMC,QAArB,EAA+B;;AAE/B,SAAIb,KAAKG,OAAL,CAAaW,KAAjB,EAAwB;AACtB,WAAIC,MAAMC,OAAN,CAAcJ,MAAMC,QAApB,CAAJ,EAAmC;AACjC,cAAK,IAAII,QAAQ,CAAjB,EAAoBA,QAAQL,MAAMC,QAAN,CAAeK,MAA3C,EAAmDD,OAAnD,EAA4D;AAC1DlB,oBAASC,IAAT,EAAeY,MAAMC,QAAN,CAAeI,KAAf,CAAf;AACD;AACF,QAJD,MAKKlB,SAASC,IAAT,EAAeY,MAAMC,QAArB;AACN;;AAED;AACA,YAAOD,MAAMC,QAAb;AACD,IAhBD;AAiBD,E;;;;;;ACvDD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,sBAAqB,WAAW;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA","file":"jss-compose.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"jssCompose\"] = factory();\n\telse\n\t\troot[\"jssCompose\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap d851f175dc545c20c374\n **/","import warning from 'warning'\n\n/**\n * Set class name.\n *\n * @param {Object} original rule\n * @param {String} compostion class string\n * @return {Boolean} flag, indicating function was successfull or not\n */\nfunction setClass(rule, composition) {\n  if (composition[0] === '$') {\n    const refRule = rule.options.sheet.getRule(composition.substr(1))\n\n    if (!refRule) {\n      warning(false, `[JSS] Referenced rule is not defined. \\r\\n%s`, rule)\n      return false\n    }\n    if (refRule === rule) {\n      warning(false, `[JSS] Cyclic composition detected. \\r\\n%s`, rule)\n      return false\n    }\n    setClass(rule, refRule.className)\n    return true\n  }\n\n  const container = rule.options.parent\n  rule.className += ` ${composition}`\n  container.classes[rule.name] = rule.className\n  return true\n}\n\n/**\n * Convert compose property to additional class, remove property from original styles.\n *\n * @param {Rule} rule\n * @api public\n */\nexport default function jssCompose() {\n  return (rule) => {\n    const {style} = rule\n\n    if (!style || !style.composes) return\n\n    if (rule.options.named) {\n      if (Array.isArray(style.composes)) {\n        for (let index = 0; index < style.composes.length; index++) {\n          setClass(rule, style.composes[index])\n        }\n      }\n      else setClass(rule, style.composes)\n    }\n\n    // Remove composes property to prevent infinite loop.\n    delete style.composes\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n'use strict';\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar warning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  warning = function(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n    if (format === undefined) {\n      throw new Error(\n        '`warning(condition, format, ...args)` requires a warning ' +\n        'message argument'\n      );\n    }\n\n    if (format.length < 10 || (/^[s\\W]*$/).test(format)) {\n      throw new Error(\n        'The warning format should be able to uniquely identify this ' +\n        'warning. Please, use a more descriptive format than: ' + format\n      );\n    }\n\n    if (!condition) {\n      var argIndex = 0;\n      var message = 'Warning: ' +\n        format.replace(/%s/g, function() {\n          return args[argIndex++];\n        });\n      if (typeof console !== 'undefined') {\n        console.error(message);\n      }\n      try {\n        // This error was thrown as a convenience so that you can use this stack\n        // to find the callsite that caused this warning to fire.\n        throw new Error(message);\n      } catch(x) {}\n    }\n  };\n}\n\nmodule.exports = warning;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/warning/browser.js\n ** module id = 1\n ** module chunks = 0\n **/"],"sourceRoot":""}